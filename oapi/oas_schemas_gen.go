// Code generated by ogen, DO NOT EDIT.

package oapi

import (
	"io"
	"net/url"
	"time"

	"github.com/go-faster/errors"
	"github.com/google/uuid"
	ht "github.com/ogen-go/ogen/http"
)

type APIKey struct {
	APIKey string
	Roles  []string
}

// GetAPIKey returns the value of APIKey.
func (s *APIKey) GetAPIKey() string {
	return s.APIKey
}

// GetRoles returns the value of Roles.
func (s *APIKey) GetRoles() []string {
	return s.Roles
}

// SetAPIKey sets the value of APIKey.
func (s *APIKey) SetAPIKey(val string) {
	s.APIKey = val
}

// SetRoles sets the value of Roles.
func (s *APIKey) SetRoles(val []string) {
	s.Roles = val
}

// Ref: #/components/schemas/APIKeyCreateDto
type APIKeyCreateDto struct {
	Name        OptString    `json:"name"`
	Permissions []Permission `json:"permissions"`
}

// GetName returns the value of Name.
func (s *APIKeyCreateDto) GetName() OptString {
	return s.Name
}

// GetPermissions returns the value of Permissions.
func (s *APIKeyCreateDto) GetPermissions() []Permission {
	return s.Permissions
}

// SetName sets the value of Name.
func (s *APIKeyCreateDto) SetName(val OptString) {
	s.Name = val
}

// SetPermissions sets the value of Permissions.
func (s *APIKeyCreateDto) SetPermissions(val []Permission) {
	s.Permissions = val
}

// Ref: #/components/schemas/APIKeyCreateResponseDto
type APIKeyCreateResponseDto struct {
	ApiKey APIKeyResponseDto `json:"apiKey"`
	Secret string            `json:"secret"`
}

// GetApiKey returns the value of ApiKey.
func (s *APIKeyCreateResponseDto) GetApiKey() APIKeyResponseDto {
	return s.ApiKey
}

// GetSecret returns the value of Secret.
func (s *APIKeyCreateResponseDto) GetSecret() string {
	return s.Secret
}

// SetApiKey sets the value of ApiKey.
func (s *APIKeyCreateResponseDto) SetApiKey(val APIKeyResponseDto) {
	s.ApiKey = val
}

// SetSecret sets the value of Secret.
func (s *APIKeyCreateResponseDto) SetSecret(val string) {
	s.Secret = val
}

// Ref: #/components/schemas/APIKeyResponseDto
type APIKeyResponseDto struct {
	CreatedAt   time.Time    `json:"createdAt"`
	ID          string       `json:"id"`
	Name        string       `json:"name"`
	Permissions []Permission `json:"permissions"`
	UpdatedAt   time.Time    `json:"updatedAt"`
}

// GetCreatedAt returns the value of CreatedAt.
func (s *APIKeyResponseDto) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetID returns the value of ID.
func (s *APIKeyResponseDto) GetID() string {
	return s.ID
}

// GetName returns the value of Name.
func (s *APIKeyResponseDto) GetName() string {
	return s.Name
}

// GetPermissions returns the value of Permissions.
func (s *APIKeyResponseDto) GetPermissions() []Permission {
	return s.Permissions
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *APIKeyResponseDto) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// SetCreatedAt sets the value of CreatedAt.
func (s *APIKeyResponseDto) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetID sets the value of ID.
func (s *APIKeyResponseDto) SetID(val string) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *APIKeyResponseDto) SetName(val string) {
	s.Name = val
}

// SetPermissions sets the value of Permissions.
func (s *APIKeyResponseDto) SetPermissions(val []Permission) {
	s.Permissions = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *APIKeyResponseDto) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// Ref: #/components/schemas/APIKeyUpdateDto
type APIKeyUpdateDto struct {
	Name        OptString    `json:"name"`
	Permissions []Permission `json:"permissions"`
}

// GetName returns the value of Name.
func (s *APIKeyUpdateDto) GetName() OptString {
	return s.Name
}

// GetPermissions returns the value of Permissions.
func (s *APIKeyUpdateDto) GetPermissions() []Permission {
	return s.Permissions
}

// SetName sets the value of Name.
func (s *APIKeyUpdateDto) SetName(val OptString) {
	s.Name = val
}

// SetPermissions sets the value of Permissions.
func (s *APIKeyUpdateDto) SetPermissions(val []Permission) {
	s.Permissions = val
}

// Ref: #/components/schemas/ActivityCreateDto
type ActivityCreateDto struct {
	AlbumId uuid.UUID    `json:"albumId"`
	AssetId OptUUID      `json:"assetId"`
	Comment OptString    `json:"comment"`
	Type    ReactionType `json:"type"`
}

// GetAlbumId returns the value of AlbumId.
func (s *ActivityCreateDto) GetAlbumId() uuid.UUID {
	return s.AlbumId
}

// GetAssetId returns the value of AssetId.
func (s *ActivityCreateDto) GetAssetId() OptUUID {
	return s.AssetId
}

// GetComment returns the value of Comment.
func (s *ActivityCreateDto) GetComment() OptString {
	return s.Comment
}

// GetType returns the value of Type.
func (s *ActivityCreateDto) GetType() ReactionType {
	return s.Type
}

// SetAlbumId sets the value of AlbumId.
func (s *ActivityCreateDto) SetAlbumId(val uuid.UUID) {
	s.AlbumId = val
}

// SetAssetId sets the value of AssetId.
func (s *ActivityCreateDto) SetAssetId(val OptUUID) {
	s.AssetId = val
}

// SetComment sets the value of Comment.
func (s *ActivityCreateDto) SetComment(val OptString) {
	s.Comment = val
}

// SetType sets the value of Type.
func (s *ActivityCreateDto) SetType(val ReactionType) {
	s.Type = val
}

// Ref: #/components/schemas/ActivityResponseDto
type ActivityResponseDto struct {
	AssetId   NilString       `json:"assetId"`
	Comment   OptNilString    `json:"comment"`
	CreatedAt time.Time       `json:"createdAt"`
	ID        string          `json:"id"`
	Type      ReactionType    `json:"type"`
	User      UserResponseDto `json:"user"`
}

// GetAssetId returns the value of AssetId.
func (s *ActivityResponseDto) GetAssetId() NilString {
	return s.AssetId
}

// GetComment returns the value of Comment.
func (s *ActivityResponseDto) GetComment() OptNilString {
	return s.Comment
}

// GetCreatedAt returns the value of CreatedAt.
func (s *ActivityResponseDto) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetID returns the value of ID.
func (s *ActivityResponseDto) GetID() string {
	return s.ID
}

// GetType returns the value of Type.
func (s *ActivityResponseDto) GetType() ReactionType {
	return s.Type
}

// GetUser returns the value of User.
func (s *ActivityResponseDto) GetUser() UserResponseDto {
	return s.User
}

// SetAssetId sets the value of AssetId.
func (s *ActivityResponseDto) SetAssetId(val NilString) {
	s.AssetId = val
}

// SetComment sets the value of Comment.
func (s *ActivityResponseDto) SetComment(val OptNilString) {
	s.Comment = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *ActivityResponseDto) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetID sets the value of ID.
func (s *ActivityResponseDto) SetID(val string) {
	s.ID = val
}

// SetType sets the value of Type.
func (s *ActivityResponseDto) SetType(val ReactionType) {
	s.Type = val
}

// SetUser sets the value of User.
func (s *ActivityResponseDto) SetUser(val UserResponseDto) {
	s.User = val
}

// Ref: #/components/schemas/ActivityStatisticsResponseDto
type ActivityStatisticsResponseDto struct {
	Comments int `json:"comments"`
	Likes    int `json:"likes"`
}

// GetComments returns the value of Comments.
func (s *ActivityStatisticsResponseDto) GetComments() int {
	return s.Comments
}

// GetLikes returns the value of Likes.
func (s *ActivityStatisticsResponseDto) GetLikes() int {
	return s.Likes
}

// SetComments sets the value of Comments.
func (s *ActivityStatisticsResponseDto) SetComments(val int) {
	s.Comments = val
}

// SetLikes sets the value of Likes.
func (s *ActivityStatisticsResponseDto) SetLikes(val int) {
	s.Likes = val
}

// Ref: #/components/schemas/AddUsersDto
type AddUsersDto struct {
	AlbumUsers []AlbumUserAddDto `json:"albumUsers"`
}

// GetAlbumUsers returns the value of AlbumUsers.
func (s *AddUsersDto) GetAlbumUsers() []AlbumUserAddDto {
	return s.AlbumUsers
}

// SetAlbumUsers sets the value of AlbumUsers.
func (s *AddUsersDto) SetAlbumUsers(val []AlbumUserAddDto) {
	s.AlbumUsers = val
}

// Ref: #/components/schemas/AdminOnboardingUpdateDto
type AdminOnboardingUpdateDto struct {
	IsOnboarded bool `json:"isOnboarded"`
}

// GetIsOnboarded returns the value of IsOnboarded.
func (s *AdminOnboardingUpdateDto) GetIsOnboarded() bool {
	return s.IsOnboarded
}

// SetIsOnboarded sets the value of IsOnboarded.
func (s *AdminOnboardingUpdateDto) SetIsOnboarded(val bool) {
	s.IsOnboarded = val
}

// Ref: #/components/schemas/AlbumResponseDto
type AlbumResponseDto struct {
	AlbumName                  string                        `json:"albumName"`
	AlbumThumbnailAssetId      NilString                     `json:"albumThumbnailAssetId"`
	AlbumUsers                 []AlbumUserResponseDto        `json:"albumUsers"`
	AssetCount                 int                           `json:"assetCount"`
	Assets                     []AssetResponseDto            `json:"assets"`
	ContributorCounts          []ContributorCountResponseDto `json:"contributorCounts"`
	CreatedAt                  time.Time                     `json:"createdAt"`
	Description                string                        `json:"description"`
	EndDate                    OptDateTime                   `json:"endDate"`
	HasSharedLink              bool                          `json:"hasSharedLink"`
	ID                         string                        `json:"id"`
	IsActivityEnabled          bool                          `json:"isActivityEnabled"`
	LastModifiedAssetTimestamp OptDateTime                   `json:"lastModifiedAssetTimestamp"`
	Order                      OptAssetOrder                 `json:"order"`
	Owner                      UserResponseDto               `json:"owner"`
	OwnerId                    string                        `json:"ownerId"`
	Shared                     bool                          `json:"shared"`
	StartDate                  OptDateTime                   `json:"startDate"`
	UpdatedAt                  time.Time                     `json:"updatedAt"`
}

// GetAlbumName returns the value of AlbumName.
func (s *AlbumResponseDto) GetAlbumName() string {
	return s.AlbumName
}

// GetAlbumThumbnailAssetId returns the value of AlbumThumbnailAssetId.
func (s *AlbumResponseDto) GetAlbumThumbnailAssetId() NilString {
	return s.AlbumThumbnailAssetId
}

// GetAlbumUsers returns the value of AlbumUsers.
func (s *AlbumResponseDto) GetAlbumUsers() []AlbumUserResponseDto {
	return s.AlbumUsers
}

// GetAssetCount returns the value of AssetCount.
func (s *AlbumResponseDto) GetAssetCount() int {
	return s.AssetCount
}

// GetAssets returns the value of Assets.
func (s *AlbumResponseDto) GetAssets() []AssetResponseDto {
	return s.Assets
}

// GetContributorCounts returns the value of ContributorCounts.
func (s *AlbumResponseDto) GetContributorCounts() []ContributorCountResponseDto {
	return s.ContributorCounts
}

// GetCreatedAt returns the value of CreatedAt.
func (s *AlbumResponseDto) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetDescription returns the value of Description.
func (s *AlbumResponseDto) GetDescription() string {
	return s.Description
}

// GetEndDate returns the value of EndDate.
func (s *AlbumResponseDto) GetEndDate() OptDateTime {
	return s.EndDate
}

// GetHasSharedLink returns the value of HasSharedLink.
func (s *AlbumResponseDto) GetHasSharedLink() bool {
	return s.HasSharedLink
}

// GetID returns the value of ID.
func (s *AlbumResponseDto) GetID() string {
	return s.ID
}

// GetIsActivityEnabled returns the value of IsActivityEnabled.
func (s *AlbumResponseDto) GetIsActivityEnabled() bool {
	return s.IsActivityEnabled
}

// GetLastModifiedAssetTimestamp returns the value of LastModifiedAssetTimestamp.
func (s *AlbumResponseDto) GetLastModifiedAssetTimestamp() OptDateTime {
	return s.LastModifiedAssetTimestamp
}

// GetOrder returns the value of Order.
func (s *AlbumResponseDto) GetOrder() OptAssetOrder {
	return s.Order
}

// GetOwner returns the value of Owner.
func (s *AlbumResponseDto) GetOwner() UserResponseDto {
	return s.Owner
}

// GetOwnerId returns the value of OwnerId.
func (s *AlbumResponseDto) GetOwnerId() string {
	return s.OwnerId
}

// GetShared returns the value of Shared.
func (s *AlbumResponseDto) GetShared() bool {
	return s.Shared
}

// GetStartDate returns the value of StartDate.
func (s *AlbumResponseDto) GetStartDate() OptDateTime {
	return s.StartDate
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *AlbumResponseDto) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// SetAlbumName sets the value of AlbumName.
func (s *AlbumResponseDto) SetAlbumName(val string) {
	s.AlbumName = val
}

// SetAlbumThumbnailAssetId sets the value of AlbumThumbnailAssetId.
func (s *AlbumResponseDto) SetAlbumThumbnailAssetId(val NilString) {
	s.AlbumThumbnailAssetId = val
}

// SetAlbumUsers sets the value of AlbumUsers.
func (s *AlbumResponseDto) SetAlbumUsers(val []AlbumUserResponseDto) {
	s.AlbumUsers = val
}

// SetAssetCount sets the value of AssetCount.
func (s *AlbumResponseDto) SetAssetCount(val int) {
	s.AssetCount = val
}

// SetAssets sets the value of Assets.
func (s *AlbumResponseDto) SetAssets(val []AssetResponseDto) {
	s.Assets = val
}

// SetContributorCounts sets the value of ContributorCounts.
func (s *AlbumResponseDto) SetContributorCounts(val []ContributorCountResponseDto) {
	s.ContributorCounts = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *AlbumResponseDto) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetDescription sets the value of Description.
func (s *AlbumResponseDto) SetDescription(val string) {
	s.Description = val
}

// SetEndDate sets the value of EndDate.
func (s *AlbumResponseDto) SetEndDate(val OptDateTime) {
	s.EndDate = val
}

// SetHasSharedLink sets the value of HasSharedLink.
func (s *AlbumResponseDto) SetHasSharedLink(val bool) {
	s.HasSharedLink = val
}

// SetID sets the value of ID.
func (s *AlbumResponseDto) SetID(val string) {
	s.ID = val
}

// SetIsActivityEnabled sets the value of IsActivityEnabled.
func (s *AlbumResponseDto) SetIsActivityEnabled(val bool) {
	s.IsActivityEnabled = val
}

// SetLastModifiedAssetTimestamp sets the value of LastModifiedAssetTimestamp.
func (s *AlbumResponseDto) SetLastModifiedAssetTimestamp(val OptDateTime) {
	s.LastModifiedAssetTimestamp = val
}

// SetOrder sets the value of Order.
func (s *AlbumResponseDto) SetOrder(val OptAssetOrder) {
	s.Order = val
}

// SetOwner sets the value of Owner.
func (s *AlbumResponseDto) SetOwner(val UserResponseDto) {
	s.Owner = val
}

// SetOwnerId sets the value of OwnerId.
func (s *AlbumResponseDto) SetOwnerId(val string) {
	s.OwnerId = val
}

// SetShared sets the value of Shared.
func (s *AlbumResponseDto) SetShared(val bool) {
	s.Shared = val
}

// SetStartDate sets the value of StartDate.
func (s *AlbumResponseDto) SetStartDate(val OptDateTime) {
	s.StartDate = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *AlbumResponseDto) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// Ref: #/components/schemas/AlbumStatisticsResponseDto
type AlbumStatisticsResponseDto struct {
	NotShared int `json:"notShared"`
	Owned     int `json:"owned"`
	Shared    int `json:"shared"`
}

// GetNotShared returns the value of NotShared.
func (s *AlbumStatisticsResponseDto) GetNotShared() int {
	return s.NotShared
}

// GetOwned returns the value of Owned.
func (s *AlbumStatisticsResponseDto) GetOwned() int {
	return s.Owned
}

// GetShared returns the value of Shared.
func (s *AlbumStatisticsResponseDto) GetShared() int {
	return s.Shared
}

// SetNotShared sets the value of NotShared.
func (s *AlbumStatisticsResponseDto) SetNotShared(val int) {
	s.NotShared = val
}

// SetOwned sets the value of Owned.
func (s *AlbumStatisticsResponseDto) SetOwned(val int) {
	s.Owned = val
}

// SetShared sets the value of Shared.
func (s *AlbumStatisticsResponseDto) SetShared(val int) {
	s.Shared = val
}

// Ref: #/components/schemas/AlbumUserAddDto
type AlbumUserAddDto struct {
	Role   OptAlbumUserRole `json:"role"`
	UserId uuid.UUID        `json:"userId"`
}

// GetRole returns the value of Role.
func (s *AlbumUserAddDto) GetRole() OptAlbumUserRole {
	return s.Role
}

// GetUserId returns the value of UserId.
func (s *AlbumUserAddDto) GetUserId() uuid.UUID {
	return s.UserId
}

// SetRole sets the value of Role.
func (s *AlbumUserAddDto) SetRole(val OptAlbumUserRole) {
	s.Role = val
}

// SetUserId sets the value of UserId.
func (s *AlbumUserAddDto) SetUserId(val uuid.UUID) {
	s.UserId = val
}

// Ref: #/components/schemas/AlbumUserCreateDto
type AlbumUserCreateDto struct {
	Role   AlbumUserRole `json:"role"`
	UserId uuid.UUID     `json:"userId"`
}

// GetRole returns the value of Role.
func (s *AlbumUserCreateDto) GetRole() AlbumUserRole {
	return s.Role
}

// GetUserId returns the value of UserId.
func (s *AlbumUserCreateDto) GetUserId() uuid.UUID {
	return s.UserId
}

// SetRole sets the value of Role.
func (s *AlbumUserCreateDto) SetRole(val AlbumUserRole) {
	s.Role = val
}

// SetUserId sets the value of UserId.
func (s *AlbumUserCreateDto) SetUserId(val uuid.UUID) {
	s.UserId = val
}

// Ref: #/components/schemas/AlbumUserResponseDto
type AlbumUserResponseDto struct {
	Role AlbumUserRole   `json:"role"`
	User UserResponseDto `json:"user"`
}

// GetRole returns the value of Role.
func (s *AlbumUserResponseDto) GetRole() AlbumUserRole {
	return s.Role
}

// GetUser returns the value of User.
func (s *AlbumUserResponseDto) GetUser() UserResponseDto {
	return s.User
}

// SetRole sets the value of Role.
func (s *AlbumUserResponseDto) SetRole(val AlbumUserRole) {
	s.Role = val
}

// SetUser sets the value of User.
func (s *AlbumUserResponseDto) SetUser(val UserResponseDto) {
	s.User = val
}

// Ref: #/components/schemas/AlbumUserRole
type AlbumUserRole string

const (
	AlbumUserRoleEditor AlbumUserRole = "editor"
	AlbumUserRoleViewer AlbumUserRole = "viewer"
)

// AllValues returns all AlbumUserRole values.
func (AlbumUserRole) AllValues() []AlbumUserRole {
	return []AlbumUserRole{
		AlbumUserRoleEditor,
		AlbumUserRoleViewer,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s AlbumUserRole) MarshalText() ([]byte, error) {
	switch s {
	case AlbumUserRoleEditor:
		return []byte(s), nil
	case AlbumUserRoleViewer:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *AlbumUserRole) UnmarshalText(data []byte) error {
	switch AlbumUserRole(data) {
	case AlbumUserRoleEditor:
		*s = AlbumUserRoleEditor
		return nil
	case AlbumUserRoleViewer:
		*s = AlbumUserRoleViewer
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/AlbumsAddAssetsDto
type AlbumsAddAssetsDto struct {
	AlbumIds []uuid.UUID `json:"albumIds"`
	AssetIds []uuid.UUID `json:"assetIds"`
}

// GetAlbumIds returns the value of AlbumIds.
func (s *AlbumsAddAssetsDto) GetAlbumIds() []uuid.UUID {
	return s.AlbumIds
}

// GetAssetIds returns the value of AssetIds.
func (s *AlbumsAddAssetsDto) GetAssetIds() []uuid.UUID {
	return s.AssetIds
}

// SetAlbumIds sets the value of AlbumIds.
func (s *AlbumsAddAssetsDto) SetAlbumIds(val []uuid.UUID) {
	s.AlbumIds = val
}

// SetAssetIds sets the value of AssetIds.
func (s *AlbumsAddAssetsDto) SetAssetIds(val []uuid.UUID) {
	s.AssetIds = val
}

// Ref: #/components/schemas/AlbumsAddAssetsResponseDto
type AlbumsAddAssetsResponseDto struct {
	Error   OptBulkIdErrorReason `json:"error"`
	Success bool                 `json:"success"`
}

// GetError returns the value of Error.
func (s *AlbumsAddAssetsResponseDto) GetError() OptBulkIdErrorReason {
	return s.Error
}

// GetSuccess returns the value of Success.
func (s *AlbumsAddAssetsResponseDto) GetSuccess() bool {
	return s.Success
}

// SetError sets the value of Error.
func (s *AlbumsAddAssetsResponseDto) SetError(val OptBulkIdErrorReason) {
	s.Error = val
}

// SetSuccess sets the value of Success.
func (s *AlbumsAddAssetsResponseDto) SetSuccess(val bool) {
	s.Success = val
}

// Ref: #/components/schemas/AlbumsResponse
type AlbumsResponse struct {
	DefaultAssetOrder AssetOrder `json:"defaultAssetOrder"`
}

// GetDefaultAssetOrder returns the value of DefaultAssetOrder.
func (s *AlbumsResponse) GetDefaultAssetOrder() AssetOrder {
	return s.DefaultAssetOrder
}

// SetDefaultAssetOrder sets the value of DefaultAssetOrder.
func (s *AlbumsResponse) SetDefaultAssetOrder(val AssetOrder) {
	s.DefaultAssetOrder = val
}

// Ref: #/components/schemas/AlbumsUpdate
type AlbumsUpdate struct {
	DefaultAssetOrder OptAssetOrder `json:"defaultAssetOrder"`
}

// GetDefaultAssetOrder returns the value of DefaultAssetOrder.
func (s *AlbumsUpdate) GetDefaultAssetOrder() OptAssetOrder {
	return s.DefaultAssetOrder
}

// SetDefaultAssetOrder sets the value of DefaultAssetOrder.
func (s *AlbumsUpdate) SetDefaultAssetOrder(val OptAssetOrder) {
	s.DefaultAssetOrder = val
}

// Ref: #/components/schemas/AllJobStatusResponseDto
type AllJobStatusResponseDto struct {
	BackgroundTask           JobStatusDto `json:"backgroundTask"`
	BackupDatabase           JobStatusDto `json:"backupDatabase"`
	DuplicateDetection       JobStatusDto `json:"duplicateDetection"`
	FaceDetection            JobStatusDto `json:"faceDetection"`
	FacialRecognition        JobStatusDto `json:"facialRecognition"`
	Library                  JobStatusDto `json:"library"`
	MetadataExtraction       JobStatusDto `json:"metadataExtraction"`
	Migration                JobStatusDto `json:"migration"`
	Notifications            JobStatusDto `json:"notifications"`
	Search                   JobStatusDto `json:"search"`
	Sidecar                  JobStatusDto `json:"sidecar"`
	SmartSearch              JobStatusDto `json:"smartSearch"`
	StorageTemplateMigration JobStatusDto `json:"storageTemplateMigration"`
	ThumbnailGeneration      JobStatusDto `json:"thumbnailGeneration"`
	VideoConversion          JobStatusDto `json:"videoConversion"`
}

// GetBackgroundTask returns the value of BackgroundTask.
func (s *AllJobStatusResponseDto) GetBackgroundTask() JobStatusDto {
	return s.BackgroundTask
}

// GetBackupDatabase returns the value of BackupDatabase.
func (s *AllJobStatusResponseDto) GetBackupDatabase() JobStatusDto {
	return s.BackupDatabase
}

// GetDuplicateDetection returns the value of DuplicateDetection.
func (s *AllJobStatusResponseDto) GetDuplicateDetection() JobStatusDto {
	return s.DuplicateDetection
}

// GetFaceDetection returns the value of FaceDetection.
func (s *AllJobStatusResponseDto) GetFaceDetection() JobStatusDto {
	return s.FaceDetection
}

// GetFacialRecognition returns the value of FacialRecognition.
func (s *AllJobStatusResponseDto) GetFacialRecognition() JobStatusDto {
	return s.FacialRecognition
}

// GetLibrary returns the value of Library.
func (s *AllJobStatusResponseDto) GetLibrary() JobStatusDto {
	return s.Library
}

// GetMetadataExtraction returns the value of MetadataExtraction.
func (s *AllJobStatusResponseDto) GetMetadataExtraction() JobStatusDto {
	return s.MetadataExtraction
}

// GetMigration returns the value of Migration.
func (s *AllJobStatusResponseDto) GetMigration() JobStatusDto {
	return s.Migration
}

// GetNotifications returns the value of Notifications.
func (s *AllJobStatusResponseDto) GetNotifications() JobStatusDto {
	return s.Notifications
}

// GetSearch returns the value of Search.
func (s *AllJobStatusResponseDto) GetSearch() JobStatusDto {
	return s.Search
}

// GetSidecar returns the value of Sidecar.
func (s *AllJobStatusResponseDto) GetSidecar() JobStatusDto {
	return s.Sidecar
}

// GetSmartSearch returns the value of SmartSearch.
func (s *AllJobStatusResponseDto) GetSmartSearch() JobStatusDto {
	return s.SmartSearch
}

// GetStorageTemplateMigration returns the value of StorageTemplateMigration.
func (s *AllJobStatusResponseDto) GetStorageTemplateMigration() JobStatusDto {
	return s.StorageTemplateMigration
}

// GetThumbnailGeneration returns the value of ThumbnailGeneration.
func (s *AllJobStatusResponseDto) GetThumbnailGeneration() JobStatusDto {
	return s.ThumbnailGeneration
}

// GetVideoConversion returns the value of VideoConversion.
func (s *AllJobStatusResponseDto) GetVideoConversion() JobStatusDto {
	return s.VideoConversion
}

// SetBackgroundTask sets the value of BackgroundTask.
func (s *AllJobStatusResponseDto) SetBackgroundTask(val JobStatusDto) {
	s.BackgroundTask = val
}

// SetBackupDatabase sets the value of BackupDatabase.
func (s *AllJobStatusResponseDto) SetBackupDatabase(val JobStatusDto) {
	s.BackupDatabase = val
}

// SetDuplicateDetection sets the value of DuplicateDetection.
func (s *AllJobStatusResponseDto) SetDuplicateDetection(val JobStatusDto) {
	s.DuplicateDetection = val
}

// SetFaceDetection sets the value of FaceDetection.
func (s *AllJobStatusResponseDto) SetFaceDetection(val JobStatusDto) {
	s.FaceDetection = val
}

// SetFacialRecognition sets the value of FacialRecognition.
func (s *AllJobStatusResponseDto) SetFacialRecognition(val JobStatusDto) {
	s.FacialRecognition = val
}

// SetLibrary sets the value of Library.
func (s *AllJobStatusResponseDto) SetLibrary(val JobStatusDto) {
	s.Library = val
}

// SetMetadataExtraction sets the value of MetadataExtraction.
func (s *AllJobStatusResponseDto) SetMetadataExtraction(val JobStatusDto) {
	s.MetadataExtraction = val
}

// SetMigration sets the value of Migration.
func (s *AllJobStatusResponseDto) SetMigration(val JobStatusDto) {
	s.Migration = val
}

// SetNotifications sets the value of Notifications.
func (s *AllJobStatusResponseDto) SetNotifications(val JobStatusDto) {
	s.Notifications = val
}

// SetSearch sets the value of Search.
func (s *AllJobStatusResponseDto) SetSearch(val JobStatusDto) {
	s.Search = val
}

// SetSidecar sets the value of Sidecar.
func (s *AllJobStatusResponseDto) SetSidecar(val JobStatusDto) {
	s.Sidecar = val
}

// SetSmartSearch sets the value of SmartSearch.
func (s *AllJobStatusResponseDto) SetSmartSearch(val JobStatusDto) {
	s.SmartSearch = val
}

// SetStorageTemplateMigration sets the value of StorageTemplateMigration.
func (s *AllJobStatusResponseDto) SetStorageTemplateMigration(val JobStatusDto) {
	s.StorageTemplateMigration = val
}

// SetThumbnailGeneration sets the value of ThumbnailGeneration.
func (s *AllJobStatusResponseDto) SetThumbnailGeneration(val JobStatusDto) {
	s.ThumbnailGeneration = val
}

// SetVideoConversion sets the value of VideoConversion.
func (s *AllJobStatusResponseDto) SetVideoConversion(val JobStatusDto) {
	s.VideoConversion = val
}

// Ref: #/components/schemas/AssetBulkDeleteDto
type AssetBulkDeleteDto struct {
	Force OptBool     `json:"force"`
	Ids   []uuid.UUID `json:"ids"`
}

// GetForce returns the value of Force.
func (s *AssetBulkDeleteDto) GetForce() OptBool {
	return s.Force
}

// GetIds returns the value of Ids.
func (s *AssetBulkDeleteDto) GetIds() []uuid.UUID {
	return s.Ids
}

// SetForce sets the value of Force.
func (s *AssetBulkDeleteDto) SetForce(val OptBool) {
	s.Force = val
}

// SetIds sets the value of Ids.
func (s *AssetBulkDeleteDto) SetIds(val []uuid.UUID) {
	s.Ids = val
}

// Ref: #/components/schemas/AssetBulkUpdateDto
type AssetBulkUpdateDto struct {
	DateTimeOriginal OptString          `json:"dateTimeOriginal"`
	DateTimeRelative OptFloat64         `json:"dateTimeRelative"`
	Description      OptString          `json:"description"`
	DuplicateId      OptNilString       `json:"duplicateId"`
	Ids              []uuid.UUID        `json:"ids"`
	IsFavorite       OptBool            `json:"isFavorite"`
	Latitude         OptFloat64         `json:"latitude"`
	Longitude        OptFloat64         `json:"longitude"`
	Rating           OptFloat64         `json:"rating"`
	TimeZone         OptString          `json:"timeZone"`
	Visibility       OptAssetVisibility `json:"visibility"`
}

// GetDateTimeOriginal returns the value of DateTimeOriginal.
func (s *AssetBulkUpdateDto) GetDateTimeOriginal() OptString {
	return s.DateTimeOriginal
}

// GetDateTimeRelative returns the value of DateTimeRelative.
func (s *AssetBulkUpdateDto) GetDateTimeRelative() OptFloat64 {
	return s.DateTimeRelative
}

// GetDescription returns the value of Description.
func (s *AssetBulkUpdateDto) GetDescription() OptString {
	return s.Description
}

// GetDuplicateId returns the value of DuplicateId.
func (s *AssetBulkUpdateDto) GetDuplicateId() OptNilString {
	return s.DuplicateId
}

// GetIds returns the value of Ids.
func (s *AssetBulkUpdateDto) GetIds() []uuid.UUID {
	return s.Ids
}

// GetIsFavorite returns the value of IsFavorite.
func (s *AssetBulkUpdateDto) GetIsFavorite() OptBool {
	return s.IsFavorite
}

// GetLatitude returns the value of Latitude.
func (s *AssetBulkUpdateDto) GetLatitude() OptFloat64 {
	return s.Latitude
}

// GetLongitude returns the value of Longitude.
func (s *AssetBulkUpdateDto) GetLongitude() OptFloat64 {
	return s.Longitude
}

// GetRating returns the value of Rating.
func (s *AssetBulkUpdateDto) GetRating() OptFloat64 {
	return s.Rating
}

// GetTimeZone returns the value of TimeZone.
func (s *AssetBulkUpdateDto) GetTimeZone() OptString {
	return s.TimeZone
}

// GetVisibility returns the value of Visibility.
func (s *AssetBulkUpdateDto) GetVisibility() OptAssetVisibility {
	return s.Visibility
}

// SetDateTimeOriginal sets the value of DateTimeOriginal.
func (s *AssetBulkUpdateDto) SetDateTimeOriginal(val OptString) {
	s.DateTimeOriginal = val
}

// SetDateTimeRelative sets the value of DateTimeRelative.
func (s *AssetBulkUpdateDto) SetDateTimeRelative(val OptFloat64) {
	s.DateTimeRelative = val
}

// SetDescription sets the value of Description.
func (s *AssetBulkUpdateDto) SetDescription(val OptString) {
	s.Description = val
}

// SetDuplicateId sets the value of DuplicateId.
func (s *AssetBulkUpdateDto) SetDuplicateId(val OptNilString) {
	s.DuplicateId = val
}

// SetIds sets the value of Ids.
func (s *AssetBulkUpdateDto) SetIds(val []uuid.UUID) {
	s.Ids = val
}

// SetIsFavorite sets the value of IsFavorite.
func (s *AssetBulkUpdateDto) SetIsFavorite(val OptBool) {
	s.IsFavorite = val
}

// SetLatitude sets the value of Latitude.
func (s *AssetBulkUpdateDto) SetLatitude(val OptFloat64) {
	s.Latitude = val
}

// SetLongitude sets the value of Longitude.
func (s *AssetBulkUpdateDto) SetLongitude(val OptFloat64) {
	s.Longitude = val
}

// SetRating sets the value of Rating.
func (s *AssetBulkUpdateDto) SetRating(val OptFloat64) {
	s.Rating = val
}

// SetTimeZone sets the value of TimeZone.
func (s *AssetBulkUpdateDto) SetTimeZone(val OptString) {
	s.TimeZone = val
}

// SetVisibility sets the value of Visibility.
func (s *AssetBulkUpdateDto) SetVisibility(val OptAssetVisibility) {
	s.Visibility = val
}

// Ref: #/components/schemas/AssetBulkUploadCheckDto
type AssetBulkUploadCheckDto struct {
	Assets []AssetBulkUploadCheckItem `json:"assets"`
}

// GetAssets returns the value of Assets.
func (s *AssetBulkUploadCheckDto) GetAssets() []AssetBulkUploadCheckItem {
	return s.Assets
}

// SetAssets sets the value of Assets.
func (s *AssetBulkUploadCheckDto) SetAssets(val []AssetBulkUploadCheckItem) {
	s.Assets = val
}

// Ref: #/components/schemas/AssetBulkUploadCheckItem
type AssetBulkUploadCheckItem struct {
	// Base64 or hex encoded sha1 hash.
	Checksum string `json:"checksum"`
	ID       string `json:"id"`
}

// GetChecksum returns the value of Checksum.
func (s *AssetBulkUploadCheckItem) GetChecksum() string {
	return s.Checksum
}

// GetID returns the value of ID.
func (s *AssetBulkUploadCheckItem) GetID() string {
	return s.ID
}

// SetChecksum sets the value of Checksum.
func (s *AssetBulkUploadCheckItem) SetChecksum(val string) {
	s.Checksum = val
}

// SetID sets the value of ID.
func (s *AssetBulkUploadCheckItem) SetID(val string) {
	s.ID = val
}

// Ref: #/components/schemas/AssetBulkUploadCheckResponseDto
type AssetBulkUploadCheckResponseDto struct {
	Results []AssetBulkUploadCheckResult `json:"results"`
}

// GetResults returns the value of Results.
func (s *AssetBulkUploadCheckResponseDto) GetResults() []AssetBulkUploadCheckResult {
	return s.Results
}

// SetResults sets the value of Results.
func (s *AssetBulkUploadCheckResponseDto) SetResults(val []AssetBulkUploadCheckResult) {
	s.Results = val
}

// Ref: #/components/schemas/AssetBulkUploadCheckResult
type AssetBulkUploadCheckResult struct {
	Action    AssetBulkUploadCheckResultAction    `json:"action"`
	AssetId   OptString                           `json:"assetId"`
	ID        string                              `json:"id"`
	IsTrashed OptBool                             `json:"isTrashed"`
	Reason    OptAssetBulkUploadCheckResultReason `json:"reason"`
}

// GetAction returns the value of Action.
func (s *AssetBulkUploadCheckResult) GetAction() AssetBulkUploadCheckResultAction {
	return s.Action
}

// GetAssetId returns the value of AssetId.
func (s *AssetBulkUploadCheckResult) GetAssetId() OptString {
	return s.AssetId
}

// GetID returns the value of ID.
func (s *AssetBulkUploadCheckResult) GetID() string {
	return s.ID
}

// GetIsTrashed returns the value of IsTrashed.
func (s *AssetBulkUploadCheckResult) GetIsTrashed() OptBool {
	return s.IsTrashed
}

// GetReason returns the value of Reason.
func (s *AssetBulkUploadCheckResult) GetReason() OptAssetBulkUploadCheckResultReason {
	return s.Reason
}

// SetAction sets the value of Action.
func (s *AssetBulkUploadCheckResult) SetAction(val AssetBulkUploadCheckResultAction) {
	s.Action = val
}

// SetAssetId sets the value of AssetId.
func (s *AssetBulkUploadCheckResult) SetAssetId(val OptString) {
	s.AssetId = val
}

// SetID sets the value of ID.
func (s *AssetBulkUploadCheckResult) SetID(val string) {
	s.ID = val
}

// SetIsTrashed sets the value of IsTrashed.
func (s *AssetBulkUploadCheckResult) SetIsTrashed(val OptBool) {
	s.IsTrashed = val
}

// SetReason sets the value of Reason.
func (s *AssetBulkUploadCheckResult) SetReason(val OptAssetBulkUploadCheckResultReason) {
	s.Reason = val
}

type AssetBulkUploadCheckResultAction string

const (
	AssetBulkUploadCheckResultActionAccept AssetBulkUploadCheckResultAction = "accept"
	AssetBulkUploadCheckResultActionReject AssetBulkUploadCheckResultAction = "reject"
)

// AllValues returns all AssetBulkUploadCheckResultAction values.
func (AssetBulkUploadCheckResultAction) AllValues() []AssetBulkUploadCheckResultAction {
	return []AssetBulkUploadCheckResultAction{
		AssetBulkUploadCheckResultActionAccept,
		AssetBulkUploadCheckResultActionReject,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s AssetBulkUploadCheckResultAction) MarshalText() ([]byte, error) {
	switch s {
	case AssetBulkUploadCheckResultActionAccept:
		return []byte(s), nil
	case AssetBulkUploadCheckResultActionReject:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *AssetBulkUploadCheckResultAction) UnmarshalText(data []byte) error {
	switch AssetBulkUploadCheckResultAction(data) {
	case AssetBulkUploadCheckResultActionAccept:
		*s = AssetBulkUploadCheckResultActionAccept
		return nil
	case AssetBulkUploadCheckResultActionReject:
		*s = AssetBulkUploadCheckResultActionReject
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type AssetBulkUploadCheckResultReason string

const (
	AssetBulkUploadCheckResultReasonDuplicate         AssetBulkUploadCheckResultReason = "duplicate"
	AssetBulkUploadCheckResultReasonUnsupportedFormat AssetBulkUploadCheckResultReason = "unsupported-format"
)

// AllValues returns all AssetBulkUploadCheckResultReason values.
func (AssetBulkUploadCheckResultReason) AllValues() []AssetBulkUploadCheckResultReason {
	return []AssetBulkUploadCheckResultReason{
		AssetBulkUploadCheckResultReasonDuplicate,
		AssetBulkUploadCheckResultReasonUnsupportedFormat,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s AssetBulkUploadCheckResultReason) MarshalText() ([]byte, error) {
	switch s {
	case AssetBulkUploadCheckResultReasonDuplicate:
		return []byte(s), nil
	case AssetBulkUploadCheckResultReasonUnsupportedFormat:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *AssetBulkUploadCheckResultReason) UnmarshalText(data []byte) error {
	switch AssetBulkUploadCheckResultReason(data) {
	case AssetBulkUploadCheckResultReasonDuplicate:
		*s = AssetBulkUploadCheckResultReasonDuplicate
		return nil
	case AssetBulkUploadCheckResultReasonUnsupportedFormat:
		*s = AssetBulkUploadCheckResultReasonUnsupportedFormat
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/AssetDeltaSyncDto
type AssetDeltaSyncDto struct {
	UpdatedAfter time.Time   `json:"updatedAfter"`
	UserIds      []uuid.UUID `json:"userIds"`
}

// GetUpdatedAfter returns the value of UpdatedAfter.
func (s *AssetDeltaSyncDto) GetUpdatedAfter() time.Time {
	return s.UpdatedAfter
}

// GetUserIds returns the value of UserIds.
func (s *AssetDeltaSyncDto) GetUserIds() []uuid.UUID {
	return s.UserIds
}

// SetUpdatedAfter sets the value of UpdatedAfter.
func (s *AssetDeltaSyncDto) SetUpdatedAfter(val time.Time) {
	s.UpdatedAfter = val
}

// SetUserIds sets the value of UserIds.
func (s *AssetDeltaSyncDto) SetUserIds(val []uuid.UUID) {
	s.UserIds = val
}

// Ref: #/components/schemas/AssetDeltaSyncResponseDto
type AssetDeltaSyncResponseDto struct {
	Deleted       []string           `json:"deleted"`
	NeedsFullSync bool               `json:"needsFullSync"`
	Upserted      []AssetResponseDto `json:"upserted"`
}

// GetDeleted returns the value of Deleted.
func (s *AssetDeltaSyncResponseDto) GetDeleted() []string {
	return s.Deleted
}

// GetNeedsFullSync returns the value of NeedsFullSync.
func (s *AssetDeltaSyncResponseDto) GetNeedsFullSync() bool {
	return s.NeedsFullSync
}

// GetUpserted returns the value of Upserted.
func (s *AssetDeltaSyncResponseDto) GetUpserted() []AssetResponseDto {
	return s.Upserted
}

// SetDeleted sets the value of Deleted.
func (s *AssetDeltaSyncResponseDto) SetDeleted(val []string) {
	s.Deleted = val
}

// SetNeedsFullSync sets the value of NeedsFullSync.
func (s *AssetDeltaSyncResponseDto) SetNeedsFullSync(val bool) {
	s.NeedsFullSync = val
}

// SetUpserted sets the value of Upserted.
func (s *AssetDeltaSyncResponseDto) SetUpserted(val []AssetResponseDto) {
	s.Upserted = val
}

// Ref: #/components/schemas/AssetFaceCreateDto
type AssetFaceCreateDto struct {
	AssetId     uuid.UUID `json:"assetId"`
	Height      int       `json:"height"`
	ImageHeight int       `json:"imageHeight"`
	ImageWidth  int       `json:"imageWidth"`
	PersonId    uuid.UUID `json:"personId"`
	Width       int       `json:"width"`
	X           int       `json:"x"`
	Y           int       `json:"y"`
}

// GetAssetId returns the value of AssetId.
func (s *AssetFaceCreateDto) GetAssetId() uuid.UUID {
	return s.AssetId
}

// GetHeight returns the value of Height.
func (s *AssetFaceCreateDto) GetHeight() int {
	return s.Height
}

// GetImageHeight returns the value of ImageHeight.
func (s *AssetFaceCreateDto) GetImageHeight() int {
	return s.ImageHeight
}

// GetImageWidth returns the value of ImageWidth.
func (s *AssetFaceCreateDto) GetImageWidth() int {
	return s.ImageWidth
}

// GetPersonId returns the value of PersonId.
func (s *AssetFaceCreateDto) GetPersonId() uuid.UUID {
	return s.PersonId
}

// GetWidth returns the value of Width.
func (s *AssetFaceCreateDto) GetWidth() int {
	return s.Width
}

// GetX returns the value of X.
func (s *AssetFaceCreateDto) GetX() int {
	return s.X
}

// GetY returns the value of Y.
func (s *AssetFaceCreateDto) GetY() int {
	return s.Y
}

// SetAssetId sets the value of AssetId.
func (s *AssetFaceCreateDto) SetAssetId(val uuid.UUID) {
	s.AssetId = val
}

// SetHeight sets the value of Height.
func (s *AssetFaceCreateDto) SetHeight(val int) {
	s.Height = val
}

// SetImageHeight sets the value of ImageHeight.
func (s *AssetFaceCreateDto) SetImageHeight(val int) {
	s.ImageHeight = val
}

// SetImageWidth sets the value of ImageWidth.
func (s *AssetFaceCreateDto) SetImageWidth(val int) {
	s.ImageWidth = val
}

// SetPersonId sets the value of PersonId.
func (s *AssetFaceCreateDto) SetPersonId(val uuid.UUID) {
	s.PersonId = val
}

// SetWidth sets the value of Width.
func (s *AssetFaceCreateDto) SetWidth(val int) {
	s.Width = val
}

// SetX sets the value of X.
func (s *AssetFaceCreateDto) SetX(val int) {
	s.X = val
}

// SetY sets the value of Y.
func (s *AssetFaceCreateDto) SetY(val int) {
	s.Y = val
}

// Ref: #/components/schemas/AssetFaceDeleteDto
type AssetFaceDeleteDto struct {
	Force bool `json:"force"`
}

// GetForce returns the value of Force.
func (s *AssetFaceDeleteDto) GetForce() bool {
	return s.Force
}

// SetForce sets the value of Force.
func (s *AssetFaceDeleteDto) SetForce(val bool) {
	s.Force = val
}

// Ref: #/components/schemas/AssetFaceResponseDto
type AssetFaceResponseDto struct {
	BoundingBoxX1 int                  `json:"boundingBoxX1"`
	BoundingBoxX2 int                  `json:"boundingBoxX2"`
	BoundingBoxY1 int                  `json:"boundingBoxY1"`
	BoundingBoxY2 int                  `json:"boundingBoxY2"`
	ID            uuid.UUID            `json:"id"`
	ImageHeight   int                  `json:"imageHeight"`
	ImageWidth    int                  `json:"imageWidth"`
	Person        NilPersonResponseDto `json:"person"`
	SourceType    OptSourceType        `json:"sourceType"`
}

// GetBoundingBoxX1 returns the value of BoundingBoxX1.
func (s *AssetFaceResponseDto) GetBoundingBoxX1() int {
	return s.BoundingBoxX1
}

// GetBoundingBoxX2 returns the value of BoundingBoxX2.
func (s *AssetFaceResponseDto) GetBoundingBoxX2() int {
	return s.BoundingBoxX2
}

// GetBoundingBoxY1 returns the value of BoundingBoxY1.
func (s *AssetFaceResponseDto) GetBoundingBoxY1() int {
	return s.BoundingBoxY1
}

// GetBoundingBoxY2 returns the value of BoundingBoxY2.
func (s *AssetFaceResponseDto) GetBoundingBoxY2() int {
	return s.BoundingBoxY2
}

// GetID returns the value of ID.
func (s *AssetFaceResponseDto) GetID() uuid.UUID {
	return s.ID
}

// GetImageHeight returns the value of ImageHeight.
func (s *AssetFaceResponseDto) GetImageHeight() int {
	return s.ImageHeight
}

// GetImageWidth returns the value of ImageWidth.
func (s *AssetFaceResponseDto) GetImageWidth() int {
	return s.ImageWidth
}

// GetPerson returns the value of Person.
func (s *AssetFaceResponseDto) GetPerson() NilPersonResponseDto {
	return s.Person
}

// GetSourceType returns the value of SourceType.
func (s *AssetFaceResponseDto) GetSourceType() OptSourceType {
	return s.SourceType
}

// SetBoundingBoxX1 sets the value of BoundingBoxX1.
func (s *AssetFaceResponseDto) SetBoundingBoxX1(val int) {
	s.BoundingBoxX1 = val
}

// SetBoundingBoxX2 sets the value of BoundingBoxX2.
func (s *AssetFaceResponseDto) SetBoundingBoxX2(val int) {
	s.BoundingBoxX2 = val
}

// SetBoundingBoxY1 sets the value of BoundingBoxY1.
func (s *AssetFaceResponseDto) SetBoundingBoxY1(val int) {
	s.BoundingBoxY1 = val
}

// SetBoundingBoxY2 sets the value of BoundingBoxY2.
func (s *AssetFaceResponseDto) SetBoundingBoxY2(val int) {
	s.BoundingBoxY2 = val
}

// SetID sets the value of ID.
func (s *AssetFaceResponseDto) SetID(val uuid.UUID) {
	s.ID = val
}

// SetImageHeight sets the value of ImageHeight.
func (s *AssetFaceResponseDto) SetImageHeight(val int) {
	s.ImageHeight = val
}

// SetImageWidth sets the value of ImageWidth.
func (s *AssetFaceResponseDto) SetImageWidth(val int) {
	s.ImageWidth = val
}

// SetPerson sets the value of Person.
func (s *AssetFaceResponseDto) SetPerson(val NilPersonResponseDto) {
	s.Person = val
}

// SetSourceType sets the value of SourceType.
func (s *AssetFaceResponseDto) SetSourceType(val OptSourceType) {
	s.SourceType = val
}

// Ref: #/components/schemas/AssetFaceUpdateDto
type AssetFaceUpdateDto struct {
	Data []AssetFaceUpdateItem `json:"data"`
}

// GetData returns the value of Data.
func (s *AssetFaceUpdateDto) GetData() []AssetFaceUpdateItem {
	return s.Data
}

// SetData sets the value of Data.
func (s *AssetFaceUpdateDto) SetData(val []AssetFaceUpdateItem) {
	s.Data = val
}

// Ref: #/components/schemas/AssetFaceUpdateItem
type AssetFaceUpdateItem struct {
	AssetId  uuid.UUID `json:"assetId"`
	PersonId uuid.UUID `json:"personId"`
}

// GetAssetId returns the value of AssetId.
func (s *AssetFaceUpdateItem) GetAssetId() uuid.UUID {
	return s.AssetId
}

// GetPersonId returns the value of PersonId.
func (s *AssetFaceUpdateItem) GetPersonId() uuid.UUID {
	return s.PersonId
}

// SetAssetId sets the value of AssetId.
func (s *AssetFaceUpdateItem) SetAssetId(val uuid.UUID) {
	s.AssetId = val
}

// SetPersonId sets the value of PersonId.
func (s *AssetFaceUpdateItem) SetPersonId(val uuid.UUID) {
	s.PersonId = val
}

// Ref: #/components/schemas/AssetFaceWithoutPersonResponseDto
type AssetFaceWithoutPersonResponseDto struct {
	BoundingBoxX1 int           `json:"boundingBoxX1"`
	BoundingBoxX2 int           `json:"boundingBoxX2"`
	BoundingBoxY1 int           `json:"boundingBoxY1"`
	BoundingBoxY2 int           `json:"boundingBoxY2"`
	ID            uuid.UUID     `json:"id"`
	ImageHeight   int           `json:"imageHeight"`
	ImageWidth    int           `json:"imageWidth"`
	SourceType    OptSourceType `json:"sourceType"`
}

// GetBoundingBoxX1 returns the value of BoundingBoxX1.
func (s *AssetFaceWithoutPersonResponseDto) GetBoundingBoxX1() int {
	return s.BoundingBoxX1
}

// GetBoundingBoxX2 returns the value of BoundingBoxX2.
func (s *AssetFaceWithoutPersonResponseDto) GetBoundingBoxX2() int {
	return s.BoundingBoxX2
}

// GetBoundingBoxY1 returns the value of BoundingBoxY1.
func (s *AssetFaceWithoutPersonResponseDto) GetBoundingBoxY1() int {
	return s.BoundingBoxY1
}

// GetBoundingBoxY2 returns the value of BoundingBoxY2.
func (s *AssetFaceWithoutPersonResponseDto) GetBoundingBoxY2() int {
	return s.BoundingBoxY2
}

// GetID returns the value of ID.
func (s *AssetFaceWithoutPersonResponseDto) GetID() uuid.UUID {
	return s.ID
}

// GetImageHeight returns the value of ImageHeight.
func (s *AssetFaceWithoutPersonResponseDto) GetImageHeight() int {
	return s.ImageHeight
}

// GetImageWidth returns the value of ImageWidth.
func (s *AssetFaceWithoutPersonResponseDto) GetImageWidth() int {
	return s.ImageWidth
}

// GetSourceType returns the value of SourceType.
func (s *AssetFaceWithoutPersonResponseDto) GetSourceType() OptSourceType {
	return s.SourceType
}

// SetBoundingBoxX1 sets the value of BoundingBoxX1.
func (s *AssetFaceWithoutPersonResponseDto) SetBoundingBoxX1(val int) {
	s.BoundingBoxX1 = val
}

// SetBoundingBoxX2 sets the value of BoundingBoxX2.
func (s *AssetFaceWithoutPersonResponseDto) SetBoundingBoxX2(val int) {
	s.BoundingBoxX2 = val
}

// SetBoundingBoxY1 sets the value of BoundingBoxY1.
func (s *AssetFaceWithoutPersonResponseDto) SetBoundingBoxY1(val int) {
	s.BoundingBoxY1 = val
}

// SetBoundingBoxY2 sets the value of BoundingBoxY2.
func (s *AssetFaceWithoutPersonResponseDto) SetBoundingBoxY2(val int) {
	s.BoundingBoxY2 = val
}

// SetID sets the value of ID.
func (s *AssetFaceWithoutPersonResponseDto) SetID(val uuid.UUID) {
	s.ID = val
}

// SetImageHeight sets the value of ImageHeight.
func (s *AssetFaceWithoutPersonResponseDto) SetImageHeight(val int) {
	s.ImageHeight = val
}

// SetImageWidth sets the value of ImageWidth.
func (s *AssetFaceWithoutPersonResponseDto) SetImageWidth(val int) {
	s.ImageWidth = val
}

// SetSourceType sets the value of SourceType.
func (s *AssetFaceWithoutPersonResponseDto) SetSourceType(val OptSourceType) {
	s.SourceType = val
}

// Ref: #/components/schemas/AssetFullSyncDto
type AssetFullSyncDto struct {
	LastId       OptUUID   `json:"lastId"`
	Limit        int       `json:"limit"`
	UpdatedUntil time.Time `json:"updatedUntil"`
	UserId       OptUUID   `json:"userId"`
}

// GetLastId returns the value of LastId.
func (s *AssetFullSyncDto) GetLastId() OptUUID {
	return s.LastId
}

// GetLimit returns the value of Limit.
func (s *AssetFullSyncDto) GetLimit() int {
	return s.Limit
}

// GetUpdatedUntil returns the value of UpdatedUntil.
func (s *AssetFullSyncDto) GetUpdatedUntil() time.Time {
	return s.UpdatedUntil
}

// GetUserId returns the value of UserId.
func (s *AssetFullSyncDto) GetUserId() OptUUID {
	return s.UserId
}

// SetLastId sets the value of LastId.
func (s *AssetFullSyncDto) SetLastId(val OptUUID) {
	s.LastId = val
}

// SetLimit sets the value of Limit.
func (s *AssetFullSyncDto) SetLimit(val int) {
	s.Limit = val
}

// SetUpdatedUntil sets the value of UpdatedUntil.
func (s *AssetFullSyncDto) SetUpdatedUntil(val time.Time) {
	s.UpdatedUntil = val
}

// SetUserId sets the value of UserId.
func (s *AssetFullSyncDto) SetUserId(val OptUUID) {
	s.UserId = val
}

// Ref: #/components/schemas/AssetIdsDto
type AssetIdsDto struct {
	AssetIds []uuid.UUID `json:"assetIds"`
}

// GetAssetIds returns the value of AssetIds.
func (s *AssetIdsDto) GetAssetIds() []uuid.UUID {
	return s.AssetIds
}

// SetAssetIds sets the value of AssetIds.
func (s *AssetIdsDto) SetAssetIds(val []uuid.UUID) {
	s.AssetIds = val
}

// Ref: #/components/schemas/AssetIdsResponseDto
type AssetIdsResponseDto struct {
	AssetId string                      `json:"assetId"`
	Error   OptAssetIdsResponseDtoError `json:"error"`
	Success bool                        `json:"success"`
}

// GetAssetId returns the value of AssetId.
func (s *AssetIdsResponseDto) GetAssetId() string {
	return s.AssetId
}

// GetError returns the value of Error.
func (s *AssetIdsResponseDto) GetError() OptAssetIdsResponseDtoError {
	return s.Error
}

// GetSuccess returns the value of Success.
func (s *AssetIdsResponseDto) GetSuccess() bool {
	return s.Success
}

// SetAssetId sets the value of AssetId.
func (s *AssetIdsResponseDto) SetAssetId(val string) {
	s.AssetId = val
}

// SetError sets the value of Error.
func (s *AssetIdsResponseDto) SetError(val OptAssetIdsResponseDtoError) {
	s.Error = val
}

// SetSuccess sets the value of Success.
func (s *AssetIdsResponseDto) SetSuccess(val bool) {
	s.Success = val
}

type AssetIdsResponseDtoError string

const (
	AssetIdsResponseDtoErrorDuplicate    AssetIdsResponseDtoError = "duplicate"
	AssetIdsResponseDtoErrorNoPermission AssetIdsResponseDtoError = "no_permission"
	AssetIdsResponseDtoErrorNotFound     AssetIdsResponseDtoError = "not_found"
)

// AllValues returns all AssetIdsResponseDtoError values.
func (AssetIdsResponseDtoError) AllValues() []AssetIdsResponseDtoError {
	return []AssetIdsResponseDtoError{
		AssetIdsResponseDtoErrorDuplicate,
		AssetIdsResponseDtoErrorNoPermission,
		AssetIdsResponseDtoErrorNotFound,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s AssetIdsResponseDtoError) MarshalText() ([]byte, error) {
	switch s {
	case AssetIdsResponseDtoErrorDuplicate:
		return []byte(s), nil
	case AssetIdsResponseDtoErrorNoPermission:
		return []byte(s), nil
	case AssetIdsResponseDtoErrorNotFound:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *AssetIdsResponseDtoError) UnmarshalText(data []byte) error {
	switch AssetIdsResponseDtoError(data) {
	case AssetIdsResponseDtoErrorDuplicate:
		*s = AssetIdsResponseDtoErrorDuplicate
		return nil
	case AssetIdsResponseDtoErrorNoPermission:
		*s = AssetIdsResponseDtoErrorNoPermission
		return nil
	case AssetIdsResponseDtoErrorNotFound:
		*s = AssetIdsResponseDtoErrorNotFound
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/AssetJobName
type AssetJobName string

const (
	AssetJobNameRefreshFaces        AssetJobName = "refresh-faces"
	AssetJobNameRefreshMetadata     AssetJobName = "refresh-metadata"
	AssetJobNameRegenerateThumbnail AssetJobName = "regenerate-thumbnail"
	AssetJobNameTranscodeVideo      AssetJobName = "transcode-video"
)

// AllValues returns all AssetJobName values.
func (AssetJobName) AllValues() []AssetJobName {
	return []AssetJobName{
		AssetJobNameRefreshFaces,
		AssetJobNameRefreshMetadata,
		AssetJobNameRegenerateThumbnail,
		AssetJobNameTranscodeVideo,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s AssetJobName) MarshalText() ([]byte, error) {
	switch s {
	case AssetJobNameRefreshFaces:
		return []byte(s), nil
	case AssetJobNameRefreshMetadata:
		return []byte(s), nil
	case AssetJobNameRegenerateThumbnail:
		return []byte(s), nil
	case AssetJobNameTranscodeVideo:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *AssetJobName) UnmarshalText(data []byte) error {
	switch AssetJobName(data) {
	case AssetJobNameRefreshFaces:
		*s = AssetJobNameRefreshFaces
		return nil
	case AssetJobNameRefreshMetadata:
		*s = AssetJobNameRefreshMetadata
		return nil
	case AssetJobNameRegenerateThumbnail:
		*s = AssetJobNameRegenerateThumbnail
		return nil
	case AssetJobNameTranscodeVideo:
		*s = AssetJobNameTranscodeVideo
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/AssetJobsDto
type AssetJobsDto struct {
	AssetIds []uuid.UUID  `json:"assetIds"`
	Name     AssetJobName `json:"name"`
}

// GetAssetIds returns the value of AssetIds.
func (s *AssetJobsDto) GetAssetIds() []uuid.UUID {
	return s.AssetIds
}

// GetName returns the value of Name.
func (s *AssetJobsDto) GetName() AssetJobName {
	return s.Name
}

// SetAssetIds sets the value of AssetIds.
func (s *AssetJobsDto) SetAssetIds(val []uuid.UUID) {
	s.AssetIds = val
}

// SetName sets the value of Name.
func (s *AssetJobsDto) SetName(val AssetJobName) {
	s.Name = val
}

// Ref: #/components/schemas/AssetMediaCreateDto
type AssetMediaCreateDtoMultipart struct {
	AssetData        ht.MultipartFile             `json:"assetData"`
	DeviceAssetId    string                       `json:"deviceAssetId"`
	DeviceId         string                       `json:"deviceId"`
	Duration         OptString                    `json:"duration"`
	FileCreatedAt    time.Time                    `json:"fileCreatedAt"`
	FileModifiedAt   time.Time                    `json:"fileModifiedAt"`
	Filename         OptString                    `json:"filename"`
	IsFavorite       OptBool                      `json:"isFavorite"`
	LivePhotoVideoId OptUUID                      `json:"livePhotoVideoId"`
	Metadata         []AssetMetadataUpsertItemDto `json:"metadata"`
	SidecarData      OptMultipartFile             `json:"sidecarData"`
	Visibility       OptAssetVisibility           `json:"visibility"`
}

// GetAssetData returns the value of AssetData.
func (s *AssetMediaCreateDtoMultipart) GetAssetData() ht.MultipartFile {
	return s.AssetData
}

// GetDeviceAssetId returns the value of DeviceAssetId.
func (s *AssetMediaCreateDtoMultipart) GetDeviceAssetId() string {
	return s.DeviceAssetId
}

// GetDeviceId returns the value of DeviceId.
func (s *AssetMediaCreateDtoMultipart) GetDeviceId() string {
	return s.DeviceId
}

// GetDuration returns the value of Duration.
func (s *AssetMediaCreateDtoMultipart) GetDuration() OptString {
	return s.Duration
}

// GetFileCreatedAt returns the value of FileCreatedAt.
func (s *AssetMediaCreateDtoMultipart) GetFileCreatedAt() time.Time {
	return s.FileCreatedAt
}

// GetFileModifiedAt returns the value of FileModifiedAt.
func (s *AssetMediaCreateDtoMultipart) GetFileModifiedAt() time.Time {
	return s.FileModifiedAt
}

// GetFilename returns the value of Filename.
func (s *AssetMediaCreateDtoMultipart) GetFilename() OptString {
	return s.Filename
}

// GetIsFavorite returns the value of IsFavorite.
func (s *AssetMediaCreateDtoMultipart) GetIsFavorite() OptBool {
	return s.IsFavorite
}

// GetLivePhotoVideoId returns the value of LivePhotoVideoId.
func (s *AssetMediaCreateDtoMultipart) GetLivePhotoVideoId() OptUUID {
	return s.LivePhotoVideoId
}

// GetMetadata returns the value of Metadata.
func (s *AssetMediaCreateDtoMultipart) GetMetadata() []AssetMetadataUpsertItemDto {
	return s.Metadata
}

// GetSidecarData returns the value of SidecarData.
func (s *AssetMediaCreateDtoMultipart) GetSidecarData() OptMultipartFile {
	return s.SidecarData
}

// GetVisibility returns the value of Visibility.
func (s *AssetMediaCreateDtoMultipart) GetVisibility() OptAssetVisibility {
	return s.Visibility
}

// SetAssetData sets the value of AssetData.
func (s *AssetMediaCreateDtoMultipart) SetAssetData(val ht.MultipartFile) {
	s.AssetData = val
}

// SetDeviceAssetId sets the value of DeviceAssetId.
func (s *AssetMediaCreateDtoMultipart) SetDeviceAssetId(val string) {
	s.DeviceAssetId = val
}

// SetDeviceId sets the value of DeviceId.
func (s *AssetMediaCreateDtoMultipart) SetDeviceId(val string) {
	s.DeviceId = val
}

// SetDuration sets the value of Duration.
func (s *AssetMediaCreateDtoMultipart) SetDuration(val OptString) {
	s.Duration = val
}

// SetFileCreatedAt sets the value of FileCreatedAt.
func (s *AssetMediaCreateDtoMultipart) SetFileCreatedAt(val time.Time) {
	s.FileCreatedAt = val
}

// SetFileModifiedAt sets the value of FileModifiedAt.
func (s *AssetMediaCreateDtoMultipart) SetFileModifiedAt(val time.Time) {
	s.FileModifiedAt = val
}

// SetFilename sets the value of Filename.
func (s *AssetMediaCreateDtoMultipart) SetFilename(val OptString) {
	s.Filename = val
}

// SetIsFavorite sets the value of IsFavorite.
func (s *AssetMediaCreateDtoMultipart) SetIsFavorite(val OptBool) {
	s.IsFavorite = val
}

// SetLivePhotoVideoId sets the value of LivePhotoVideoId.
func (s *AssetMediaCreateDtoMultipart) SetLivePhotoVideoId(val OptUUID) {
	s.LivePhotoVideoId = val
}

// SetMetadata sets the value of Metadata.
func (s *AssetMediaCreateDtoMultipart) SetMetadata(val []AssetMetadataUpsertItemDto) {
	s.Metadata = val
}

// SetSidecarData sets the value of SidecarData.
func (s *AssetMediaCreateDtoMultipart) SetSidecarData(val OptMultipartFile) {
	s.SidecarData = val
}

// SetVisibility sets the value of Visibility.
func (s *AssetMediaCreateDtoMultipart) SetVisibility(val OptAssetVisibility) {
	s.Visibility = val
}

// Ref: #/components/schemas/AssetMediaReplaceDto
type AssetMediaReplaceDtoMultipart struct {
	AssetData      ht.MultipartFile `json:"assetData"`
	DeviceAssetId  string           `json:"deviceAssetId"`
	DeviceId       string           `json:"deviceId"`
	Duration       OptString        `json:"duration"`
	FileCreatedAt  time.Time        `json:"fileCreatedAt"`
	FileModifiedAt time.Time        `json:"fileModifiedAt"`
	Filename       OptString        `json:"filename"`
}

// GetAssetData returns the value of AssetData.
func (s *AssetMediaReplaceDtoMultipart) GetAssetData() ht.MultipartFile {
	return s.AssetData
}

// GetDeviceAssetId returns the value of DeviceAssetId.
func (s *AssetMediaReplaceDtoMultipart) GetDeviceAssetId() string {
	return s.DeviceAssetId
}

// GetDeviceId returns the value of DeviceId.
func (s *AssetMediaReplaceDtoMultipart) GetDeviceId() string {
	return s.DeviceId
}

// GetDuration returns the value of Duration.
func (s *AssetMediaReplaceDtoMultipart) GetDuration() OptString {
	return s.Duration
}

// GetFileCreatedAt returns the value of FileCreatedAt.
func (s *AssetMediaReplaceDtoMultipart) GetFileCreatedAt() time.Time {
	return s.FileCreatedAt
}

// GetFileModifiedAt returns the value of FileModifiedAt.
func (s *AssetMediaReplaceDtoMultipart) GetFileModifiedAt() time.Time {
	return s.FileModifiedAt
}

// GetFilename returns the value of Filename.
func (s *AssetMediaReplaceDtoMultipart) GetFilename() OptString {
	return s.Filename
}

// SetAssetData sets the value of AssetData.
func (s *AssetMediaReplaceDtoMultipart) SetAssetData(val ht.MultipartFile) {
	s.AssetData = val
}

// SetDeviceAssetId sets the value of DeviceAssetId.
func (s *AssetMediaReplaceDtoMultipart) SetDeviceAssetId(val string) {
	s.DeviceAssetId = val
}

// SetDeviceId sets the value of DeviceId.
func (s *AssetMediaReplaceDtoMultipart) SetDeviceId(val string) {
	s.DeviceId = val
}

// SetDuration sets the value of Duration.
func (s *AssetMediaReplaceDtoMultipart) SetDuration(val OptString) {
	s.Duration = val
}

// SetFileCreatedAt sets the value of FileCreatedAt.
func (s *AssetMediaReplaceDtoMultipart) SetFileCreatedAt(val time.Time) {
	s.FileCreatedAt = val
}

// SetFileModifiedAt sets the value of FileModifiedAt.
func (s *AssetMediaReplaceDtoMultipart) SetFileModifiedAt(val time.Time) {
	s.FileModifiedAt = val
}

// SetFilename sets the value of Filename.
func (s *AssetMediaReplaceDtoMultipart) SetFilename(val OptString) {
	s.Filename = val
}

// Ref: #/components/schemas/AssetMediaResponseDto
type AssetMediaResponseDto struct {
	ID     string           `json:"id"`
	Status AssetMediaStatus `json:"status"`
}

// GetID returns the value of ID.
func (s *AssetMediaResponseDto) GetID() string {
	return s.ID
}

// GetStatus returns the value of Status.
func (s *AssetMediaResponseDto) GetStatus() AssetMediaStatus {
	return s.Status
}

// SetID sets the value of ID.
func (s *AssetMediaResponseDto) SetID(val string) {
	s.ID = val
}

// SetStatus sets the value of Status.
func (s *AssetMediaResponseDto) SetStatus(val AssetMediaStatus) {
	s.Status = val
}

// Ref: #/components/schemas/AssetMediaSize
type AssetMediaSize string

const (
	AssetMediaSizeFullsize  AssetMediaSize = "fullsize"
	AssetMediaSizePreview   AssetMediaSize = "preview"
	AssetMediaSizeThumbnail AssetMediaSize = "thumbnail"
)

// AllValues returns all AssetMediaSize values.
func (AssetMediaSize) AllValues() []AssetMediaSize {
	return []AssetMediaSize{
		AssetMediaSizeFullsize,
		AssetMediaSizePreview,
		AssetMediaSizeThumbnail,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s AssetMediaSize) MarshalText() ([]byte, error) {
	switch s {
	case AssetMediaSizeFullsize:
		return []byte(s), nil
	case AssetMediaSizePreview:
		return []byte(s), nil
	case AssetMediaSizeThumbnail:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *AssetMediaSize) UnmarshalText(data []byte) error {
	switch AssetMediaSize(data) {
	case AssetMediaSizeFullsize:
		*s = AssetMediaSizeFullsize
		return nil
	case AssetMediaSizePreview:
		*s = AssetMediaSizePreview
		return nil
	case AssetMediaSizeThumbnail:
		*s = AssetMediaSizeThumbnail
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/AssetMediaStatus
type AssetMediaStatus string

const (
	AssetMediaStatusCreated   AssetMediaStatus = "created"
	AssetMediaStatusReplaced  AssetMediaStatus = "replaced"
	AssetMediaStatusDuplicate AssetMediaStatus = "duplicate"
)

// AllValues returns all AssetMediaStatus values.
func (AssetMediaStatus) AllValues() []AssetMediaStatus {
	return []AssetMediaStatus{
		AssetMediaStatusCreated,
		AssetMediaStatusReplaced,
		AssetMediaStatusDuplicate,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s AssetMediaStatus) MarshalText() ([]byte, error) {
	switch s {
	case AssetMediaStatusCreated:
		return []byte(s), nil
	case AssetMediaStatusReplaced:
		return []byte(s), nil
	case AssetMediaStatusDuplicate:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *AssetMediaStatus) UnmarshalText(data []byte) error {
	switch AssetMediaStatus(data) {
	case AssetMediaStatusCreated:
		*s = AssetMediaStatusCreated
		return nil
	case AssetMediaStatusReplaced:
		*s = AssetMediaStatusReplaced
		return nil
	case AssetMediaStatusDuplicate:
		*s = AssetMediaStatusDuplicate
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/AssetMetadataKey
type AssetMetadataKey string

const (
	AssetMetadataKeyMobileApp AssetMetadataKey = "mobile-app"
)

// AllValues returns all AssetMetadataKey values.
func (AssetMetadataKey) AllValues() []AssetMetadataKey {
	return []AssetMetadataKey{
		AssetMetadataKeyMobileApp,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s AssetMetadataKey) MarshalText() ([]byte, error) {
	switch s {
	case AssetMetadataKeyMobileApp:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *AssetMetadataKey) UnmarshalText(data []byte) error {
	switch AssetMetadataKey(data) {
	case AssetMetadataKeyMobileApp:
		*s = AssetMetadataKeyMobileApp
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/AssetMetadataResponseDto
type AssetMetadataResponseDto struct {
	Key       AssetMetadataKey              `json:"key"`
	UpdatedAt time.Time                     `json:"updatedAt"`
	Value     AssetMetadataResponseDtoValue `json:"value"`
}

// GetKey returns the value of Key.
func (s *AssetMetadataResponseDto) GetKey() AssetMetadataKey {
	return s.Key
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *AssetMetadataResponseDto) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetValue returns the value of Value.
func (s *AssetMetadataResponseDto) GetValue() AssetMetadataResponseDtoValue {
	return s.Value
}

// SetKey sets the value of Key.
func (s *AssetMetadataResponseDto) SetKey(val AssetMetadataKey) {
	s.Key = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *AssetMetadataResponseDto) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetValue sets the value of Value.
func (s *AssetMetadataResponseDto) SetValue(val AssetMetadataResponseDtoValue) {
	s.Value = val
}

type AssetMetadataResponseDtoValue struct{}

// Ref: #/components/schemas/AssetMetadataUpsertDto
type AssetMetadataUpsertDto struct {
	Items []AssetMetadataUpsertItemDto `json:"items"`
}

// GetItems returns the value of Items.
func (s *AssetMetadataUpsertDto) GetItems() []AssetMetadataUpsertItemDto {
	return s.Items
}

// SetItems sets the value of Items.
func (s *AssetMetadataUpsertDto) SetItems(val []AssetMetadataUpsertItemDto) {
	s.Items = val
}

// Ref: #/components/schemas/AssetMetadataUpsertItemDto
type AssetMetadataUpsertItemDto struct {
	Key   AssetMetadataKey                `json:"key"`
	Value AssetMetadataUpsertItemDtoValue `json:"value"`
}

// GetKey returns the value of Key.
func (s *AssetMetadataUpsertItemDto) GetKey() AssetMetadataKey {
	return s.Key
}

// GetValue returns the value of Value.
func (s *AssetMetadataUpsertItemDto) GetValue() AssetMetadataUpsertItemDtoValue {
	return s.Value
}

// SetKey sets the value of Key.
func (s *AssetMetadataUpsertItemDto) SetKey(val AssetMetadataKey) {
	s.Key = val
}

// SetValue sets the value of Value.
func (s *AssetMetadataUpsertItemDto) SetValue(val AssetMetadataUpsertItemDtoValue) {
	s.Value = val
}

type AssetMetadataUpsertItemDtoValue struct{}

// Ref: #/components/schemas/AssetOrder
type AssetOrder string

const (
	AssetOrderAsc  AssetOrder = "asc"
	AssetOrderDesc AssetOrder = "desc"
)

// AllValues returns all AssetOrder values.
func (AssetOrder) AllValues() []AssetOrder {
	return []AssetOrder{
		AssetOrderAsc,
		AssetOrderDesc,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s AssetOrder) MarshalText() ([]byte, error) {
	switch s {
	case AssetOrderAsc:
		return []byte(s), nil
	case AssetOrderDesc:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *AssetOrder) UnmarshalText(data []byte) error {
	switch AssetOrder(data) {
	case AssetOrderAsc:
		*s = AssetOrderAsc
		return nil
	case AssetOrderDesc:
		*s = AssetOrderDesc
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/AssetResponseDto
type AssetResponseDto struct {
	// Base64 encoded sha1 hash.
	Checksum string `json:"checksum"`
	// The UTC timestamp when the asset was originally uploaded to Immich.
	CreatedAt     time.Time          `json:"createdAt"`
	DeviceAssetId string             `json:"deviceAssetId"`
	DeviceId      string             `json:"deviceId"`
	DuplicateId   OptNilString       `json:"duplicateId"`
	Duration      string             `json:"duration"`
	ExifInfo      OptExifResponseDto `json:"exifInfo"`
	// The actual UTC timestamp when the file was created/captured, preserving timezone information. This
	// is the authoritative timestamp for chronological sorting within timeline groups. Combined with
	// timezone data, this can be used to determine the exact moment the photo was taken.
	FileCreatedAt time.Time `json:"fileCreatedAt"`
	// The UTC timestamp when the file was last modified on the filesystem. This reflects the last time
	// the physical file was changed, which may be different from when the photo was originally taken.
	FileModifiedAt time.Time `json:"fileModifiedAt"`
	HasMetadata    bool      `json:"hasMetadata"`
	ID             string    `json:"id"`
	IsArchived     bool      `json:"isArchived"`
	IsFavorite     bool      `json:"isFavorite"`
	IsOffline      bool      `json:"isOffline"`
	IsTrashed      bool      `json:"isTrashed"`
	// This property was deprecated in v1.106.0.
	//
	// Deprecated: schema marks this property as deprecated.
	LibraryId        OptNilString `json:"libraryId"`
	LivePhotoVideoId OptNilString `json:"livePhotoVideoId"`
	// The local date and time when the photo/video was taken, derived from EXIF metadata. This
	// represents the photographer's local time regardless of timezone, stored as a timezone-agnostic
	// timestamp. Used for timeline grouping by "local" days and months.
	LocalDateTime    time.Time                    `json:"localDateTime"`
	OriginalFileName string                       `json:"originalFileName"`
	OriginalMimeType OptString                    `json:"originalMimeType"`
	OriginalPath     string                       `json:"originalPath"`
	Owner            OptUserResponseDto           `json:"owner"`
	OwnerId          string                       `json:"ownerId"`
	People           []PersonWithFacesResponseDto `json:"people"`
	// This property was deprecated in v1.113.0.
	//
	// Deprecated: schema marks this property as deprecated.
	Resized         OptBool                             `json:"resized"`
	Stack           OptNilAssetStackResponseDto         `json:"stack"`
	Tags            []TagResponseDto                    `json:"tags"`
	Thumbhash       NilString                           `json:"thumbhash"`
	Type            AssetTypeEnum                       `json:"type"`
	UnassignedFaces []AssetFaceWithoutPersonResponseDto `json:"unassignedFaces"`
	// The UTC timestamp when the asset record was last updated in the database. This is automatically
	// maintained by the database and reflects when any field in the asset was last modified.
	UpdatedAt  time.Time       `json:"updatedAt"`
	Visibility AssetVisibility `json:"visibility"`
}

// GetChecksum returns the value of Checksum.
func (s *AssetResponseDto) GetChecksum() string {
	return s.Checksum
}

// GetCreatedAt returns the value of CreatedAt.
func (s *AssetResponseDto) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetDeviceAssetId returns the value of DeviceAssetId.
func (s *AssetResponseDto) GetDeviceAssetId() string {
	return s.DeviceAssetId
}

// GetDeviceId returns the value of DeviceId.
func (s *AssetResponseDto) GetDeviceId() string {
	return s.DeviceId
}

// GetDuplicateId returns the value of DuplicateId.
func (s *AssetResponseDto) GetDuplicateId() OptNilString {
	return s.DuplicateId
}

// GetDuration returns the value of Duration.
func (s *AssetResponseDto) GetDuration() string {
	return s.Duration
}

// GetExifInfo returns the value of ExifInfo.
func (s *AssetResponseDto) GetExifInfo() OptExifResponseDto {
	return s.ExifInfo
}

// GetFileCreatedAt returns the value of FileCreatedAt.
func (s *AssetResponseDto) GetFileCreatedAt() time.Time {
	return s.FileCreatedAt
}

// GetFileModifiedAt returns the value of FileModifiedAt.
func (s *AssetResponseDto) GetFileModifiedAt() time.Time {
	return s.FileModifiedAt
}

// GetHasMetadata returns the value of HasMetadata.
func (s *AssetResponseDto) GetHasMetadata() bool {
	return s.HasMetadata
}

// GetID returns the value of ID.
func (s *AssetResponseDto) GetID() string {
	return s.ID
}

// GetIsArchived returns the value of IsArchived.
func (s *AssetResponseDto) GetIsArchived() bool {
	return s.IsArchived
}

// GetIsFavorite returns the value of IsFavorite.
func (s *AssetResponseDto) GetIsFavorite() bool {
	return s.IsFavorite
}

// GetIsOffline returns the value of IsOffline.
func (s *AssetResponseDto) GetIsOffline() bool {
	return s.IsOffline
}

// GetIsTrashed returns the value of IsTrashed.
func (s *AssetResponseDto) GetIsTrashed() bool {
	return s.IsTrashed
}

// GetLibraryId returns the value of LibraryId.
func (s *AssetResponseDto) GetLibraryId() OptNilString {
	return s.LibraryId
}

// GetLivePhotoVideoId returns the value of LivePhotoVideoId.
func (s *AssetResponseDto) GetLivePhotoVideoId() OptNilString {
	return s.LivePhotoVideoId
}

// GetLocalDateTime returns the value of LocalDateTime.
func (s *AssetResponseDto) GetLocalDateTime() time.Time {
	return s.LocalDateTime
}

// GetOriginalFileName returns the value of OriginalFileName.
func (s *AssetResponseDto) GetOriginalFileName() string {
	return s.OriginalFileName
}

// GetOriginalMimeType returns the value of OriginalMimeType.
func (s *AssetResponseDto) GetOriginalMimeType() OptString {
	return s.OriginalMimeType
}

// GetOriginalPath returns the value of OriginalPath.
func (s *AssetResponseDto) GetOriginalPath() string {
	return s.OriginalPath
}

// GetOwner returns the value of Owner.
func (s *AssetResponseDto) GetOwner() OptUserResponseDto {
	return s.Owner
}

// GetOwnerId returns the value of OwnerId.
func (s *AssetResponseDto) GetOwnerId() string {
	return s.OwnerId
}

// GetPeople returns the value of People.
func (s *AssetResponseDto) GetPeople() []PersonWithFacesResponseDto {
	return s.People
}

// GetResized returns the value of Resized.
func (s *AssetResponseDto) GetResized() OptBool {
	return s.Resized
}

// GetStack returns the value of Stack.
func (s *AssetResponseDto) GetStack() OptNilAssetStackResponseDto {
	return s.Stack
}

// GetTags returns the value of Tags.
func (s *AssetResponseDto) GetTags() []TagResponseDto {
	return s.Tags
}

// GetThumbhash returns the value of Thumbhash.
func (s *AssetResponseDto) GetThumbhash() NilString {
	return s.Thumbhash
}

// GetType returns the value of Type.
func (s *AssetResponseDto) GetType() AssetTypeEnum {
	return s.Type
}

// GetUnassignedFaces returns the value of UnassignedFaces.
func (s *AssetResponseDto) GetUnassignedFaces() []AssetFaceWithoutPersonResponseDto {
	return s.UnassignedFaces
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *AssetResponseDto) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetVisibility returns the value of Visibility.
func (s *AssetResponseDto) GetVisibility() AssetVisibility {
	return s.Visibility
}

// SetChecksum sets the value of Checksum.
func (s *AssetResponseDto) SetChecksum(val string) {
	s.Checksum = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *AssetResponseDto) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetDeviceAssetId sets the value of DeviceAssetId.
func (s *AssetResponseDto) SetDeviceAssetId(val string) {
	s.DeviceAssetId = val
}

// SetDeviceId sets the value of DeviceId.
func (s *AssetResponseDto) SetDeviceId(val string) {
	s.DeviceId = val
}

// SetDuplicateId sets the value of DuplicateId.
func (s *AssetResponseDto) SetDuplicateId(val OptNilString) {
	s.DuplicateId = val
}

// SetDuration sets the value of Duration.
func (s *AssetResponseDto) SetDuration(val string) {
	s.Duration = val
}

// SetExifInfo sets the value of ExifInfo.
func (s *AssetResponseDto) SetExifInfo(val OptExifResponseDto) {
	s.ExifInfo = val
}

// SetFileCreatedAt sets the value of FileCreatedAt.
func (s *AssetResponseDto) SetFileCreatedAt(val time.Time) {
	s.FileCreatedAt = val
}

// SetFileModifiedAt sets the value of FileModifiedAt.
func (s *AssetResponseDto) SetFileModifiedAt(val time.Time) {
	s.FileModifiedAt = val
}

// SetHasMetadata sets the value of HasMetadata.
func (s *AssetResponseDto) SetHasMetadata(val bool) {
	s.HasMetadata = val
}

// SetID sets the value of ID.
func (s *AssetResponseDto) SetID(val string) {
	s.ID = val
}

// SetIsArchived sets the value of IsArchived.
func (s *AssetResponseDto) SetIsArchived(val bool) {
	s.IsArchived = val
}

// SetIsFavorite sets the value of IsFavorite.
func (s *AssetResponseDto) SetIsFavorite(val bool) {
	s.IsFavorite = val
}

// SetIsOffline sets the value of IsOffline.
func (s *AssetResponseDto) SetIsOffline(val bool) {
	s.IsOffline = val
}

// SetIsTrashed sets the value of IsTrashed.
func (s *AssetResponseDto) SetIsTrashed(val bool) {
	s.IsTrashed = val
}

// SetLibraryId sets the value of LibraryId.
func (s *AssetResponseDto) SetLibraryId(val OptNilString) {
	s.LibraryId = val
}

// SetLivePhotoVideoId sets the value of LivePhotoVideoId.
func (s *AssetResponseDto) SetLivePhotoVideoId(val OptNilString) {
	s.LivePhotoVideoId = val
}

// SetLocalDateTime sets the value of LocalDateTime.
func (s *AssetResponseDto) SetLocalDateTime(val time.Time) {
	s.LocalDateTime = val
}

// SetOriginalFileName sets the value of OriginalFileName.
func (s *AssetResponseDto) SetOriginalFileName(val string) {
	s.OriginalFileName = val
}

// SetOriginalMimeType sets the value of OriginalMimeType.
func (s *AssetResponseDto) SetOriginalMimeType(val OptString) {
	s.OriginalMimeType = val
}

// SetOriginalPath sets the value of OriginalPath.
func (s *AssetResponseDto) SetOriginalPath(val string) {
	s.OriginalPath = val
}

// SetOwner sets the value of Owner.
func (s *AssetResponseDto) SetOwner(val OptUserResponseDto) {
	s.Owner = val
}

// SetOwnerId sets the value of OwnerId.
func (s *AssetResponseDto) SetOwnerId(val string) {
	s.OwnerId = val
}

// SetPeople sets the value of People.
func (s *AssetResponseDto) SetPeople(val []PersonWithFacesResponseDto) {
	s.People = val
}

// SetResized sets the value of Resized.
func (s *AssetResponseDto) SetResized(val OptBool) {
	s.Resized = val
}

// SetStack sets the value of Stack.
func (s *AssetResponseDto) SetStack(val OptNilAssetStackResponseDto) {
	s.Stack = val
}

// SetTags sets the value of Tags.
func (s *AssetResponseDto) SetTags(val []TagResponseDto) {
	s.Tags = val
}

// SetThumbhash sets the value of Thumbhash.
func (s *AssetResponseDto) SetThumbhash(val NilString) {
	s.Thumbhash = val
}

// SetType sets the value of Type.
func (s *AssetResponseDto) SetType(val AssetTypeEnum) {
	s.Type = val
}

// SetUnassignedFaces sets the value of UnassignedFaces.
func (s *AssetResponseDto) SetUnassignedFaces(val []AssetFaceWithoutPersonResponseDto) {
	s.UnassignedFaces = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *AssetResponseDto) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetVisibility sets the value of Visibility.
func (s *AssetResponseDto) SetVisibility(val AssetVisibility) {
	s.Visibility = val
}

// Ref: #/components/schemas/AssetStackResponseDto
type AssetStackResponseDto struct {
	AssetCount     int    `json:"assetCount"`
	ID             string `json:"id"`
	PrimaryAssetId string `json:"primaryAssetId"`
}

// GetAssetCount returns the value of AssetCount.
func (s *AssetStackResponseDto) GetAssetCount() int {
	return s.AssetCount
}

// GetID returns the value of ID.
func (s *AssetStackResponseDto) GetID() string {
	return s.ID
}

// GetPrimaryAssetId returns the value of PrimaryAssetId.
func (s *AssetStackResponseDto) GetPrimaryAssetId() string {
	return s.PrimaryAssetId
}

// SetAssetCount sets the value of AssetCount.
func (s *AssetStackResponseDto) SetAssetCount(val int) {
	s.AssetCount = val
}

// SetID sets the value of ID.
func (s *AssetStackResponseDto) SetID(val string) {
	s.ID = val
}

// SetPrimaryAssetId sets the value of PrimaryAssetId.
func (s *AssetStackResponseDto) SetPrimaryAssetId(val string) {
	s.PrimaryAssetId = val
}

// Ref: #/components/schemas/AssetStatsResponseDto
type AssetStatsResponseDto struct {
	Images int `json:"images"`
	Total  int `json:"total"`
	Videos int `json:"videos"`
}

// GetImages returns the value of Images.
func (s *AssetStatsResponseDto) GetImages() int {
	return s.Images
}

// GetTotal returns the value of Total.
func (s *AssetStatsResponseDto) GetTotal() int {
	return s.Total
}

// GetVideos returns the value of Videos.
func (s *AssetStatsResponseDto) GetVideos() int {
	return s.Videos
}

// SetImages sets the value of Images.
func (s *AssetStatsResponseDto) SetImages(val int) {
	s.Images = val
}

// SetTotal sets the value of Total.
func (s *AssetStatsResponseDto) SetTotal(val int) {
	s.Total = val
}

// SetVideos sets the value of Videos.
func (s *AssetStatsResponseDto) SetVideos(val int) {
	s.Videos = val
}

// Ref: #/components/schemas/AssetTypeEnum
type AssetTypeEnum string

const (
	AssetTypeEnumIMAGE AssetTypeEnum = "IMAGE"
	AssetTypeEnumVIDEO AssetTypeEnum = "VIDEO"
	AssetTypeEnumAUDIO AssetTypeEnum = "AUDIO"
	AssetTypeEnumOTHER AssetTypeEnum = "OTHER"
)

// AllValues returns all AssetTypeEnum values.
func (AssetTypeEnum) AllValues() []AssetTypeEnum {
	return []AssetTypeEnum{
		AssetTypeEnumIMAGE,
		AssetTypeEnumVIDEO,
		AssetTypeEnumAUDIO,
		AssetTypeEnumOTHER,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s AssetTypeEnum) MarshalText() ([]byte, error) {
	switch s {
	case AssetTypeEnumIMAGE:
		return []byte(s), nil
	case AssetTypeEnumVIDEO:
		return []byte(s), nil
	case AssetTypeEnumAUDIO:
		return []byte(s), nil
	case AssetTypeEnumOTHER:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *AssetTypeEnum) UnmarshalText(data []byte) error {
	switch AssetTypeEnum(data) {
	case AssetTypeEnumIMAGE:
		*s = AssetTypeEnumIMAGE
		return nil
	case AssetTypeEnumVIDEO:
		*s = AssetTypeEnumVIDEO
		return nil
	case AssetTypeEnumAUDIO:
		*s = AssetTypeEnumAUDIO
		return nil
	case AssetTypeEnumOTHER:
		*s = AssetTypeEnumOTHER
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/AssetVisibility
type AssetVisibility string

const (
	AssetVisibilityArchive  AssetVisibility = "archive"
	AssetVisibilityTimeline AssetVisibility = "timeline"
	AssetVisibilityHidden   AssetVisibility = "hidden"
	AssetVisibilityLocked   AssetVisibility = "locked"
)

// AllValues returns all AssetVisibility values.
func (AssetVisibility) AllValues() []AssetVisibility {
	return []AssetVisibility{
		AssetVisibilityArchive,
		AssetVisibilityTimeline,
		AssetVisibilityHidden,
		AssetVisibilityLocked,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s AssetVisibility) MarshalText() ([]byte, error) {
	switch s {
	case AssetVisibilityArchive:
		return []byte(s), nil
	case AssetVisibilityTimeline:
		return []byte(s), nil
	case AssetVisibilityHidden:
		return []byte(s), nil
	case AssetVisibilityLocked:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *AssetVisibility) UnmarshalText(data []byte) error {
	switch AssetVisibility(data) {
	case AssetVisibilityArchive:
		*s = AssetVisibilityArchive
		return nil
	case AssetVisibilityTimeline:
		*s = AssetVisibilityTimeline
		return nil
	case AssetVisibilityHidden:
		*s = AssetVisibilityHidden
		return nil
	case AssetVisibilityLocked:
		*s = AssetVisibilityLocked
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/AudioCodec
type AudioCodec string

const (
	AudioCodecMp3      AudioCodec = "mp3"
	AudioCodecAac      AudioCodec = "aac"
	AudioCodecLibopus  AudioCodec = "libopus"
	AudioCodecPcmS16le AudioCodec = "pcm_s16le"
)

// AllValues returns all AudioCodec values.
func (AudioCodec) AllValues() []AudioCodec {
	return []AudioCodec{
		AudioCodecMp3,
		AudioCodecAac,
		AudioCodecLibopus,
		AudioCodecPcmS16le,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s AudioCodec) MarshalText() ([]byte, error) {
	switch s {
	case AudioCodecMp3:
		return []byte(s), nil
	case AudioCodecAac:
		return []byte(s), nil
	case AudioCodecLibopus:
		return []byte(s), nil
	case AudioCodecPcmS16le:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *AudioCodec) UnmarshalText(data []byte) error {
	switch AudioCodec(data) {
	case AudioCodecMp3:
		*s = AudioCodecMp3
		return nil
	case AudioCodecAac:
		*s = AudioCodecAac
		return nil
	case AudioCodecLibopus:
		*s = AudioCodecLibopus
		return nil
	case AudioCodecPcmS16le:
		*s = AudioCodecPcmS16le
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/AuthStatusResponseDto
type AuthStatusResponseDto struct {
	ExpiresAt    OptString `json:"expiresAt"`
	IsElevated   bool      `json:"isElevated"`
	Password     bool      `json:"password"`
	PinCode      bool      `json:"pinCode"`
	PinExpiresAt OptString `json:"pinExpiresAt"`
}

// GetExpiresAt returns the value of ExpiresAt.
func (s *AuthStatusResponseDto) GetExpiresAt() OptString {
	return s.ExpiresAt
}

// GetIsElevated returns the value of IsElevated.
func (s *AuthStatusResponseDto) GetIsElevated() bool {
	return s.IsElevated
}

// GetPassword returns the value of Password.
func (s *AuthStatusResponseDto) GetPassword() bool {
	return s.Password
}

// GetPinCode returns the value of PinCode.
func (s *AuthStatusResponseDto) GetPinCode() bool {
	return s.PinCode
}

// GetPinExpiresAt returns the value of PinExpiresAt.
func (s *AuthStatusResponseDto) GetPinExpiresAt() OptString {
	return s.PinExpiresAt
}

// SetExpiresAt sets the value of ExpiresAt.
func (s *AuthStatusResponseDto) SetExpiresAt(val OptString) {
	s.ExpiresAt = val
}

// SetIsElevated sets the value of IsElevated.
func (s *AuthStatusResponseDto) SetIsElevated(val bool) {
	s.IsElevated = val
}

// SetPassword sets the value of Password.
func (s *AuthStatusResponseDto) SetPassword(val bool) {
	s.Password = val
}

// SetPinCode sets the value of PinCode.
func (s *AuthStatusResponseDto) SetPinCode(val bool) {
	s.PinCode = val
}

// SetPinExpiresAt sets the value of PinExpiresAt.
func (s *AuthStatusResponseDto) SetPinExpiresAt(val OptString) {
	s.PinExpiresAt = val
}

// Ref: #/components/schemas/AvatarUpdate
type AvatarUpdate struct {
	Color OptUserAvatarColor `json:"color"`
}

// GetColor returns the value of Color.
func (s *AvatarUpdate) GetColor() OptUserAvatarColor {
	return s.Color
}

// SetColor sets the value of Color.
func (s *AvatarUpdate) SetColor(val OptUserAvatarColor) {
	s.Color = val
}

type Bearer struct {
	Token string
	Roles []string
}

// GetToken returns the value of Token.
func (s *Bearer) GetToken() string {
	return s.Token
}

// GetRoles returns the value of Roles.
func (s *Bearer) GetRoles() []string {
	return s.Roles
}

// SetToken sets the value of Token.
func (s *Bearer) SetToken(val string) {
	s.Token = val
}

// SetRoles sets the value of Roles.
func (s *Bearer) SetRoles(val []string) {
	s.Roles = val
}

// Ref: #/components/schemas/BulkIdErrorReason
type BulkIdErrorReason string

const (
	BulkIdErrorReasonDuplicate    BulkIdErrorReason = "duplicate"
	BulkIdErrorReasonNoPermission BulkIdErrorReason = "no_permission"
	BulkIdErrorReasonNotFound     BulkIdErrorReason = "not_found"
	BulkIdErrorReasonUnknown      BulkIdErrorReason = "unknown"
)

// AllValues returns all BulkIdErrorReason values.
func (BulkIdErrorReason) AllValues() []BulkIdErrorReason {
	return []BulkIdErrorReason{
		BulkIdErrorReasonDuplicate,
		BulkIdErrorReasonNoPermission,
		BulkIdErrorReasonNotFound,
		BulkIdErrorReasonUnknown,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s BulkIdErrorReason) MarshalText() ([]byte, error) {
	switch s {
	case BulkIdErrorReasonDuplicate:
		return []byte(s), nil
	case BulkIdErrorReasonNoPermission:
		return []byte(s), nil
	case BulkIdErrorReasonNotFound:
		return []byte(s), nil
	case BulkIdErrorReasonUnknown:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *BulkIdErrorReason) UnmarshalText(data []byte) error {
	switch BulkIdErrorReason(data) {
	case BulkIdErrorReasonDuplicate:
		*s = BulkIdErrorReasonDuplicate
		return nil
	case BulkIdErrorReasonNoPermission:
		*s = BulkIdErrorReasonNoPermission
		return nil
	case BulkIdErrorReasonNotFound:
		*s = BulkIdErrorReasonNotFound
		return nil
	case BulkIdErrorReasonUnknown:
		*s = BulkIdErrorReasonUnknown
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/BulkIdResponseDto
type BulkIdResponseDto struct {
	Error   OptBulkIdResponseDtoError `json:"error"`
	ID      string                    `json:"id"`
	Success bool                      `json:"success"`
}

// GetError returns the value of Error.
func (s *BulkIdResponseDto) GetError() OptBulkIdResponseDtoError {
	return s.Error
}

// GetID returns the value of ID.
func (s *BulkIdResponseDto) GetID() string {
	return s.ID
}

// GetSuccess returns the value of Success.
func (s *BulkIdResponseDto) GetSuccess() bool {
	return s.Success
}

// SetError sets the value of Error.
func (s *BulkIdResponseDto) SetError(val OptBulkIdResponseDtoError) {
	s.Error = val
}

// SetID sets the value of ID.
func (s *BulkIdResponseDto) SetID(val string) {
	s.ID = val
}

// SetSuccess sets the value of Success.
func (s *BulkIdResponseDto) SetSuccess(val bool) {
	s.Success = val
}

type BulkIdResponseDtoError string

const (
	BulkIdResponseDtoErrorDuplicate    BulkIdResponseDtoError = "duplicate"
	BulkIdResponseDtoErrorNoPermission BulkIdResponseDtoError = "no_permission"
	BulkIdResponseDtoErrorNotFound     BulkIdResponseDtoError = "not_found"
	BulkIdResponseDtoErrorUnknown      BulkIdResponseDtoError = "unknown"
)

// AllValues returns all BulkIdResponseDtoError values.
func (BulkIdResponseDtoError) AllValues() []BulkIdResponseDtoError {
	return []BulkIdResponseDtoError{
		BulkIdResponseDtoErrorDuplicate,
		BulkIdResponseDtoErrorNoPermission,
		BulkIdResponseDtoErrorNotFound,
		BulkIdResponseDtoErrorUnknown,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s BulkIdResponseDtoError) MarshalText() ([]byte, error) {
	switch s {
	case BulkIdResponseDtoErrorDuplicate:
		return []byte(s), nil
	case BulkIdResponseDtoErrorNoPermission:
		return []byte(s), nil
	case BulkIdResponseDtoErrorNotFound:
		return []byte(s), nil
	case BulkIdResponseDtoErrorUnknown:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *BulkIdResponseDtoError) UnmarshalText(data []byte) error {
	switch BulkIdResponseDtoError(data) {
	case BulkIdResponseDtoErrorDuplicate:
		*s = BulkIdResponseDtoErrorDuplicate
		return nil
	case BulkIdResponseDtoErrorNoPermission:
		*s = BulkIdResponseDtoErrorNoPermission
		return nil
	case BulkIdResponseDtoErrorNotFound:
		*s = BulkIdResponseDtoErrorNotFound
		return nil
	case BulkIdResponseDtoErrorUnknown:
		*s = BulkIdResponseDtoErrorUnknown
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/BulkIdsDto
type BulkIdsDto struct {
	Ids []uuid.UUID `json:"ids"`
}

// GetIds returns the value of Ids.
func (s *BulkIdsDto) GetIds() []uuid.UUID {
	return s.Ids
}

// SetIds sets the value of Ids.
func (s *BulkIdsDto) SetIds(val []uuid.UUID) {
	s.Ids = val
}

// Ref: #/components/schemas/CLIPConfig
type CLIPConfig struct {
	Enabled   bool   `json:"enabled"`
	ModelName string `json:"modelName"`
}

// GetEnabled returns the value of Enabled.
func (s *CLIPConfig) GetEnabled() bool {
	return s.Enabled
}

// GetModelName returns the value of ModelName.
func (s *CLIPConfig) GetModelName() string {
	return s.ModelName
}

// SetEnabled sets the value of Enabled.
func (s *CLIPConfig) SetEnabled(val bool) {
	s.Enabled = val
}

// SetModelName sets the value of ModelName.
func (s *CLIPConfig) SetModelName(val string) {
	s.ModelName = val
}

// Ref: #/components/schemas/CQMode
type CQMode string

const (
	CQModeAuto CQMode = "auto"
	CQModeCqp  CQMode = "cqp"
	CQModeIcq  CQMode = "icq"
)

// AllValues returns all CQMode values.
func (CQMode) AllValues() []CQMode {
	return []CQMode{
		CQModeAuto,
		CQModeCqp,
		CQModeIcq,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s CQMode) MarshalText() ([]byte, error) {
	switch s {
	case CQModeAuto:
		return []byte(s), nil
	case CQModeCqp:
		return []byte(s), nil
	case CQModeIcq:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CQMode) UnmarshalText(data []byte) error {
	switch CQMode(data) {
	case CQModeAuto:
		*s = CQModeAuto
		return nil
	case CQModeCqp:
		*s = CQModeCqp
		return nil
	case CQModeIcq:
		*s = CQModeIcq
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/CastResponse
type CastResponse struct {
	GCastEnabled bool `json:"gCastEnabled"`
}

// GetGCastEnabled returns the value of GCastEnabled.
func (s *CastResponse) GetGCastEnabled() bool {
	return s.GCastEnabled
}

// SetGCastEnabled sets the value of GCastEnabled.
func (s *CastResponse) SetGCastEnabled(val bool) {
	s.GCastEnabled = val
}

// Ref: #/components/schemas/CastUpdate
type CastUpdate struct {
	GCastEnabled OptBool `json:"gCastEnabled"`
}

// GetGCastEnabled returns the value of GCastEnabled.
func (s *CastUpdate) GetGCastEnabled() OptBool {
	return s.GCastEnabled
}

// SetGCastEnabled sets the value of GCastEnabled.
func (s *CastUpdate) SetGCastEnabled(val OptBool) {
	s.GCastEnabled = val
}

// Ref: #/components/schemas/ChangePasswordDto
type ChangePasswordDto struct {
	NewPassword string `json:"newPassword"`
	Password    string `json:"password"`
}

// GetNewPassword returns the value of NewPassword.
func (s *ChangePasswordDto) GetNewPassword() string {
	return s.NewPassword
}

// GetPassword returns the value of Password.
func (s *ChangePasswordDto) GetPassword() string {
	return s.Password
}

// SetNewPassword sets the value of NewPassword.
func (s *ChangePasswordDto) SetNewPassword(val string) {
	s.NewPassword = val
}

// SetPassword sets the value of Password.
func (s *ChangePasswordDto) SetPassword(val string) {
	s.Password = val
}

// ChangePinCodeNoContent is response for ChangePinCode operation.
type ChangePinCodeNoContent struct{}

// Ref: #/components/schemas/CheckExistingAssetsDto
type CheckExistingAssetsDto struct {
	DeviceAssetIds []string `json:"deviceAssetIds"`
	DeviceId       string   `json:"deviceId"`
}

// GetDeviceAssetIds returns the value of DeviceAssetIds.
func (s *CheckExistingAssetsDto) GetDeviceAssetIds() []string {
	return s.DeviceAssetIds
}

// GetDeviceId returns the value of DeviceId.
func (s *CheckExistingAssetsDto) GetDeviceId() string {
	return s.DeviceId
}

// SetDeviceAssetIds sets the value of DeviceAssetIds.
func (s *CheckExistingAssetsDto) SetDeviceAssetIds(val []string) {
	s.DeviceAssetIds = val
}

// SetDeviceId sets the value of DeviceId.
func (s *CheckExistingAssetsDto) SetDeviceId(val string) {
	s.DeviceId = val
}

// Ref: #/components/schemas/CheckExistingAssetsResponseDto
type CheckExistingAssetsResponseDto struct {
	ExistingIds []string `json:"existingIds"`
}

// GetExistingIds returns the value of ExistingIds.
func (s *CheckExistingAssetsResponseDto) GetExistingIds() []string {
	return s.ExistingIds
}

// SetExistingIds sets the value of ExistingIds.
func (s *CheckExistingAssetsResponseDto) SetExistingIds(val []string) {
	s.ExistingIds = val
}

// Ref: #/components/schemas/Colorspace
type Colorspace string

const (
	ColorspaceSrgb Colorspace = "srgb"
	ColorspaceP3   Colorspace = "p3"
)

// AllValues returns all Colorspace values.
func (Colorspace) AllValues() []Colorspace {
	return []Colorspace{
		ColorspaceSrgb,
		ColorspaceP3,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s Colorspace) MarshalText() ([]byte, error) {
	switch s {
	case ColorspaceSrgb:
		return []byte(s), nil
	case ColorspaceP3:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *Colorspace) UnmarshalText(data []byte) error {
	switch Colorspace(data) {
	case ColorspaceSrgb:
		*s = ColorspaceSrgb
		return nil
	case ColorspaceP3:
		*s = ColorspaceP3
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/ContributorCountResponseDto
type ContributorCountResponseDto struct {
	AssetCount int    `json:"assetCount"`
	UserId     string `json:"userId"`
}

// GetAssetCount returns the value of AssetCount.
func (s *ContributorCountResponseDto) GetAssetCount() int {
	return s.AssetCount
}

// GetUserId returns the value of UserId.
func (s *ContributorCountResponseDto) GetUserId() string {
	return s.UserId
}

// SetAssetCount sets the value of AssetCount.
func (s *ContributorCountResponseDto) SetAssetCount(val int) {
	s.AssetCount = val
}

// SetUserId sets the value of UserId.
func (s *ContributorCountResponseDto) SetUserId(val string) {
	s.UserId = val
}

type Cookie struct {
	APIKey string
	Roles  []string
}

// GetAPIKey returns the value of APIKey.
func (s *Cookie) GetAPIKey() string {
	return s.APIKey
}

// GetRoles returns the value of Roles.
func (s *Cookie) GetRoles() []string {
	return s.Roles
}

// SetAPIKey sets the value of APIKey.
func (s *Cookie) SetAPIKey(val string) {
	s.APIKey = val
}

// SetRoles sets the value of Roles.
func (s *Cookie) SetRoles(val []string) {
	s.Roles = val
}

// Ref: #/components/schemas/CreateAlbumDto
type CreateAlbumDto struct {
	AlbumName   string               `json:"albumName"`
	AlbumUsers  []AlbumUserCreateDto `json:"albumUsers"`
	AssetIds    []uuid.UUID          `json:"assetIds"`
	Description OptString            `json:"description"`
}

// GetAlbumName returns the value of AlbumName.
func (s *CreateAlbumDto) GetAlbumName() string {
	return s.AlbumName
}

// GetAlbumUsers returns the value of AlbumUsers.
func (s *CreateAlbumDto) GetAlbumUsers() []AlbumUserCreateDto {
	return s.AlbumUsers
}

// GetAssetIds returns the value of AssetIds.
func (s *CreateAlbumDto) GetAssetIds() []uuid.UUID {
	return s.AssetIds
}

// GetDescription returns the value of Description.
func (s *CreateAlbumDto) GetDescription() OptString {
	return s.Description
}

// SetAlbumName sets the value of AlbumName.
func (s *CreateAlbumDto) SetAlbumName(val string) {
	s.AlbumName = val
}

// SetAlbumUsers sets the value of AlbumUsers.
func (s *CreateAlbumDto) SetAlbumUsers(val []AlbumUserCreateDto) {
	s.AlbumUsers = val
}

// SetAssetIds sets the value of AssetIds.
func (s *CreateAlbumDto) SetAssetIds(val []uuid.UUID) {
	s.AssetIds = val
}

// SetDescription sets the value of Description.
func (s *CreateAlbumDto) SetDescription(val OptString) {
	s.Description = val
}

// CreateFaceCreated is response for CreateFace operation.
type CreateFaceCreated struct{}

// CreateJobNoContent is response for CreateJob operation.
type CreateJobNoContent struct{}

// Ref: #/components/schemas/CreateLibraryDto
type CreateLibraryDto struct {
	ExclusionPatterns []string  `json:"exclusionPatterns"`
	ImportPaths       []string  `json:"importPaths"`
	Name              OptString `json:"name"`
	OwnerId           uuid.UUID `json:"ownerId"`
}

// GetExclusionPatterns returns the value of ExclusionPatterns.
func (s *CreateLibraryDto) GetExclusionPatterns() []string {
	return s.ExclusionPatterns
}

// GetImportPaths returns the value of ImportPaths.
func (s *CreateLibraryDto) GetImportPaths() []string {
	return s.ImportPaths
}

// GetName returns the value of Name.
func (s *CreateLibraryDto) GetName() OptString {
	return s.Name
}

// GetOwnerId returns the value of OwnerId.
func (s *CreateLibraryDto) GetOwnerId() uuid.UUID {
	return s.OwnerId
}

// SetExclusionPatterns sets the value of ExclusionPatterns.
func (s *CreateLibraryDto) SetExclusionPatterns(val []string) {
	s.ExclusionPatterns = val
}

// SetImportPaths sets the value of ImportPaths.
func (s *CreateLibraryDto) SetImportPaths(val []string) {
	s.ImportPaths = val
}

// SetName sets the value of Name.
func (s *CreateLibraryDto) SetName(val OptString) {
	s.Name = val
}

// SetOwnerId sets the value of OwnerId.
func (s *CreateLibraryDto) SetOwnerId(val uuid.UUID) {
	s.OwnerId = val
}

// Ref: #/components/schemas/CreateProfileImageDto
type CreateProfileImageDtoMultipart struct {
	File ht.MultipartFile `json:"file"`
}

// GetFile returns the value of File.
func (s *CreateProfileImageDtoMultipart) GetFile() ht.MultipartFile {
	return s.File
}

// SetFile sets the value of File.
func (s *CreateProfileImageDtoMultipart) SetFile(val ht.MultipartFile) {
	s.File = val
}

// Ref: #/components/schemas/CreateProfileImageResponseDto
type CreateProfileImageResponseDto struct {
	ProfileChangedAt time.Time `json:"profileChangedAt"`
	ProfileImagePath string    `json:"profileImagePath"`
	UserId           string    `json:"userId"`
}

// GetProfileChangedAt returns the value of ProfileChangedAt.
func (s *CreateProfileImageResponseDto) GetProfileChangedAt() time.Time {
	return s.ProfileChangedAt
}

// GetProfileImagePath returns the value of ProfileImagePath.
func (s *CreateProfileImageResponseDto) GetProfileImagePath() string {
	return s.ProfileImagePath
}

// GetUserId returns the value of UserId.
func (s *CreateProfileImageResponseDto) GetUserId() string {
	return s.UserId
}

// SetProfileChangedAt sets the value of ProfileChangedAt.
func (s *CreateProfileImageResponseDto) SetProfileChangedAt(val time.Time) {
	s.ProfileChangedAt = val
}

// SetProfileImagePath sets the value of ProfileImagePath.
func (s *CreateProfileImageResponseDto) SetProfileImagePath(val string) {
	s.ProfileImagePath = val
}

// SetUserId sets the value of UserId.
func (s *CreateProfileImageResponseDto) SetUserId(val string) {
	s.UserId = val
}

// Ref: #/components/schemas/DatabaseBackupConfig
type DatabaseBackupConfig struct {
	CronExpression string  `json:"cronExpression"`
	Enabled        bool    `json:"enabled"`
	KeepLastAmount float64 `json:"keepLastAmount"`
}

// GetCronExpression returns the value of CronExpression.
func (s *DatabaseBackupConfig) GetCronExpression() string {
	return s.CronExpression
}

// GetEnabled returns the value of Enabled.
func (s *DatabaseBackupConfig) GetEnabled() bool {
	return s.Enabled
}

// GetKeepLastAmount returns the value of KeepLastAmount.
func (s *DatabaseBackupConfig) GetKeepLastAmount() float64 {
	return s.KeepLastAmount
}

// SetCronExpression sets the value of CronExpression.
func (s *DatabaseBackupConfig) SetCronExpression(val string) {
	s.CronExpression = val
}

// SetEnabled sets the value of Enabled.
func (s *DatabaseBackupConfig) SetEnabled(val bool) {
	s.Enabled = val
}

// SetKeepLastAmount sets the value of KeepLastAmount.
func (s *DatabaseBackupConfig) SetKeepLastAmount(val float64) {
	s.KeepLastAmount = val
}

// DeleteActivityNoContent is response for DeleteActivity operation.
type DeleteActivityNoContent struct{}

// DeleteAlbumNoContent is response for DeleteAlbum operation.
type DeleteAlbumNoContent struct{}

// DeleteAllSessionsNoContent is response for DeleteAllSessions operation.
type DeleteAllSessionsNoContent struct{}

// DeleteApiKeyNoContent is response for DeleteApiKey operation.
type DeleteApiKeyNoContent struct{}

// DeleteAssetMetadataNoContent is response for DeleteAssetMetadata operation.
type DeleteAssetMetadataNoContent struct{}

// DeleteAssetsNoContent is response for DeleteAssets operation.
type DeleteAssetsNoContent struct{}

// DeleteDuplicateNoContent is response for DeleteDuplicate operation.
type DeleteDuplicateNoContent struct{}

// DeleteDuplicatesNoContent is response for DeleteDuplicates operation.
type DeleteDuplicatesNoContent struct{}

// DeleteFaceNoContent is response for DeleteFace operation.
type DeleteFaceNoContent struct{}

// DeleteLibraryNoContent is response for DeleteLibrary operation.
type DeleteLibraryNoContent struct{}

// DeleteMemoryNoContent is response for DeleteMemory operation.
type DeleteMemoryNoContent struct{}

// DeleteNotificationNoContent is response for DeleteNotification operation.
type DeleteNotificationNoContent struct{}

// DeleteNotificationsNoContent is response for DeleteNotifications operation.
type DeleteNotificationsNoContent struct{}

// DeletePeopleNoContent is response for DeletePeople operation.
type DeletePeopleNoContent struct{}

// DeletePersonNoContent is response for DeletePerson operation.
type DeletePersonNoContent struct{}

// DeleteProfileImageNoContent is response for DeleteProfileImage operation.
type DeleteProfileImageNoContent struct{}

// DeleteServerLicenseNoContent is response for DeleteServerLicense operation.
type DeleteServerLicenseNoContent struct{}

// DeleteSessionNoContent is response for DeleteSession operation.
type DeleteSessionNoContent struct{}

// DeleteStackNoContent is response for DeleteStack operation.
type DeleteStackNoContent struct{}

// DeleteStacksNoContent is response for DeleteStacks operation.
type DeleteStacksNoContent struct{}

// DeleteSyncAckNoContent is response for DeleteSyncAck operation.
type DeleteSyncAckNoContent struct{}

// DeleteTagNoContent is response for DeleteTag operation.
type DeleteTagNoContent struct{}

// DeleteUserLicenseNoContent is response for DeleteUserLicense operation.
type DeleteUserLicenseNoContent struct{}

// DeleteUserOnboardingNoContent is response for DeleteUserOnboarding operation.
type DeleteUserOnboardingNoContent struct{}

// Ref: #/components/schemas/DownloadArchiveInfo
type DownloadArchiveInfo struct {
	AssetIds []string `json:"assetIds"`
	Size     int      `json:"size"`
}

// GetAssetIds returns the value of AssetIds.
func (s *DownloadArchiveInfo) GetAssetIds() []string {
	return s.AssetIds
}

// GetSize returns the value of Size.
func (s *DownloadArchiveInfo) GetSize() int {
	return s.Size
}

// SetAssetIds sets the value of AssetIds.
func (s *DownloadArchiveInfo) SetAssetIds(val []string) {
	s.AssetIds = val
}

// SetSize sets the value of Size.
func (s *DownloadArchiveInfo) SetSize(val int) {
	s.Size = val
}

type DownloadArchiveOK struct {
	Data io.Reader
}

// Read reads data from the Data reader.
//
// Kept to satisfy the io.Reader interface.
func (s DownloadArchiveOK) Read(p []byte) (n int, err error) {
	if s.Data == nil {
		return 0, io.EOF
	}
	return s.Data.Read(p)
}

type DownloadAssetOK struct {
	Data io.Reader
}

// Read reads data from the Data reader.
//
// Kept to satisfy the io.Reader interface.
func (s DownloadAssetOK) Read(p []byte) (n int, err error) {
	if s.Data == nil {
		return 0, io.EOF
	}
	return s.Data.Read(p)
}

// Ref: #/components/schemas/DownloadInfoDto
type DownloadInfoDto struct {
	AlbumId     OptUUID     `json:"albumId"`
	ArchiveSize OptInt      `json:"archiveSize"`
	AssetIds    []uuid.UUID `json:"assetIds"`
	UserId      OptUUID     `json:"userId"`
}

// GetAlbumId returns the value of AlbumId.
func (s *DownloadInfoDto) GetAlbumId() OptUUID {
	return s.AlbumId
}

// GetArchiveSize returns the value of ArchiveSize.
func (s *DownloadInfoDto) GetArchiveSize() OptInt {
	return s.ArchiveSize
}

// GetAssetIds returns the value of AssetIds.
func (s *DownloadInfoDto) GetAssetIds() []uuid.UUID {
	return s.AssetIds
}

// GetUserId returns the value of UserId.
func (s *DownloadInfoDto) GetUserId() OptUUID {
	return s.UserId
}

// SetAlbumId sets the value of AlbumId.
func (s *DownloadInfoDto) SetAlbumId(val OptUUID) {
	s.AlbumId = val
}

// SetArchiveSize sets the value of ArchiveSize.
func (s *DownloadInfoDto) SetArchiveSize(val OptInt) {
	s.ArchiveSize = val
}

// SetAssetIds sets the value of AssetIds.
func (s *DownloadInfoDto) SetAssetIds(val []uuid.UUID) {
	s.AssetIds = val
}

// SetUserId sets the value of UserId.
func (s *DownloadInfoDto) SetUserId(val OptUUID) {
	s.UserId = val
}

// Ref: #/components/schemas/DownloadResponse
type DownloadResponse struct {
	ArchiveSize           int  `json:"archiveSize"`
	IncludeEmbeddedVideos bool `json:"includeEmbeddedVideos"`
}

// GetArchiveSize returns the value of ArchiveSize.
func (s *DownloadResponse) GetArchiveSize() int {
	return s.ArchiveSize
}

// GetIncludeEmbeddedVideos returns the value of IncludeEmbeddedVideos.
func (s *DownloadResponse) GetIncludeEmbeddedVideos() bool {
	return s.IncludeEmbeddedVideos
}

// SetArchiveSize sets the value of ArchiveSize.
func (s *DownloadResponse) SetArchiveSize(val int) {
	s.ArchiveSize = val
}

// SetIncludeEmbeddedVideos sets the value of IncludeEmbeddedVideos.
func (s *DownloadResponse) SetIncludeEmbeddedVideos(val bool) {
	s.IncludeEmbeddedVideos = val
}

// Ref: #/components/schemas/DownloadResponseDto
type DownloadResponseDto struct {
	Archives  []DownloadArchiveInfo `json:"archives"`
	TotalSize int                   `json:"totalSize"`
}

// GetArchives returns the value of Archives.
func (s *DownloadResponseDto) GetArchives() []DownloadArchiveInfo {
	return s.Archives
}

// GetTotalSize returns the value of TotalSize.
func (s *DownloadResponseDto) GetTotalSize() int {
	return s.TotalSize
}

// SetArchives sets the value of Archives.
func (s *DownloadResponseDto) SetArchives(val []DownloadArchiveInfo) {
	s.Archives = val
}

// SetTotalSize sets the value of TotalSize.
func (s *DownloadResponseDto) SetTotalSize(val int) {
	s.TotalSize = val
}

// Ref: #/components/schemas/DownloadUpdate
type DownloadUpdate struct {
	ArchiveSize           OptInt  `json:"archiveSize"`
	IncludeEmbeddedVideos OptBool `json:"includeEmbeddedVideos"`
}

// GetArchiveSize returns the value of ArchiveSize.
func (s *DownloadUpdate) GetArchiveSize() OptInt {
	return s.ArchiveSize
}

// GetIncludeEmbeddedVideos returns the value of IncludeEmbeddedVideos.
func (s *DownloadUpdate) GetIncludeEmbeddedVideos() OptBool {
	return s.IncludeEmbeddedVideos
}

// SetArchiveSize sets the value of ArchiveSize.
func (s *DownloadUpdate) SetArchiveSize(val OptInt) {
	s.ArchiveSize = val
}

// SetIncludeEmbeddedVideos sets the value of IncludeEmbeddedVideos.
func (s *DownloadUpdate) SetIncludeEmbeddedVideos(val OptBool) {
	s.IncludeEmbeddedVideos = val
}

// Ref: #/components/schemas/DuplicateDetectionConfig
type DuplicateDetectionConfig struct {
	Enabled     bool    `json:"enabled"`
	MaxDistance float64 `json:"maxDistance"`
}

// GetEnabled returns the value of Enabled.
func (s *DuplicateDetectionConfig) GetEnabled() bool {
	return s.Enabled
}

// GetMaxDistance returns the value of MaxDistance.
func (s *DuplicateDetectionConfig) GetMaxDistance() float64 {
	return s.MaxDistance
}

// SetEnabled sets the value of Enabled.
func (s *DuplicateDetectionConfig) SetEnabled(val bool) {
	s.Enabled = val
}

// SetMaxDistance sets the value of MaxDistance.
func (s *DuplicateDetectionConfig) SetMaxDistance(val float64) {
	s.MaxDistance = val
}

// Ref: #/components/schemas/DuplicateResponseDto
type DuplicateResponseDto struct {
	Assets      []AssetResponseDto `json:"assets"`
	DuplicateId string             `json:"duplicateId"`
}

// GetAssets returns the value of Assets.
func (s *DuplicateResponseDto) GetAssets() []AssetResponseDto {
	return s.Assets
}

// GetDuplicateId returns the value of DuplicateId.
func (s *DuplicateResponseDto) GetDuplicateId() string {
	return s.DuplicateId
}

// SetAssets sets the value of Assets.
func (s *DuplicateResponseDto) SetAssets(val []AssetResponseDto) {
	s.Assets = val
}

// SetDuplicateId sets the value of DuplicateId.
func (s *DuplicateResponseDto) SetDuplicateId(val string) {
	s.DuplicateId = val
}

// Ref: #/components/schemas/EmailNotificationsResponse
type EmailNotificationsResponse struct {
	AlbumInvite bool `json:"albumInvite"`
	AlbumUpdate bool `json:"albumUpdate"`
	Enabled     bool `json:"enabled"`
}

// GetAlbumInvite returns the value of AlbumInvite.
func (s *EmailNotificationsResponse) GetAlbumInvite() bool {
	return s.AlbumInvite
}

// GetAlbumUpdate returns the value of AlbumUpdate.
func (s *EmailNotificationsResponse) GetAlbumUpdate() bool {
	return s.AlbumUpdate
}

// GetEnabled returns the value of Enabled.
func (s *EmailNotificationsResponse) GetEnabled() bool {
	return s.Enabled
}

// SetAlbumInvite sets the value of AlbumInvite.
func (s *EmailNotificationsResponse) SetAlbumInvite(val bool) {
	s.AlbumInvite = val
}

// SetAlbumUpdate sets the value of AlbumUpdate.
func (s *EmailNotificationsResponse) SetAlbumUpdate(val bool) {
	s.AlbumUpdate = val
}

// SetEnabled sets the value of Enabled.
func (s *EmailNotificationsResponse) SetEnabled(val bool) {
	s.Enabled = val
}

// Ref: #/components/schemas/EmailNotificationsUpdate
type EmailNotificationsUpdate struct {
	AlbumInvite OptBool `json:"albumInvite"`
	AlbumUpdate OptBool `json:"albumUpdate"`
	Enabled     OptBool `json:"enabled"`
}

// GetAlbumInvite returns the value of AlbumInvite.
func (s *EmailNotificationsUpdate) GetAlbumInvite() OptBool {
	return s.AlbumInvite
}

// GetAlbumUpdate returns the value of AlbumUpdate.
func (s *EmailNotificationsUpdate) GetAlbumUpdate() OptBool {
	return s.AlbumUpdate
}

// GetEnabled returns the value of Enabled.
func (s *EmailNotificationsUpdate) GetEnabled() OptBool {
	return s.Enabled
}

// SetAlbumInvite sets the value of AlbumInvite.
func (s *EmailNotificationsUpdate) SetAlbumInvite(val OptBool) {
	s.AlbumInvite = val
}

// SetAlbumUpdate sets the value of AlbumUpdate.
func (s *EmailNotificationsUpdate) SetAlbumUpdate(val OptBool) {
	s.AlbumUpdate = val
}

// SetEnabled sets the value of Enabled.
func (s *EmailNotificationsUpdate) SetEnabled(val OptBool) {
	s.Enabled = val
}

// Ref: #/components/schemas/ExifResponseDto
type ExifResponseDto struct {
	City             OptNilString   `json:"city"`
	Country          OptNilString   `json:"country"`
	DateTimeOriginal OptNilDateTime `json:"dateTimeOriginal"`
	Description      OptNilString   `json:"description"`
	ExifImageHeight  OptNilFloat64  `json:"exifImageHeight"`
	ExifImageWidth   OptNilFloat64  `json:"exifImageWidth"`
	ExposureTime     OptNilString   `json:"exposureTime"`
	FNumber          OptNilFloat64  `json:"fNumber"`
	FileSizeInByte   OptNilInt64    `json:"fileSizeInByte"`
	FocalLength      OptNilFloat64  `json:"focalLength"`
	Iso              OptNilFloat64  `json:"iso"`
	Latitude         OptNilFloat64  `json:"latitude"`
	LensModel        OptNilString   `json:"lensModel"`
	Longitude        OptNilFloat64  `json:"longitude"`
	Make             OptNilString   `json:"make"`
	Model            OptNilString   `json:"model"`
	ModifyDate       OptNilDateTime `json:"modifyDate"`
	Orientation      OptNilString   `json:"orientation"`
	ProjectionType   OptNilString   `json:"projectionType"`
	Rating           OptNilFloat64  `json:"rating"`
	State            OptNilString   `json:"state"`
	TimeZone         OptNilString   `json:"timeZone"`
}

// GetCity returns the value of City.
func (s *ExifResponseDto) GetCity() OptNilString {
	return s.City
}

// GetCountry returns the value of Country.
func (s *ExifResponseDto) GetCountry() OptNilString {
	return s.Country
}

// GetDateTimeOriginal returns the value of DateTimeOriginal.
func (s *ExifResponseDto) GetDateTimeOriginal() OptNilDateTime {
	return s.DateTimeOriginal
}

// GetDescription returns the value of Description.
func (s *ExifResponseDto) GetDescription() OptNilString {
	return s.Description
}

// GetExifImageHeight returns the value of ExifImageHeight.
func (s *ExifResponseDto) GetExifImageHeight() OptNilFloat64 {
	return s.ExifImageHeight
}

// GetExifImageWidth returns the value of ExifImageWidth.
func (s *ExifResponseDto) GetExifImageWidth() OptNilFloat64 {
	return s.ExifImageWidth
}

// GetExposureTime returns the value of ExposureTime.
func (s *ExifResponseDto) GetExposureTime() OptNilString {
	return s.ExposureTime
}

// GetFNumber returns the value of FNumber.
func (s *ExifResponseDto) GetFNumber() OptNilFloat64 {
	return s.FNumber
}

// GetFileSizeInByte returns the value of FileSizeInByte.
func (s *ExifResponseDto) GetFileSizeInByte() OptNilInt64 {
	return s.FileSizeInByte
}

// GetFocalLength returns the value of FocalLength.
func (s *ExifResponseDto) GetFocalLength() OptNilFloat64 {
	return s.FocalLength
}

// GetIso returns the value of Iso.
func (s *ExifResponseDto) GetIso() OptNilFloat64 {
	return s.Iso
}

// GetLatitude returns the value of Latitude.
func (s *ExifResponseDto) GetLatitude() OptNilFloat64 {
	return s.Latitude
}

// GetLensModel returns the value of LensModel.
func (s *ExifResponseDto) GetLensModel() OptNilString {
	return s.LensModel
}

// GetLongitude returns the value of Longitude.
func (s *ExifResponseDto) GetLongitude() OptNilFloat64 {
	return s.Longitude
}

// GetMake returns the value of Make.
func (s *ExifResponseDto) GetMake() OptNilString {
	return s.Make
}

// GetModel returns the value of Model.
func (s *ExifResponseDto) GetModel() OptNilString {
	return s.Model
}

// GetModifyDate returns the value of ModifyDate.
func (s *ExifResponseDto) GetModifyDate() OptNilDateTime {
	return s.ModifyDate
}

// GetOrientation returns the value of Orientation.
func (s *ExifResponseDto) GetOrientation() OptNilString {
	return s.Orientation
}

// GetProjectionType returns the value of ProjectionType.
func (s *ExifResponseDto) GetProjectionType() OptNilString {
	return s.ProjectionType
}

// GetRating returns the value of Rating.
func (s *ExifResponseDto) GetRating() OptNilFloat64 {
	return s.Rating
}

// GetState returns the value of State.
func (s *ExifResponseDto) GetState() OptNilString {
	return s.State
}

// GetTimeZone returns the value of TimeZone.
func (s *ExifResponseDto) GetTimeZone() OptNilString {
	return s.TimeZone
}

// SetCity sets the value of City.
func (s *ExifResponseDto) SetCity(val OptNilString) {
	s.City = val
}

// SetCountry sets the value of Country.
func (s *ExifResponseDto) SetCountry(val OptNilString) {
	s.Country = val
}

// SetDateTimeOriginal sets the value of DateTimeOriginal.
func (s *ExifResponseDto) SetDateTimeOriginal(val OptNilDateTime) {
	s.DateTimeOriginal = val
}

// SetDescription sets the value of Description.
func (s *ExifResponseDto) SetDescription(val OptNilString) {
	s.Description = val
}

// SetExifImageHeight sets the value of ExifImageHeight.
func (s *ExifResponseDto) SetExifImageHeight(val OptNilFloat64) {
	s.ExifImageHeight = val
}

// SetExifImageWidth sets the value of ExifImageWidth.
func (s *ExifResponseDto) SetExifImageWidth(val OptNilFloat64) {
	s.ExifImageWidth = val
}

// SetExposureTime sets the value of ExposureTime.
func (s *ExifResponseDto) SetExposureTime(val OptNilString) {
	s.ExposureTime = val
}

// SetFNumber sets the value of FNumber.
func (s *ExifResponseDto) SetFNumber(val OptNilFloat64) {
	s.FNumber = val
}

// SetFileSizeInByte sets the value of FileSizeInByte.
func (s *ExifResponseDto) SetFileSizeInByte(val OptNilInt64) {
	s.FileSizeInByte = val
}

// SetFocalLength sets the value of FocalLength.
func (s *ExifResponseDto) SetFocalLength(val OptNilFloat64) {
	s.FocalLength = val
}

// SetIso sets the value of Iso.
func (s *ExifResponseDto) SetIso(val OptNilFloat64) {
	s.Iso = val
}

// SetLatitude sets the value of Latitude.
func (s *ExifResponseDto) SetLatitude(val OptNilFloat64) {
	s.Latitude = val
}

// SetLensModel sets the value of LensModel.
func (s *ExifResponseDto) SetLensModel(val OptNilString) {
	s.LensModel = val
}

// SetLongitude sets the value of Longitude.
func (s *ExifResponseDto) SetLongitude(val OptNilFloat64) {
	s.Longitude = val
}

// SetMake sets the value of Make.
func (s *ExifResponseDto) SetMake(val OptNilString) {
	s.Make = val
}

// SetModel sets the value of Model.
func (s *ExifResponseDto) SetModel(val OptNilString) {
	s.Model = val
}

// SetModifyDate sets the value of ModifyDate.
func (s *ExifResponseDto) SetModifyDate(val OptNilDateTime) {
	s.ModifyDate = val
}

// SetOrientation sets the value of Orientation.
func (s *ExifResponseDto) SetOrientation(val OptNilString) {
	s.Orientation = val
}

// SetProjectionType sets the value of ProjectionType.
func (s *ExifResponseDto) SetProjectionType(val OptNilString) {
	s.ProjectionType = val
}

// SetRating sets the value of Rating.
func (s *ExifResponseDto) SetRating(val OptNilFloat64) {
	s.Rating = val
}

// SetState sets the value of State.
func (s *ExifResponseDto) SetState(val OptNilString) {
	s.State = val
}

// SetTimeZone sets the value of TimeZone.
func (s *ExifResponseDto) SetTimeZone(val OptNilString) {
	s.TimeZone = val
}

// Ref: #/components/schemas/FaceDto
type FaceDto struct {
	ID uuid.UUID `json:"id"`
}

// GetID returns the value of ID.
func (s *FaceDto) GetID() uuid.UUID {
	return s.ID
}

// SetID sets the value of ID.
func (s *FaceDto) SetID(val uuid.UUID) {
	s.ID = val
}

// Ref: #/components/schemas/FacialRecognitionConfig
type FacialRecognitionConfig struct {
	Enabled     bool    `json:"enabled"`
	MaxDistance float64 `json:"maxDistance"`
	MinFaces    int     `json:"minFaces"`
	MinScore    float64 `json:"minScore"`
	ModelName   string  `json:"modelName"`
}

// GetEnabled returns the value of Enabled.
func (s *FacialRecognitionConfig) GetEnabled() bool {
	return s.Enabled
}

// GetMaxDistance returns the value of MaxDistance.
func (s *FacialRecognitionConfig) GetMaxDistance() float64 {
	return s.MaxDistance
}

// GetMinFaces returns the value of MinFaces.
func (s *FacialRecognitionConfig) GetMinFaces() int {
	return s.MinFaces
}

// GetMinScore returns the value of MinScore.
func (s *FacialRecognitionConfig) GetMinScore() float64 {
	return s.MinScore
}

// GetModelName returns the value of ModelName.
func (s *FacialRecognitionConfig) GetModelName() string {
	return s.ModelName
}

// SetEnabled sets the value of Enabled.
func (s *FacialRecognitionConfig) SetEnabled(val bool) {
	s.Enabled = val
}

// SetMaxDistance sets the value of MaxDistance.
func (s *FacialRecognitionConfig) SetMaxDistance(val float64) {
	s.MaxDistance = val
}

// SetMinFaces sets the value of MinFaces.
func (s *FacialRecognitionConfig) SetMinFaces(val int) {
	s.MinFaces = val
}

// SetMinScore sets the value of MinScore.
func (s *FacialRecognitionConfig) SetMinScore(val float64) {
	s.MinScore = val
}

// SetModelName sets the value of ModelName.
func (s *FacialRecognitionConfig) SetModelName(val string) {
	s.ModelName = val
}

// Ref: #/components/schemas/FoldersResponse
type FoldersResponse struct {
	Enabled    bool `json:"enabled"`
	SidebarWeb bool `json:"sidebarWeb"`
}

// GetEnabled returns the value of Enabled.
func (s *FoldersResponse) GetEnabled() bool {
	return s.Enabled
}

// GetSidebarWeb returns the value of SidebarWeb.
func (s *FoldersResponse) GetSidebarWeb() bool {
	return s.SidebarWeb
}

// SetEnabled sets the value of Enabled.
func (s *FoldersResponse) SetEnabled(val bool) {
	s.Enabled = val
}

// SetSidebarWeb sets the value of SidebarWeb.
func (s *FoldersResponse) SetSidebarWeb(val bool) {
	s.SidebarWeb = val
}

// Ref: #/components/schemas/FoldersUpdate
type FoldersUpdate struct {
	Enabled    OptBool `json:"enabled"`
	SidebarWeb OptBool `json:"sidebarWeb"`
}

// GetEnabled returns the value of Enabled.
func (s *FoldersUpdate) GetEnabled() OptBool {
	return s.Enabled
}

// GetSidebarWeb returns the value of SidebarWeb.
func (s *FoldersUpdate) GetSidebarWeb() OptBool {
	return s.SidebarWeb
}

// SetEnabled sets the value of Enabled.
func (s *FoldersUpdate) SetEnabled(val OptBool) {
	s.Enabled = val
}

// SetSidebarWeb sets the value of SidebarWeb.
func (s *FoldersUpdate) SetSidebarWeb(val OptBool) {
	s.SidebarWeb = val
}

type GetPersonThumbnailOK struct {
	Data io.Reader
}

// Read reads data from the Data reader.
//
// Kept to satisfy the io.Reader interface.
func (s GetPersonThumbnailOK) Read(p []byte) (n int, err error) {
	if s.Data == nil {
		return 0, io.EOF
	}
	return s.Data.Read(p)
}

type GetProfileImageOK struct {
	Data io.Reader
}

// Read reads data from the Data reader.
//
// Kept to satisfy the io.Reader interface.
func (s GetProfileImageOK) Read(p []byte) (n int, err error) {
	if s.Data == nil {
		return 0, io.EOF
	}
	return s.Data.Read(p)
}

// GetServerLicenseNotFound is response for GetServerLicense operation.
type GetServerLicenseNotFound struct{}

func (*GetServerLicenseNotFound) getServerLicenseRes() {}

// GetSyncStreamOK is response for GetSyncStream operation.
type GetSyncStreamOK struct{}

// Ref: #/components/schemas/ImageFormat
type ImageFormat string

const (
	ImageFormatJpeg ImageFormat = "jpeg"
	ImageFormatWEBP ImageFormat = "webp"
)

// AllValues returns all ImageFormat values.
func (ImageFormat) AllValues() []ImageFormat {
	return []ImageFormat{
		ImageFormatJpeg,
		ImageFormatWEBP,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s ImageFormat) MarshalText() ([]byte, error) {
	switch s {
	case ImageFormatJpeg:
		return []byte(s), nil
	case ImageFormatWEBP:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ImageFormat) UnmarshalText(data []byte) error {
	switch ImageFormat(data) {
	case ImageFormatJpeg:
		*s = ImageFormatJpeg
		return nil
	case ImageFormatWEBP:
		*s = ImageFormatWEBP
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/JobCommand
type JobCommand string

const (
	JobCommandStart       JobCommand = "start"
	JobCommandPause       JobCommand = "pause"
	JobCommandResume      JobCommand = "resume"
	JobCommandEmpty       JobCommand = "empty"
	JobCommandClearFailed JobCommand = "clear-failed"
)

// AllValues returns all JobCommand values.
func (JobCommand) AllValues() []JobCommand {
	return []JobCommand{
		JobCommandStart,
		JobCommandPause,
		JobCommandResume,
		JobCommandEmpty,
		JobCommandClearFailed,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s JobCommand) MarshalText() ([]byte, error) {
	switch s {
	case JobCommandStart:
		return []byte(s), nil
	case JobCommandPause:
		return []byte(s), nil
	case JobCommandResume:
		return []byte(s), nil
	case JobCommandEmpty:
		return []byte(s), nil
	case JobCommandClearFailed:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *JobCommand) UnmarshalText(data []byte) error {
	switch JobCommand(data) {
	case JobCommandStart:
		*s = JobCommandStart
		return nil
	case JobCommandPause:
		*s = JobCommandPause
		return nil
	case JobCommandResume:
		*s = JobCommandResume
		return nil
	case JobCommandEmpty:
		*s = JobCommandEmpty
		return nil
	case JobCommandClearFailed:
		*s = JobCommandClearFailed
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/JobCommandDto
type JobCommandDto struct {
	Command JobCommand `json:"command"`
	Force   OptBool    `json:"force"`
}

// GetCommand returns the value of Command.
func (s *JobCommandDto) GetCommand() JobCommand {
	return s.Command
}

// GetForce returns the value of Force.
func (s *JobCommandDto) GetForce() OptBool {
	return s.Force
}

// SetCommand sets the value of Command.
func (s *JobCommandDto) SetCommand(val JobCommand) {
	s.Command = val
}

// SetForce sets the value of Force.
func (s *JobCommandDto) SetForce(val OptBool) {
	s.Force = val
}

// Ref: #/components/schemas/JobCountsDto
type JobCountsDto struct {
	Active    int `json:"active"`
	Completed int `json:"completed"`
	Delayed   int `json:"delayed"`
	Failed    int `json:"failed"`
	Paused    int `json:"paused"`
	Waiting   int `json:"waiting"`
}

// GetActive returns the value of Active.
func (s *JobCountsDto) GetActive() int {
	return s.Active
}

// GetCompleted returns the value of Completed.
func (s *JobCountsDto) GetCompleted() int {
	return s.Completed
}

// GetDelayed returns the value of Delayed.
func (s *JobCountsDto) GetDelayed() int {
	return s.Delayed
}

// GetFailed returns the value of Failed.
func (s *JobCountsDto) GetFailed() int {
	return s.Failed
}

// GetPaused returns the value of Paused.
func (s *JobCountsDto) GetPaused() int {
	return s.Paused
}

// GetWaiting returns the value of Waiting.
func (s *JobCountsDto) GetWaiting() int {
	return s.Waiting
}

// SetActive sets the value of Active.
func (s *JobCountsDto) SetActive(val int) {
	s.Active = val
}

// SetCompleted sets the value of Completed.
func (s *JobCountsDto) SetCompleted(val int) {
	s.Completed = val
}

// SetDelayed sets the value of Delayed.
func (s *JobCountsDto) SetDelayed(val int) {
	s.Delayed = val
}

// SetFailed sets the value of Failed.
func (s *JobCountsDto) SetFailed(val int) {
	s.Failed = val
}

// SetPaused sets the value of Paused.
func (s *JobCountsDto) SetPaused(val int) {
	s.Paused = val
}

// SetWaiting sets the value of Waiting.
func (s *JobCountsDto) SetWaiting(val int) {
	s.Waiting = val
}

// Ref: #/components/schemas/JobCreateDto
type JobCreateDto struct {
	Name ManualJobName `json:"name"`
}

// GetName returns the value of Name.
func (s *JobCreateDto) GetName() ManualJobName {
	return s.Name
}

// SetName sets the value of Name.
func (s *JobCreateDto) SetName(val ManualJobName) {
	s.Name = val
}

// Ref: #/components/schemas/JobName
type JobName string

const (
	JobNameThumbnailGeneration      JobName = "thumbnailGeneration"
	JobNameMetadataExtraction       JobName = "metadataExtraction"
	JobNameVideoConversion          JobName = "videoConversion"
	JobNameFaceDetection            JobName = "faceDetection"
	JobNameFacialRecognition        JobName = "facialRecognition"
	JobNameSmartSearch              JobName = "smartSearch"
	JobNameDuplicateDetection       JobName = "duplicateDetection"
	JobNameBackgroundTask           JobName = "backgroundTask"
	JobNameStorageTemplateMigration JobName = "storageTemplateMigration"
	JobNameMigration                JobName = "migration"
	JobNameSearch                   JobName = "search"
	JobNameSidecar                  JobName = "sidecar"
	JobNameLibrary                  JobName = "library"
	JobNameNotifications            JobName = "notifications"
	JobNameBackupDatabase           JobName = "backupDatabase"
)

// AllValues returns all JobName values.
func (JobName) AllValues() []JobName {
	return []JobName{
		JobNameThumbnailGeneration,
		JobNameMetadataExtraction,
		JobNameVideoConversion,
		JobNameFaceDetection,
		JobNameFacialRecognition,
		JobNameSmartSearch,
		JobNameDuplicateDetection,
		JobNameBackgroundTask,
		JobNameStorageTemplateMigration,
		JobNameMigration,
		JobNameSearch,
		JobNameSidecar,
		JobNameLibrary,
		JobNameNotifications,
		JobNameBackupDatabase,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s JobName) MarshalText() ([]byte, error) {
	switch s {
	case JobNameThumbnailGeneration:
		return []byte(s), nil
	case JobNameMetadataExtraction:
		return []byte(s), nil
	case JobNameVideoConversion:
		return []byte(s), nil
	case JobNameFaceDetection:
		return []byte(s), nil
	case JobNameFacialRecognition:
		return []byte(s), nil
	case JobNameSmartSearch:
		return []byte(s), nil
	case JobNameDuplicateDetection:
		return []byte(s), nil
	case JobNameBackgroundTask:
		return []byte(s), nil
	case JobNameStorageTemplateMigration:
		return []byte(s), nil
	case JobNameMigration:
		return []byte(s), nil
	case JobNameSearch:
		return []byte(s), nil
	case JobNameSidecar:
		return []byte(s), nil
	case JobNameLibrary:
		return []byte(s), nil
	case JobNameNotifications:
		return []byte(s), nil
	case JobNameBackupDatabase:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *JobName) UnmarshalText(data []byte) error {
	switch JobName(data) {
	case JobNameThumbnailGeneration:
		*s = JobNameThumbnailGeneration
		return nil
	case JobNameMetadataExtraction:
		*s = JobNameMetadataExtraction
		return nil
	case JobNameVideoConversion:
		*s = JobNameVideoConversion
		return nil
	case JobNameFaceDetection:
		*s = JobNameFaceDetection
		return nil
	case JobNameFacialRecognition:
		*s = JobNameFacialRecognition
		return nil
	case JobNameSmartSearch:
		*s = JobNameSmartSearch
		return nil
	case JobNameDuplicateDetection:
		*s = JobNameDuplicateDetection
		return nil
	case JobNameBackgroundTask:
		*s = JobNameBackgroundTask
		return nil
	case JobNameStorageTemplateMigration:
		*s = JobNameStorageTemplateMigration
		return nil
	case JobNameMigration:
		*s = JobNameMigration
		return nil
	case JobNameSearch:
		*s = JobNameSearch
		return nil
	case JobNameSidecar:
		*s = JobNameSidecar
		return nil
	case JobNameLibrary:
		*s = JobNameLibrary
		return nil
	case JobNameNotifications:
		*s = JobNameNotifications
		return nil
	case JobNameBackupDatabase:
		*s = JobNameBackupDatabase
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/JobSettingsDto
type JobSettingsDto struct {
	Concurrency int `json:"concurrency"`
}

// GetConcurrency returns the value of Concurrency.
func (s *JobSettingsDto) GetConcurrency() int {
	return s.Concurrency
}

// SetConcurrency sets the value of Concurrency.
func (s *JobSettingsDto) SetConcurrency(val int) {
	s.Concurrency = val
}

// Ref: #/components/schemas/JobStatusDto
type JobStatusDto struct {
	JobCounts   JobCountsDto   `json:"jobCounts"`
	QueueStatus QueueStatusDto `json:"queueStatus"`
}

// GetJobCounts returns the value of JobCounts.
func (s *JobStatusDto) GetJobCounts() JobCountsDto {
	return s.JobCounts
}

// GetQueueStatus returns the value of QueueStatus.
func (s *JobStatusDto) GetQueueStatus() QueueStatusDto {
	return s.QueueStatus
}

// SetJobCounts sets the value of JobCounts.
func (s *JobStatusDto) SetJobCounts(val JobCountsDto) {
	s.JobCounts = val
}

// SetQueueStatus sets the value of QueueStatus.
func (s *JobStatusDto) SetQueueStatus(val QueueStatusDto) {
	s.QueueStatus = val
}

// Ref: #/components/schemas/LibraryResponseDto
type LibraryResponseDto struct {
	AssetCount        int         `json:"assetCount"`
	CreatedAt         time.Time   `json:"createdAt"`
	ExclusionPatterns []string    `json:"exclusionPatterns"`
	ID                string      `json:"id"`
	ImportPaths       []string    `json:"importPaths"`
	Name              string      `json:"name"`
	OwnerId           string      `json:"ownerId"`
	RefreshedAt       NilDateTime `json:"refreshedAt"`
	UpdatedAt         time.Time   `json:"updatedAt"`
}

// GetAssetCount returns the value of AssetCount.
func (s *LibraryResponseDto) GetAssetCount() int {
	return s.AssetCount
}

// GetCreatedAt returns the value of CreatedAt.
func (s *LibraryResponseDto) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetExclusionPatterns returns the value of ExclusionPatterns.
func (s *LibraryResponseDto) GetExclusionPatterns() []string {
	return s.ExclusionPatterns
}

// GetID returns the value of ID.
func (s *LibraryResponseDto) GetID() string {
	return s.ID
}

// GetImportPaths returns the value of ImportPaths.
func (s *LibraryResponseDto) GetImportPaths() []string {
	return s.ImportPaths
}

// GetName returns the value of Name.
func (s *LibraryResponseDto) GetName() string {
	return s.Name
}

// GetOwnerId returns the value of OwnerId.
func (s *LibraryResponseDto) GetOwnerId() string {
	return s.OwnerId
}

// GetRefreshedAt returns the value of RefreshedAt.
func (s *LibraryResponseDto) GetRefreshedAt() NilDateTime {
	return s.RefreshedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *LibraryResponseDto) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// SetAssetCount sets the value of AssetCount.
func (s *LibraryResponseDto) SetAssetCount(val int) {
	s.AssetCount = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *LibraryResponseDto) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetExclusionPatterns sets the value of ExclusionPatterns.
func (s *LibraryResponseDto) SetExclusionPatterns(val []string) {
	s.ExclusionPatterns = val
}

// SetID sets the value of ID.
func (s *LibraryResponseDto) SetID(val string) {
	s.ID = val
}

// SetImportPaths sets the value of ImportPaths.
func (s *LibraryResponseDto) SetImportPaths(val []string) {
	s.ImportPaths = val
}

// SetName sets the value of Name.
func (s *LibraryResponseDto) SetName(val string) {
	s.Name = val
}

// SetOwnerId sets the value of OwnerId.
func (s *LibraryResponseDto) SetOwnerId(val string) {
	s.OwnerId = val
}

// SetRefreshedAt sets the value of RefreshedAt.
func (s *LibraryResponseDto) SetRefreshedAt(val NilDateTime) {
	s.RefreshedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *LibraryResponseDto) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// Ref: #/components/schemas/LibraryStatsResponseDto
type LibraryStatsResponseDto struct {
	Photos int   `json:"photos"`
	Total  int   `json:"total"`
	Usage  int64 `json:"usage"`
	Videos int   `json:"videos"`
}

// GetPhotos returns the value of Photos.
func (s *LibraryStatsResponseDto) GetPhotos() int {
	return s.Photos
}

// GetTotal returns the value of Total.
func (s *LibraryStatsResponseDto) GetTotal() int {
	return s.Total
}

// GetUsage returns the value of Usage.
func (s *LibraryStatsResponseDto) GetUsage() int64 {
	return s.Usage
}

// GetVideos returns the value of Videos.
func (s *LibraryStatsResponseDto) GetVideos() int {
	return s.Videos
}

// SetPhotos sets the value of Photos.
func (s *LibraryStatsResponseDto) SetPhotos(val int) {
	s.Photos = val
}

// SetTotal sets the value of Total.
func (s *LibraryStatsResponseDto) SetTotal(val int) {
	s.Total = val
}

// SetUsage sets the value of Usage.
func (s *LibraryStatsResponseDto) SetUsage(val int64) {
	s.Usage = val
}

// SetVideos sets the value of Videos.
func (s *LibraryStatsResponseDto) SetVideos(val int) {
	s.Videos = val
}

// Ref: #/components/schemas/LicenseKeyDto
type LicenseKeyDto struct {
	ActivationKey string `json:"activationKey"`
	LicenseKey    string `json:"licenseKey"`
}

// GetActivationKey returns the value of ActivationKey.
func (s *LicenseKeyDto) GetActivationKey() string {
	return s.ActivationKey
}

// GetLicenseKey returns the value of LicenseKey.
func (s *LicenseKeyDto) GetLicenseKey() string {
	return s.LicenseKey
}

// SetActivationKey sets the value of ActivationKey.
func (s *LicenseKeyDto) SetActivationKey(val string) {
	s.ActivationKey = val
}

// SetLicenseKey sets the value of LicenseKey.
func (s *LicenseKeyDto) SetLicenseKey(val string) {
	s.LicenseKey = val
}

// Ref: #/components/schemas/LicenseResponseDto
type LicenseResponseDto struct {
	ActivatedAt   time.Time `json:"activatedAt"`
	ActivationKey string    `json:"activationKey"`
	LicenseKey    string    `json:"licenseKey"`
}

// GetActivatedAt returns the value of ActivatedAt.
func (s *LicenseResponseDto) GetActivatedAt() time.Time {
	return s.ActivatedAt
}

// GetActivationKey returns the value of ActivationKey.
func (s *LicenseResponseDto) GetActivationKey() string {
	return s.ActivationKey
}

// GetLicenseKey returns the value of LicenseKey.
func (s *LicenseResponseDto) GetLicenseKey() string {
	return s.LicenseKey
}

// SetActivatedAt sets the value of ActivatedAt.
func (s *LicenseResponseDto) SetActivatedAt(val time.Time) {
	s.ActivatedAt = val
}

// SetActivationKey sets the value of ActivationKey.
func (s *LicenseResponseDto) SetActivationKey(val string) {
	s.ActivationKey = val
}

// SetLicenseKey sets the value of LicenseKey.
func (s *LicenseResponseDto) SetLicenseKey(val string) {
	s.LicenseKey = val
}

func (*LicenseResponseDto) getServerLicenseRes() {}

// LockAuthSessionNoContent is response for LockAuthSession operation.
type LockAuthSessionNoContent struct{}

// LockSessionNoContent is response for LockSession operation.
type LockSessionNoContent struct{}

// Ref: #/components/schemas/LogLevel
type LogLevel string

const (
	LogLevelVerbose LogLevel = "verbose"
	LogLevelDebug   LogLevel = "debug"
	LogLevelLog     LogLevel = "log"
	LogLevelWarn    LogLevel = "warn"
	LogLevelError   LogLevel = "error"
	LogLevelFatal   LogLevel = "fatal"
)

// AllValues returns all LogLevel values.
func (LogLevel) AllValues() []LogLevel {
	return []LogLevel{
		LogLevelVerbose,
		LogLevelDebug,
		LogLevelLog,
		LogLevelWarn,
		LogLevelError,
		LogLevelFatal,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s LogLevel) MarshalText() ([]byte, error) {
	switch s {
	case LogLevelVerbose:
		return []byte(s), nil
	case LogLevelDebug:
		return []byte(s), nil
	case LogLevelLog:
		return []byte(s), nil
	case LogLevelWarn:
		return []byte(s), nil
	case LogLevelError:
		return []byte(s), nil
	case LogLevelFatal:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *LogLevel) UnmarshalText(data []byte) error {
	switch LogLevel(data) {
	case LogLevelVerbose:
		*s = LogLevelVerbose
		return nil
	case LogLevelDebug:
		*s = LogLevelDebug
		return nil
	case LogLevelLog:
		*s = LogLevelLog
		return nil
	case LogLevelWarn:
		*s = LogLevelWarn
		return nil
	case LogLevelError:
		*s = LogLevelError
		return nil
	case LogLevelFatal:
		*s = LogLevelFatal
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/LoginCredentialDto
type LoginCredentialDto struct {
	Email    string `json:"email"`
	Password string `json:"password"`
}

// GetEmail returns the value of Email.
func (s *LoginCredentialDto) GetEmail() string {
	return s.Email
}

// GetPassword returns the value of Password.
func (s *LoginCredentialDto) GetPassword() string {
	return s.Password
}

// SetEmail sets the value of Email.
func (s *LoginCredentialDto) SetEmail(val string) {
	s.Email = val
}

// SetPassword sets the value of Password.
func (s *LoginCredentialDto) SetPassword(val string) {
	s.Password = val
}

// Ref: #/components/schemas/LoginResponseDto
type LoginResponseDto struct {
	AccessToken          string `json:"accessToken"`
	IsAdmin              bool   `json:"isAdmin"`
	IsOnboarded          bool   `json:"isOnboarded"`
	Name                 string `json:"name"`
	ProfileImagePath     string `json:"profileImagePath"`
	ShouldChangePassword bool   `json:"shouldChangePassword"`
	UserEmail            string `json:"userEmail"`
	UserId               string `json:"userId"`
}

// GetAccessToken returns the value of AccessToken.
func (s *LoginResponseDto) GetAccessToken() string {
	return s.AccessToken
}

// GetIsAdmin returns the value of IsAdmin.
func (s *LoginResponseDto) GetIsAdmin() bool {
	return s.IsAdmin
}

// GetIsOnboarded returns the value of IsOnboarded.
func (s *LoginResponseDto) GetIsOnboarded() bool {
	return s.IsOnboarded
}

// GetName returns the value of Name.
func (s *LoginResponseDto) GetName() string {
	return s.Name
}

// GetProfileImagePath returns the value of ProfileImagePath.
func (s *LoginResponseDto) GetProfileImagePath() string {
	return s.ProfileImagePath
}

// GetShouldChangePassword returns the value of ShouldChangePassword.
func (s *LoginResponseDto) GetShouldChangePassword() bool {
	return s.ShouldChangePassword
}

// GetUserEmail returns the value of UserEmail.
func (s *LoginResponseDto) GetUserEmail() string {
	return s.UserEmail
}

// GetUserId returns the value of UserId.
func (s *LoginResponseDto) GetUserId() string {
	return s.UserId
}

// SetAccessToken sets the value of AccessToken.
func (s *LoginResponseDto) SetAccessToken(val string) {
	s.AccessToken = val
}

// SetIsAdmin sets the value of IsAdmin.
func (s *LoginResponseDto) SetIsAdmin(val bool) {
	s.IsAdmin = val
}

// SetIsOnboarded sets the value of IsOnboarded.
func (s *LoginResponseDto) SetIsOnboarded(val bool) {
	s.IsOnboarded = val
}

// SetName sets the value of Name.
func (s *LoginResponseDto) SetName(val string) {
	s.Name = val
}

// SetProfileImagePath sets the value of ProfileImagePath.
func (s *LoginResponseDto) SetProfileImagePath(val string) {
	s.ProfileImagePath = val
}

// SetShouldChangePassword sets the value of ShouldChangePassword.
func (s *LoginResponseDto) SetShouldChangePassword(val bool) {
	s.ShouldChangePassword = val
}

// SetUserEmail sets the value of UserEmail.
func (s *LoginResponseDto) SetUserEmail(val string) {
	s.UserEmail = val
}

// SetUserId sets the value of UserId.
func (s *LoginResponseDto) SetUserId(val string) {
	s.UserId = val
}

// Ref: #/components/schemas/LogoutResponseDto
type LogoutResponseDto struct {
	RedirectUri string `json:"redirectUri"`
	Successful  bool   `json:"successful"`
}

// GetRedirectUri returns the value of RedirectUri.
func (s *LogoutResponseDto) GetRedirectUri() string {
	return s.RedirectUri
}

// GetSuccessful returns the value of Successful.
func (s *LogoutResponseDto) GetSuccessful() bool {
	return s.Successful
}

// SetRedirectUri sets the value of RedirectUri.
func (s *LogoutResponseDto) SetRedirectUri(val string) {
	s.RedirectUri = val
}

// SetSuccessful sets the value of Successful.
func (s *LogoutResponseDto) SetSuccessful(val bool) {
	s.Successful = val
}

// Ref: #/components/schemas/MachineLearningAvailabilityChecksDto
type MachineLearningAvailabilityChecksDto struct {
	Enabled  bool    `json:"enabled"`
	Interval float64 `json:"interval"`
	Timeout  float64 `json:"timeout"`
}

// GetEnabled returns the value of Enabled.
func (s *MachineLearningAvailabilityChecksDto) GetEnabled() bool {
	return s.Enabled
}

// GetInterval returns the value of Interval.
func (s *MachineLearningAvailabilityChecksDto) GetInterval() float64 {
	return s.Interval
}

// GetTimeout returns the value of Timeout.
func (s *MachineLearningAvailabilityChecksDto) GetTimeout() float64 {
	return s.Timeout
}

// SetEnabled sets the value of Enabled.
func (s *MachineLearningAvailabilityChecksDto) SetEnabled(val bool) {
	s.Enabled = val
}

// SetInterval sets the value of Interval.
func (s *MachineLearningAvailabilityChecksDto) SetInterval(val float64) {
	s.Interval = val
}

// SetTimeout sets the value of Timeout.
func (s *MachineLearningAvailabilityChecksDto) SetTimeout(val float64) {
	s.Timeout = val
}

// Ref: #/components/schemas/ManualJobName
type ManualJobName string

const (
	ManualJobNamePersonCleanup  ManualJobName = "person-cleanup"
	ManualJobNameTagCleanup     ManualJobName = "tag-cleanup"
	ManualJobNameUserCleanup    ManualJobName = "user-cleanup"
	ManualJobNameMemoryCleanup  ManualJobName = "memory-cleanup"
	ManualJobNameMemoryCreate   ManualJobName = "memory-create"
	ManualJobNameBackupDatabase ManualJobName = "backup-database"
)

// AllValues returns all ManualJobName values.
func (ManualJobName) AllValues() []ManualJobName {
	return []ManualJobName{
		ManualJobNamePersonCleanup,
		ManualJobNameTagCleanup,
		ManualJobNameUserCleanup,
		ManualJobNameMemoryCleanup,
		ManualJobNameMemoryCreate,
		ManualJobNameBackupDatabase,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s ManualJobName) MarshalText() ([]byte, error) {
	switch s {
	case ManualJobNamePersonCleanup:
		return []byte(s), nil
	case ManualJobNameTagCleanup:
		return []byte(s), nil
	case ManualJobNameUserCleanup:
		return []byte(s), nil
	case ManualJobNameMemoryCleanup:
		return []byte(s), nil
	case ManualJobNameMemoryCreate:
		return []byte(s), nil
	case ManualJobNameBackupDatabase:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ManualJobName) UnmarshalText(data []byte) error {
	switch ManualJobName(data) {
	case ManualJobNamePersonCleanup:
		*s = ManualJobNamePersonCleanup
		return nil
	case ManualJobNameTagCleanup:
		*s = ManualJobNameTagCleanup
		return nil
	case ManualJobNameUserCleanup:
		*s = ManualJobNameUserCleanup
		return nil
	case ManualJobNameMemoryCleanup:
		*s = ManualJobNameMemoryCleanup
		return nil
	case ManualJobNameMemoryCreate:
		*s = ManualJobNameMemoryCreate
		return nil
	case ManualJobNameBackupDatabase:
		*s = ManualJobNameBackupDatabase
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/MapMarkerResponseDto
type MapMarkerResponseDto struct {
	City    NilString `json:"city"`
	Country NilString `json:"country"`
	ID      string    `json:"id"`
	Lat     float64   `json:"lat"`
	Lon     float64   `json:"lon"`
	State   NilString `json:"state"`
}

// GetCity returns the value of City.
func (s *MapMarkerResponseDto) GetCity() NilString {
	return s.City
}

// GetCountry returns the value of Country.
func (s *MapMarkerResponseDto) GetCountry() NilString {
	return s.Country
}

// GetID returns the value of ID.
func (s *MapMarkerResponseDto) GetID() string {
	return s.ID
}

// GetLat returns the value of Lat.
func (s *MapMarkerResponseDto) GetLat() float64 {
	return s.Lat
}

// GetLon returns the value of Lon.
func (s *MapMarkerResponseDto) GetLon() float64 {
	return s.Lon
}

// GetState returns the value of State.
func (s *MapMarkerResponseDto) GetState() NilString {
	return s.State
}

// SetCity sets the value of City.
func (s *MapMarkerResponseDto) SetCity(val NilString) {
	s.City = val
}

// SetCountry sets the value of Country.
func (s *MapMarkerResponseDto) SetCountry(val NilString) {
	s.Country = val
}

// SetID sets the value of ID.
func (s *MapMarkerResponseDto) SetID(val string) {
	s.ID = val
}

// SetLat sets the value of Lat.
func (s *MapMarkerResponseDto) SetLat(val float64) {
	s.Lat = val
}

// SetLon sets the value of Lon.
func (s *MapMarkerResponseDto) SetLon(val float64) {
	s.Lon = val
}

// SetState sets the value of State.
func (s *MapMarkerResponseDto) SetState(val NilString) {
	s.State = val
}

// Ref: #/components/schemas/MapReverseGeocodeResponseDto
type MapReverseGeocodeResponseDto struct {
	City    NilString `json:"city"`
	Country NilString `json:"country"`
	State   NilString `json:"state"`
}

// GetCity returns the value of City.
func (s *MapReverseGeocodeResponseDto) GetCity() NilString {
	return s.City
}

// GetCountry returns the value of Country.
func (s *MapReverseGeocodeResponseDto) GetCountry() NilString {
	return s.Country
}

// GetState returns the value of State.
func (s *MapReverseGeocodeResponseDto) GetState() NilString {
	return s.State
}

// SetCity sets the value of City.
func (s *MapReverseGeocodeResponseDto) SetCity(val NilString) {
	s.City = val
}

// SetCountry sets the value of Country.
func (s *MapReverseGeocodeResponseDto) SetCountry(val NilString) {
	s.Country = val
}

// SetState sets the value of State.
func (s *MapReverseGeocodeResponseDto) SetState(val NilString) {
	s.State = val
}

// Ref: #/components/schemas/MemoriesResponse
type MemoriesResponse struct {
	Enabled bool `json:"enabled"`
}

// GetEnabled returns the value of Enabled.
func (s *MemoriesResponse) GetEnabled() bool {
	return s.Enabled
}

// SetEnabled sets the value of Enabled.
func (s *MemoriesResponse) SetEnabled(val bool) {
	s.Enabled = val
}

// Ref: #/components/schemas/MemoriesUpdate
type MemoriesUpdate struct {
	Enabled OptBool `json:"enabled"`
}

// GetEnabled returns the value of Enabled.
func (s *MemoriesUpdate) GetEnabled() OptBool {
	return s.Enabled
}

// SetEnabled sets the value of Enabled.
func (s *MemoriesUpdate) SetEnabled(val OptBool) {
	s.Enabled = val
}

// Ref: #/components/schemas/MemoryCreateDto
type MemoryCreateDto struct {
	AssetIds []uuid.UUID  `json:"assetIds"`
	Data     OnThisDayDto `json:"data"`
	IsSaved  OptBool      `json:"isSaved"`
	MemoryAt time.Time    `json:"memoryAt"`
	SeenAt   OptDateTime  `json:"seenAt"`
	Type     MemoryType   `json:"type"`
}

// GetAssetIds returns the value of AssetIds.
func (s *MemoryCreateDto) GetAssetIds() []uuid.UUID {
	return s.AssetIds
}

// GetData returns the value of Data.
func (s *MemoryCreateDto) GetData() OnThisDayDto {
	return s.Data
}

// GetIsSaved returns the value of IsSaved.
func (s *MemoryCreateDto) GetIsSaved() OptBool {
	return s.IsSaved
}

// GetMemoryAt returns the value of MemoryAt.
func (s *MemoryCreateDto) GetMemoryAt() time.Time {
	return s.MemoryAt
}

// GetSeenAt returns the value of SeenAt.
func (s *MemoryCreateDto) GetSeenAt() OptDateTime {
	return s.SeenAt
}

// GetType returns the value of Type.
func (s *MemoryCreateDto) GetType() MemoryType {
	return s.Type
}

// SetAssetIds sets the value of AssetIds.
func (s *MemoryCreateDto) SetAssetIds(val []uuid.UUID) {
	s.AssetIds = val
}

// SetData sets the value of Data.
func (s *MemoryCreateDto) SetData(val OnThisDayDto) {
	s.Data = val
}

// SetIsSaved sets the value of IsSaved.
func (s *MemoryCreateDto) SetIsSaved(val OptBool) {
	s.IsSaved = val
}

// SetMemoryAt sets the value of MemoryAt.
func (s *MemoryCreateDto) SetMemoryAt(val time.Time) {
	s.MemoryAt = val
}

// SetSeenAt sets the value of SeenAt.
func (s *MemoryCreateDto) SetSeenAt(val OptDateTime) {
	s.SeenAt = val
}

// SetType sets the value of Type.
func (s *MemoryCreateDto) SetType(val MemoryType) {
	s.Type = val
}

// Ref: #/components/schemas/MemoryResponseDto
type MemoryResponseDto struct {
	Assets    []AssetResponseDto `json:"assets"`
	CreatedAt time.Time          `json:"createdAt"`
	Data      OnThisDayDto       `json:"data"`
	DeletedAt OptDateTime        `json:"deletedAt"`
	HideAt    OptDateTime        `json:"hideAt"`
	ID        string             `json:"id"`
	IsSaved   bool               `json:"isSaved"`
	MemoryAt  time.Time          `json:"memoryAt"`
	OwnerId   string             `json:"ownerId"`
	SeenAt    OptDateTime        `json:"seenAt"`
	ShowAt    OptDateTime        `json:"showAt"`
	Type      MemoryType         `json:"type"`
	UpdatedAt time.Time          `json:"updatedAt"`
}

// GetAssets returns the value of Assets.
func (s *MemoryResponseDto) GetAssets() []AssetResponseDto {
	return s.Assets
}

// GetCreatedAt returns the value of CreatedAt.
func (s *MemoryResponseDto) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetData returns the value of Data.
func (s *MemoryResponseDto) GetData() OnThisDayDto {
	return s.Data
}

// GetDeletedAt returns the value of DeletedAt.
func (s *MemoryResponseDto) GetDeletedAt() OptDateTime {
	return s.DeletedAt
}

// GetHideAt returns the value of HideAt.
func (s *MemoryResponseDto) GetHideAt() OptDateTime {
	return s.HideAt
}

// GetID returns the value of ID.
func (s *MemoryResponseDto) GetID() string {
	return s.ID
}

// GetIsSaved returns the value of IsSaved.
func (s *MemoryResponseDto) GetIsSaved() bool {
	return s.IsSaved
}

// GetMemoryAt returns the value of MemoryAt.
func (s *MemoryResponseDto) GetMemoryAt() time.Time {
	return s.MemoryAt
}

// GetOwnerId returns the value of OwnerId.
func (s *MemoryResponseDto) GetOwnerId() string {
	return s.OwnerId
}

// GetSeenAt returns the value of SeenAt.
func (s *MemoryResponseDto) GetSeenAt() OptDateTime {
	return s.SeenAt
}

// GetShowAt returns the value of ShowAt.
func (s *MemoryResponseDto) GetShowAt() OptDateTime {
	return s.ShowAt
}

// GetType returns the value of Type.
func (s *MemoryResponseDto) GetType() MemoryType {
	return s.Type
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *MemoryResponseDto) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// SetAssets sets the value of Assets.
func (s *MemoryResponseDto) SetAssets(val []AssetResponseDto) {
	s.Assets = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *MemoryResponseDto) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetData sets the value of Data.
func (s *MemoryResponseDto) SetData(val OnThisDayDto) {
	s.Data = val
}

// SetDeletedAt sets the value of DeletedAt.
func (s *MemoryResponseDto) SetDeletedAt(val OptDateTime) {
	s.DeletedAt = val
}

// SetHideAt sets the value of HideAt.
func (s *MemoryResponseDto) SetHideAt(val OptDateTime) {
	s.HideAt = val
}

// SetID sets the value of ID.
func (s *MemoryResponseDto) SetID(val string) {
	s.ID = val
}

// SetIsSaved sets the value of IsSaved.
func (s *MemoryResponseDto) SetIsSaved(val bool) {
	s.IsSaved = val
}

// SetMemoryAt sets the value of MemoryAt.
func (s *MemoryResponseDto) SetMemoryAt(val time.Time) {
	s.MemoryAt = val
}

// SetOwnerId sets the value of OwnerId.
func (s *MemoryResponseDto) SetOwnerId(val string) {
	s.OwnerId = val
}

// SetSeenAt sets the value of SeenAt.
func (s *MemoryResponseDto) SetSeenAt(val OptDateTime) {
	s.SeenAt = val
}

// SetShowAt sets the value of ShowAt.
func (s *MemoryResponseDto) SetShowAt(val OptDateTime) {
	s.ShowAt = val
}

// SetType sets the value of Type.
func (s *MemoryResponseDto) SetType(val MemoryType) {
	s.Type = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *MemoryResponseDto) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// Ref: #/components/schemas/MemoryStatisticsResponseDto
type MemoryStatisticsResponseDto struct {
	Total int `json:"total"`
}

// GetTotal returns the value of Total.
func (s *MemoryStatisticsResponseDto) GetTotal() int {
	return s.Total
}

// SetTotal sets the value of Total.
func (s *MemoryStatisticsResponseDto) SetTotal(val int) {
	s.Total = val
}

// Ref: #/components/schemas/MemoryType
type MemoryType string

const (
	MemoryTypeOnThisDay MemoryType = "on_this_day"
)

// AllValues returns all MemoryType values.
func (MemoryType) AllValues() []MemoryType {
	return []MemoryType{
		MemoryTypeOnThisDay,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s MemoryType) MarshalText() ([]byte, error) {
	switch s {
	case MemoryTypeOnThisDay:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *MemoryType) UnmarshalText(data []byte) error {
	switch MemoryType(data) {
	case MemoryTypeOnThisDay:
		*s = MemoryTypeOnThisDay
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/MemoryUpdateDto
type MemoryUpdateDto struct {
	IsSaved  OptBool     `json:"isSaved"`
	MemoryAt OptDateTime `json:"memoryAt"`
	SeenAt   OptDateTime `json:"seenAt"`
}

// GetIsSaved returns the value of IsSaved.
func (s *MemoryUpdateDto) GetIsSaved() OptBool {
	return s.IsSaved
}

// GetMemoryAt returns the value of MemoryAt.
func (s *MemoryUpdateDto) GetMemoryAt() OptDateTime {
	return s.MemoryAt
}

// GetSeenAt returns the value of SeenAt.
func (s *MemoryUpdateDto) GetSeenAt() OptDateTime {
	return s.SeenAt
}

// SetIsSaved sets the value of IsSaved.
func (s *MemoryUpdateDto) SetIsSaved(val OptBool) {
	s.IsSaved = val
}

// SetMemoryAt sets the value of MemoryAt.
func (s *MemoryUpdateDto) SetMemoryAt(val OptDateTime) {
	s.MemoryAt = val
}

// SetSeenAt sets the value of SeenAt.
func (s *MemoryUpdateDto) SetSeenAt(val OptDateTime) {
	s.SeenAt = val
}

// Ref: #/components/schemas/MergePersonDto
type MergePersonDto struct {
	Ids []uuid.UUID `json:"ids"`
}

// GetIds returns the value of Ids.
func (s *MergePersonDto) GetIds() []uuid.UUID {
	return s.Ids
}

// SetIds sets the value of Ids.
func (s *MergePersonDto) SetIds(val []uuid.UUID) {
	s.Ids = val
}

// Ref: #/components/schemas/MetadataSearchDto
type MetadataSearchDto struct {
	AlbumIds         []uuid.UUID        `json:"albumIds"`
	Checksum         OptString          `json:"checksum"`
	City             OptNilString       `json:"city"`
	Country          OptNilString       `json:"country"`
	CreatedAfter     OptDateTime        `json:"createdAfter"`
	CreatedBefore    OptDateTime        `json:"createdBefore"`
	Description      OptString          `json:"description"`
	DeviceAssetId    OptString          `json:"deviceAssetId"`
	DeviceId         OptString          `json:"deviceId"`
	EncodedVideoPath OptString          `json:"encodedVideoPath"`
	ID               OptUUID            `json:"id"`
	IsEncoded        OptBool            `json:"isEncoded"`
	IsFavorite       OptBool            `json:"isFavorite"`
	IsMotion         OptBool            `json:"isMotion"`
	IsNotInAlbum     OptBool            `json:"isNotInAlbum"`
	IsOffline        OptBool            `json:"isOffline"`
	LensModel        OptNilString       `json:"lensModel"`
	LibraryId        OptNilUUID         `json:"libraryId"`
	Make             OptString          `json:"make"`
	Model            OptNilString       `json:"model"`
	Order            OptAssetOrder      `json:"order"`
	OriginalFileName OptString          `json:"originalFileName"`
	OriginalPath     OptString          `json:"originalPath"`
	Page             OptFloat64         `json:"page"`
	PersonIds        []uuid.UUID        `json:"personIds"`
	PreviewPath      OptString          `json:"previewPath"`
	Rating           OptFloat64         `json:"rating"`
	Size             OptFloat64         `json:"size"`
	State            OptNilString       `json:"state"`
	TagIds           OptNilUUIDArray    `json:"tagIds"`
	TakenAfter       OptDateTime        `json:"takenAfter"`
	TakenBefore      OptDateTime        `json:"takenBefore"`
	ThumbnailPath    OptString          `json:"thumbnailPath"`
	TrashedAfter     OptDateTime        `json:"trashedAfter"`
	TrashedBefore    OptDateTime        `json:"trashedBefore"`
	Type             OptAssetTypeEnum   `json:"type"`
	UpdatedAfter     OptDateTime        `json:"updatedAfter"`
	UpdatedBefore    OptDateTime        `json:"updatedBefore"`
	Visibility       OptAssetVisibility `json:"visibility"`
	WithDeleted      OptBool            `json:"withDeleted"`
	WithExif         OptBool            `json:"withExif"`
	WithPeople       OptBool            `json:"withPeople"`
	WithStacked      OptBool            `json:"withStacked"`
}

// GetAlbumIds returns the value of AlbumIds.
func (s *MetadataSearchDto) GetAlbumIds() []uuid.UUID {
	return s.AlbumIds
}

// GetChecksum returns the value of Checksum.
func (s *MetadataSearchDto) GetChecksum() OptString {
	return s.Checksum
}

// GetCity returns the value of City.
func (s *MetadataSearchDto) GetCity() OptNilString {
	return s.City
}

// GetCountry returns the value of Country.
func (s *MetadataSearchDto) GetCountry() OptNilString {
	return s.Country
}

// GetCreatedAfter returns the value of CreatedAfter.
func (s *MetadataSearchDto) GetCreatedAfter() OptDateTime {
	return s.CreatedAfter
}

// GetCreatedBefore returns the value of CreatedBefore.
func (s *MetadataSearchDto) GetCreatedBefore() OptDateTime {
	return s.CreatedBefore
}

// GetDescription returns the value of Description.
func (s *MetadataSearchDto) GetDescription() OptString {
	return s.Description
}

// GetDeviceAssetId returns the value of DeviceAssetId.
func (s *MetadataSearchDto) GetDeviceAssetId() OptString {
	return s.DeviceAssetId
}

// GetDeviceId returns the value of DeviceId.
func (s *MetadataSearchDto) GetDeviceId() OptString {
	return s.DeviceId
}

// GetEncodedVideoPath returns the value of EncodedVideoPath.
func (s *MetadataSearchDto) GetEncodedVideoPath() OptString {
	return s.EncodedVideoPath
}

// GetID returns the value of ID.
func (s *MetadataSearchDto) GetID() OptUUID {
	return s.ID
}

// GetIsEncoded returns the value of IsEncoded.
func (s *MetadataSearchDto) GetIsEncoded() OptBool {
	return s.IsEncoded
}

// GetIsFavorite returns the value of IsFavorite.
func (s *MetadataSearchDto) GetIsFavorite() OptBool {
	return s.IsFavorite
}

// GetIsMotion returns the value of IsMotion.
func (s *MetadataSearchDto) GetIsMotion() OptBool {
	return s.IsMotion
}

// GetIsNotInAlbum returns the value of IsNotInAlbum.
func (s *MetadataSearchDto) GetIsNotInAlbum() OptBool {
	return s.IsNotInAlbum
}

// GetIsOffline returns the value of IsOffline.
func (s *MetadataSearchDto) GetIsOffline() OptBool {
	return s.IsOffline
}

// GetLensModel returns the value of LensModel.
func (s *MetadataSearchDto) GetLensModel() OptNilString {
	return s.LensModel
}

// GetLibraryId returns the value of LibraryId.
func (s *MetadataSearchDto) GetLibraryId() OptNilUUID {
	return s.LibraryId
}

// GetMake returns the value of Make.
func (s *MetadataSearchDto) GetMake() OptString {
	return s.Make
}

// GetModel returns the value of Model.
func (s *MetadataSearchDto) GetModel() OptNilString {
	return s.Model
}

// GetOrder returns the value of Order.
func (s *MetadataSearchDto) GetOrder() OptAssetOrder {
	return s.Order
}

// GetOriginalFileName returns the value of OriginalFileName.
func (s *MetadataSearchDto) GetOriginalFileName() OptString {
	return s.OriginalFileName
}

// GetOriginalPath returns the value of OriginalPath.
func (s *MetadataSearchDto) GetOriginalPath() OptString {
	return s.OriginalPath
}

// GetPage returns the value of Page.
func (s *MetadataSearchDto) GetPage() OptFloat64 {
	return s.Page
}

// GetPersonIds returns the value of PersonIds.
func (s *MetadataSearchDto) GetPersonIds() []uuid.UUID {
	return s.PersonIds
}

// GetPreviewPath returns the value of PreviewPath.
func (s *MetadataSearchDto) GetPreviewPath() OptString {
	return s.PreviewPath
}

// GetRating returns the value of Rating.
func (s *MetadataSearchDto) GetRating() OptFloat64 {
	return s.Rating
}

// GetSize returns the value of Size.
func (s *MetadataSearchDto) GetSize() OptFloat64 {
	return s.Size
}

// GetState returns the value of State.
func (s *MetadataSearchDto) GetState() OptNilString {
	return s.State
}

// GetTagIds returns the value of TagIds.
func (s *MetadataSearchDto) GetTagIds() OptNilUUIDArray {
	return s.TagIds
}

// GetTakenAfter returns the value of TakenAfter.
func (s *MetadataSearchDto) GetTakenAfter() OptDateTime {
	return s.TakenAfter
}

// GetTakenBefore returns the value of TakenBefore.
func (s *MetadataSearchDto) GetTakenBefore() OptDateTime {
	return s.TakenBefore
}

// GetThumbnailPath returns the value of ThumbnailPath.
func (s *MetadataSearchDto) GetThumbnailPath() OptString {
	return s.ThumbnailPath
}

// GetTrashedAfter returns the value of TrashedAfter.
func (s *MetadataSearchDto) GetTrashedAfter() OptDateTime {
	return s.TrashedAfter
}

// GetTrashedBefore returns the value of TrashedBefore.
func (s *MetadataSearchDto) GetTrashedBefore() OptDateTime {
	return s.TrashedBefore
}

// GetType returns the value of Type.
func (s *MetadataSearchDto) GetType() OptAssetTypeEnum {
	return s.Type
}

// GetUpdatedAfter returns the value of UpdatedAfter.
func (s *MetadataSearchDto) GetUpdatedAfter() OptDateTime {
	return s.UpdatedAfter
}

// GetUpdatedBefore returns the value of UpdatedBefore.
func (s *MetadataSearchDto) GetUpdatedBefore() OptDateTime {
	return s.UpdatedBefore
}

// GetVisibility returns the value of Visibility.
func (s *MetadataSearchDto) GetVisibility() OptAssetVisibility {
	return s.Visibility
}

// GetWithDeleted returns the value of WithDeleted.
func (s *MetadataSearchDto) GetWithDeleted() OptBool {
	return s.WithDeleted
}

// GetWithExif returns the value of WithExif.
func (s *MetadataSearchDto) GetWithExif() OptBool {
	return s.WithExif
}

// GetWithPeople returns the value of WithPeople.
func (s *MetadataSearchDto) GetWithPeople() OptBool {
	return s.WithPeople
}

// GetWithStacked returns the value of WithStacked.
func (s *MetadataSearchDto) GetWithStacked() OptBool {
	return s.WithStacked
}

// SetAlbumIds sets the value of AlbumIds.
func (s *MetadataSearchDto) SetAlbumIds(val []uuid.UUID) {
	s.AlbumIds = val
}

// SetChecksum sets the value of Checksum.
func (s *MetadataSearchDto) SetChecksum(val OptString) {
	s.Checksum = val
}

// SetCity sets the value of City.
func (s *MetadataSearchDto) SetCity(val OptNilString) {
	s.City = val
}

// SetCountry sets the value of Country.
func (s *MetadataSearchDto) SetCountry(val OptNilString) {
	s.Country = val
}

// SetCreatedAfter sets the value of CreatedAfter.
func (s *MetadataSearchDto) SetCreatedAfter(val OptDateTime) {
	s.CreatedAfter = val
}

// SetCreatedBefore sets the value of CreatedBefore.
func (s *MetadataSearchDto) SetCreatedBefore(val OptDateTime) {
	s.CreatedBefore = val
}

// SetDescription sets the value of Description.
func (s *MetadataSearchDto) SetDescription(val OptString) {
	s.Description = val
}

// SetDeviceAssetId sets the value of DeviceAssetId.
func (s *MetadataSearchDto) SetDeviceAssetId(val OptString) {
	s.DeviceAssetId = val
}

// SetDeviceId sets the value of DeviceId.
func (s *MetadataSearchDto) SetDeviceId(val OptString) {
	s.DeviceId = val
}

// SetEncodedVideoPath sets the value of EncodedVideoPath.
func (s *MetadataSearchDto) SetEncodedVideoPath(val OptString) {
	s.EncodedVideoPath = val
}

// SetID sets the value of ID.
func (s *MetadataSearchDto) SetID(val OptUUID) {
	s.ID = val
}

// SetIsEncoded sets the value of IsEncoded.
func (s *MetadataSearchDto) SetIsEncoded(val OptBool) {
	s.IsEncoded = val
}

// SetIsFavorite sets the value of IsFavorite.
func (s *MetadataSearchDto) SetIsFavorite(val OptBool) {
	s.IsFavorite = val
}

// SetIsMotion sets the value of IsMotion.
func (s *MetadataSearchDto) SetIsMotion(val OptBool) {
	s.IsMotion = val
}

// SetIsNotInAlbum sets the value of IsNotInAlbum.
func (s *MetadataSearchDto) SetIsNotInAlbum(val OptBool) {
	s.IsNotInAlbum = val
}

// SetIsOffline sets the value of IsOffline.
func (s *MetadataSearchDto) SetIsOffline(val OptBool) {
	s.IsOffline = val
}

// SetLensModel sets the value of LensModel.
func (s *MetadataSearchDto) SetLensModel(val OptNilString) {
	s.LensModel = val
}

// SetLibraryId sets the value of LibraryId.
func (s *MetadataSearchDto) SetLibraryId(val OptNilUUID) {
	s.LibraryId = val
}

// SetMake sets the value of Make.
func (s *MetadataSearchDto) SetMake(val OptString) {
	s.Make = val
}

// SetModel sets the value of Model.
func (s *MetadataSearchDto) SetModel(val OptNilString) {
	s.Model = val
}

// SetOrder sets the value of Order.
func (s *MetadataSearchDto) SetOrder(val OptAssetOrder) {
	s.Order = val
}

// SetOriginalFileName sets the value of OriginalFileName.
func (s *MetadataSearchDto) SetOriginalFileName(val OptString) {
	s.OriginalFileName = val
}

// SetOriginalPath sets the value of OriginalPath.
func (s *MetadataSearchDto) SetOriginalPath(val OptString) {
	s.OriginalPath = val
}

// SetPage sets the value of Page.
func (s *MetadataSearchDto) SetPage(val OptFloat64) {
	s.Page = val
}

// SetPersonIds sets the value of PersonIds.
func (s *MetadataSearchDto) SetPersonIds(val []uuid.UUID) {
	s.PersonIds = val
}

// SetPreviewPath sets the value of PreviewPath.
func (s *MetadataSearchDto) SetPreviewPath(val OptString) {
	s.PreviewPath = val
}

// SetRating sets the value of Rating.
func (s *MetadataSearchDto) SetRating(val OptFloat64) {
	s.Rating = val
}

// SetSize sets the value of Size.
func (s *MetadataSearchDto) SetSize(val OptFloat64) {
	s.Size = val
}

// SetState sets the value of State.
func (s *MetadataSearchDto) SetState(val OptNilString) {
	s.State = val
}

// SetTagIds sets the value of TagIds.
func (s *MetadataSearchDto) SetTagIds(val OptNilUUIDArray) {
	s.TagIds = val
}

// SetTakenAfter sets the value of TakenAfter.
func (s *MetadataSearchDto) SetTakenAfter(val OptDateTime) {
	s.TakenAfter = val
}

// SetTakenBefore sets the value of TakenBefore.
func (s *MetadataSearchDto) SetTakenBefore(val OptDateTime) {
	s.TakenBefore = val
}

// SetThumbnailPath sets the value of ThumbnailPath.
func (s *MetadataSearchDto) SetThumbnailPath(val OptString) {
	s.ThumbnailPath = val
}

// SetTrashedAfter sets the value of TrashedAfter.
func (s *MetadataSearchDto) SetTrashedAfter(val OptDateTime) {
	s.TrashedAfter = val
}

// SetTrashedBefore sets the value of TrashedBefore.
func (s *MetadataSearchDto) SetTrashedBefore(val OptDateTime) {
	s.TrashedBefore = val
}

// SetType sets the value of Type.
func (s *MetadataSearchDto) SetType(val OptAssetTypeEnum) {
	s.Type = val
}

// SetUpdatedAfter sets the value of UpdatedAfter.
func (s *MetadataSearchDto) SetUpdatedAfter(val OptDateTime) {
	s.UpdatedAfter = val
}

// SetUpdatedBefore sets the value of UpdatedBefore.
func (s *MetadataSearchDto) SetUpdatedBefore(val OptDateTime) {
	s.UpdatedBefore = val
}

// SetVisibility sets the value of Visibility.
func (s *MetadataSearchDto) SetVisibility(val OptAssetVisibility) {
	s.Visibility = val
}

// SetWithDeleted sets the value of WithDeleted.
func (s *MetadataSearchDto) SetWithDeleted(val OptBool) {
	s.WithDeleted = val
}

// SetWithExif sets the value of WithExif.
func (s *MetadataSearchDto) SetWithExif(val OptBool) {
	s.WithExif = val
}

// SetWithPeople sets the value of WithPeople.
func (s *MetadataSearchDto) SetWithPeople(val OptBool) {
	s.WithPeople = val
}

// SetWithStacked sets the value of WithStacked.
func (s *MetadataSearchDto) SetWithStacked(val OptBool) {
	s.WithStacked = val
}

// NewNilDate returns new NilDate with value set to v.
func NewNilDate(v time.Time) NilDate {
	return NilDate{
		Value: v,
	}
}

// NilDate is nullable time.Time.
type NilDate struct {
	Value time.Time
	Null  bool
}

// SetTo sets value to v.
func (o *NilDate) SetTo(v time.Time) {
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o NilDate) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *NilDate) SetToNull() {
	o.Null = true
	var v time.Time
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilDate) Get() (v time.Time, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilDate) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilDateTime returns new NilDateTime with value set to v.
func NewNilDateTime(v time.Time) NilDateTime {
	return NilDateTime{
		Value: v,
	}
}

// NilDateTime is nullable time.Time.
type NilDateTime struct {
	Value time.Time
	Null  bool
}

// SetTo sets value to v.
func (o *NilDateTime) SetTo(v time.Time) {
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o NilDateTime) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *NilDateTime) SetToNull() {
	o.Null = true
	var v time.Time
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilDateTime) Get() (v time.Time, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilDateTime) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilFloat64 returns new NilFloat64 with value set to v.
func NewNilFloat64(v float64) NilFloat64 {
	return NilFloat64{
		Value: v,
	}
}

// NilFloat64 is nullable float64.
type NilFloat64 struct {
	Value float64
	Null  bool
}

// SetTo sets value to v.
func (o *NilFloat64) SetTo(v float64) {
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o NilFloat64) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *NilFloat64) SetToNull() {
	o.Null = true
	var v float64
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilFloat64) Get() (v float64, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilFloat64) Or(d float64) float64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilInt64 returns new NilInt64 with value set to v.
func NewNilInt64(v int64) NilInt64 {
	return NilInt64{
		Value: v,
	}
}

// NilInt64 is nullable int64.
type NilInt64 struct {
	Value int64
	Null  bool
}

// SetTo sets value to v.
func (o *NilInt64) SetTo(v int64) {
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o NilInt64) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *NilInt64) SetToNull() {
	o.Null = true
	var v int64
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilInt64) Get() (v int64, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilInt64) Or(d int64) int64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilPersonResponseDto returns new NilPersonResponseDto with value set to v.
func NewNilPersonResponseDto(v PersonResponseDto) NilPersonResponseDto {
	return NilPersonResponseDto{
		Value: v,
	}
}

// NilPersonResponseDto is nullable PersonResponseDto.
type NilPersonResponseDto struct {
	Value PersonResponseDto
	Null  bool
}

// SetTo sets value to v.
func (o *NilPersonResponseDto) SetTo(v PersonResponseDto) {
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o NilPersonResponseDto) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *NilPersonResponseDto) SetToNull() {
	o.Null = true
	var v PersonResponseDto
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilPersonResponseDto) Get() (v PersonResponseDto, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilPersonResponseDto) Or(d PersonResponseDto) PersonResponseDto {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilString returns new NilString with value set to v.
func NewNilString(v string) NilString {
	return NilString{
		Value: v,
	}
}

// NilString is nullable string.
type NilString struct {
	Value string
	Null  bool
}

// SetTo sets value to v.
func (o *NilString) SetTo(v string) {
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o NilString) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *NilString) SetToNull() {
	o.Null = true
	var v string
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilString) Get() (v string, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilUserLicense returns new NilUserLicense with value set to v.
func NewNilUserLicense(v UserLicense) NilUserLicense {
	return NilUserLicense{
		Value: v,
	}
}

// NilUserLicense is nullable UserLicense.
type NilUserLicense struct {
	Value UserLicense
	Null  bool
}

// SetTo sets value to v.
func (o *NilUserLicense) SetTo(v UserLicense) {
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o NilUserLicense) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *NilUserLicense) SetToNull() {
	o.Null = true
	var v UserLicense
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilUserLicense) Get() (v UserLicense, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilUserLicense) Or(d UserLicense) UserLicense {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #/components/schemas/NotificationCreateDto
type NotificationCreateDto struct {
	Data        *NotificationCreateDtoData `json:"data"`
	Description OptNilString               `json:"description"`
	Level       OptNotificationLevel       `json:"level"`
	ReadAt      OptNilDateTime             `json:"readAt"`
	Title       string                     `json:"title"`
	Type        OptNotificationType        `json:"type"`
	UserId      uuid.UUID                  `json:"userId"`
}

// GetData returns the value of Data.
func (s *NotificationCreateDto) GetData() *NotificationCreateDtoData {
	return s.Data
}

// GetDescription returns the value of Description.
func (s *NotificationCreateDto) GetDescription() OptNilString {
	return s.Description
}

// GetLevel returns the value of Level.
func (s *NotificationCreateDto) GetLevel() OptNotificationLevel {
	return s.Level
}

// GetReadAt returns the value of ReadAt.
func (s *NotificationCreateDto) GetReadAt() OptNilDateTime {
	return s.ReadAt
}

// GetTitle returns the value of Title.
func (s *NotificationCreateDto) GetTitle() string {
	return s.Title
}

// GetType returns the value of Type.
func (s *NotificationCreateDto) GetType() OptNotificationType {
	return s.Type
}

// GetUserId returns the value of UserId.
func (s *NotificationCreateDto) GetUserId() uuid.UUID {
	return s.UserId
}

// SetData sets the value of Data.
func (s *NotificationCreateDto) SetData(val *NotificationCreateDtoData) {
	s.Data = val
}

// SetDescription sets the value of Description.
func (s *NotificationCreateDto) SetDescription(val OptNilString) {
	s.Description = val
}

// SetLevel sets the value of Level.
func (s *NotificationCreateDto) SetLevel(val OptNotificationLevel) {
	s.Level = val
}

// SetReadAt sets the value of ReadAt.
func (s *NotificationCreateDto) SetReadAt(val OptNilDateTime) {
	s.ReadAt = val
}

// SetTitle sets the value of Title.
func (s *NotificationCreateDto) SetTitle(val string) {
	s.Title = val
}

// SetType sets the value of Type.
func (s *NotificationCreateDto) SetType(val OptNotificationType) {
	s.Type = val
}

// SetUserId sets the value of UserId.
func (s *NotificationCreateDto) SetUserId(val uuid.UUID) {
	s.UserId = val
}

type NotificationCreateDtoData struct{}

// Ref: #/components/schemas/NotificationDeleteAllDto
type NotificationDeleteAllDto struct {
	Ids []uuid.UUID `json:"ids"`
}

// GetIds returns the value of Ids.
func (s *NotificationDeleteAllDto) GetIds() []uuid.UUID {
	return s.Ids
}

// SetIds sets the value of Ids.
func (s *NotificationDeleteAllDto) SetIds(val []uuid.UUID) {
	s.Ids = val
}

// Ref: #/components/schemas/NotificationDto
type NotificationDto struct {
	CreatedAt   time.Time            `json:"createdAt"`
	Data        *NotificationDtoData `json:"data"`
	Description OptString            `json:"description"`
	ID          string               `json:"id"`
	Level       NotificationLevel    `json:"level"`
	ReadAt      OptDateTime          `json:"readAt"`
	Title       string               `json:"title"`
	Type        NotificationType     `json:"type"`
}

// GetCreatedAt returns the value of CreatedAt.
func (s *NotificationDto) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetData returns the value of Data.
func (s *NotificationDto) GetData() *NotificationDtoData {
	return s.Data
}

// GetDescription returns the value of Description.
func (s *NotificationDto) GetDescription() OptString {
	return s.Description
}

// GetID returns the value of ID.
func (s *NotificationDto) GetID() string {
	return s.ID
}

// GetLevel returns the value of Level.
func (s *NotificationDto) GetLevel() NotificationLevel {
	return s.Level
}

// GetReadAt returns the value of ReadAt.
func (s *NotificationDto) GetReadAt() OptDateTime {
	return s.ReadAt
}

// GetTitle returns the value of Title.
func (s *NotificationDto) GetTitle() string {
	return s.Title
}

// GetType returns the value of Type.
func (s *NotificationDto) GetType() NotificationType {
	return s.Type
}

// SetCreatedAt sets the value of CreatedAt.
func (s *NotificationDto) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetData sets the value of Data.
func (s *NotificationDto) SetData(val *NotificationDtoData) {
	s.Data = val
}

// SetDescription sets the value of Description.
func (s *NotificationDto) SetDescription(val OptString) {
	s.Description = val
}

// SetID sets the value of ID.
func (s *NotificationDto) SetID(val string) {
	s.ID = val
}

// SetLevel sets the value of Level.
func (s *NotificationDto) SetLevel(val NotificationLevel) {
	s.Level = val
}

// SetReadAt sets the value of ReadAt.
func (s *NotificationDto) SetReadAt(val OptDateTime) {
	s.ReadAt = val
}

// SetTitle sets the value of Title.
func (s *NotificationDto) SetTitle(val string) {
	s.Title = val
}

// SetType sets the value of Type.
func (s *NotificationDto) SetType(val NotificationType) {
	s.Type = val
}

type NotificationDtoData struct{}

// Ref: #/components/schemas/NotificationLevel
type NotificationLevel string

const (
	NotificationLevelSuccess NotificationLevel = "success"
	NotificationLevelError   NotificationLevel = "error"
	NotificationLevelWarning NotificationLevel = "warning"
	NotificationLevelInfo    NotificationLevel = "info"
)

// AllValues returns all NotificationLevel values.
func (NotificationLevel) AllValues() []NotificationLevel {
	return []NotificationLevel{
		NotificationLevelSuccess,
		NotificationLevelError,
		NotificationLevelWarning,
		NotificationLevelInfo,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s NotificationLevel) MarshalText() ([]byte, error) {
	switch s {
	case NotificationLevelSuccess:
		return []byte(s), nil
	case NotificationLevelError:
		return []byte(s), nil
	case NotificationLevelWarning:
		return []byte(s), nil
	case NotificationLevelInfo:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *NotificationLevel) UnmarshalText(data []byte) error {
	switch NotificationLevel(data) {
	case NotificationLevelSuccess:
		*s = NotificationLevelSuccess
		return nil
	case NotificationLevelError:
		*s = NotificationLevelError
		return nil
	case NotificationLevelWarning:
		*s = NotificationLevelWarning
		return nil
	case NotificationLevelInfo:
		*s = NotificationLevelInfo
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/NotificationType
type NotificationType string

const (
	NotificationTypeJobFailed     NotificationType = "JobFailed"
	NotificationTypeBackupFailed  NotificationType = "BackupFailed"
	NotificationTypeSystemMessage NotificationType = "SystemMessage"
	NotificationTypeAlbumInvite   NotificationType = "AlbumInvite"
	NotificationTypeAlbumUpdate   NotificationType = "AlbumUpdate"
	NotificationTypeCustom        NotificationType = "Custom"
)

// AllValues returns all NotificationType values.
func (NotificationType) AllValues() []NotificationType {
	return []NotificationType{
		NotificationTypeJobFailed,
		NotificationTypeBackupFailed,
		NotificationTypeSystemMessage,
		NotificationTypeAlbumInvite,
		NotificationTypeAlbumUpdate,
		NotificationTypeCustom,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s NotificationType) MarshalText() ([]byte, error) {
	switch s {
	case NotificationTypeJobFailed:
		return []byte(s), nil
	case NotificationTypeBackupFailed:
		return []byte(s), nil
	case NotificationTypeSystemMessage:
		return []byte(s), nil
	case NotificationTypeAlbumInvite:
		return []byte(s), nil
	case NotificationTypeAlbumUpdate:
		return []byte(s), nil
	case NotificationTypeCustom:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *NotificationType) UnmarshalText(data []byte) error {
	switch NotificationType(data) {
	case NotificationTypeJobFailed:
		*s = NotificationTypeJobFailed
		return nil
	case NotificationTypeBackupFailed:
		*s = NotificationTypeBackupFailed
		return nil
	case NotificationTypeSystemMessage:
		*s = NotificationTypeSystemMessage
		return nil
	case NotificationTypeAlbumInvite:
		*s = NotificationTypeAlbumInvite
		return nil
	case NotificationTypeAlbumUpdate:
		*s = NotificationTypeAlbumUpdate
		return nil
	case NotificationTypeCustom:
		*s = NotificationTypeCustom
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/NotificationUpdateAllDto
type NotificationUpdateAllDto struct {
	Ids    []uuid.UUID    `json:"ids"`
	ReadAt OptNilDateTime `json:"readAt"`
}

// GetIds returns the value of Ids.
func (s *NotificationUpdateAllDto) GetIds() []uuid.UUID {
	return s.Ids
}

// GetReadAt returns the value of ReadAt.
func (s *NotificationUpdateAllDto) GetReadAt() OptNilDateTime {
	return s.ReadAt
}

// SetIds sets the value of Ids.
func (s *NotificationUpdateAllDto) SetIds(val []uuid.UUID) {
	s.Ids = val
}

// SetReadAt sets the value of ReadAt.
func (s *NotificationUpdateAllDto) SetReadAt(val OptNilDateTime) {
	s.ReadAt = val
}

// Ref: #/components/schemas/NotificationUpdateDto
type NotificationUpdateDto struct {
	ReadAt OptNilDateTime `json:"readAt"`
}

// GetReadAt returns the value of ReadAt.
func (s *NotificationUpdateDto) GetReadAt() OptNilDateTime {
	return s.ReadAt
}

// SetReadAt sets the value of ReadAt.
func (s *NotificationUpdateDto) SetReadAt(val OptNilDateTime) {
	s.ReadAt = val
}

// Ref: #/components/schemas/OAuthAuthorizeResponseDto
type OAuthAuthorizeResponseDto struct {
	URL string `json:"url"`
}

// GetURL returns the value of URL.
func (s *OAuthAuthorizeResponseDto) GetURL() string {
	return s.URL
}

// SetURL sets the value of URL.
func (s *OAuthAuthorizeResponseDto) SetURL(val string) {
	s.URL = val
}

// Ref: #/components/schemas/OAuthCallbackDto
type OAuthCallbackDto struct {
	CodeVerifier OptString `json:"codeVerifier"`
	State        OptString `json:"state"`
	URL          string    `json:"url"`
}

// GetCodeVerifier returns the value of CodeVerifier.
func (s *OAuthCallbackDto) GetCodeVerifier() OptString {
	return s.CodeVerifier
}

// GetState returns the value of State.
func (s *OAuthCallbackDto) GetState() OptString {
	return s.State
}

// GetURL returns the value of URL.
func (s *OAuthCallbackDto) GetURL() string {
	return s.URL
}

// SetCodeVerifier sets the value of CodeVerifier.
func (s *OAuthCallbackDto) SetCodeVerifier(val OptString) {
	s.CodeVerifier = val
}

// SetState sets the value of State.
func (s *OAuthCallbackDto) SetState(val OptString) {
	s.State = val
}

// SetURL sets the value of URL.
func (s *OAuthCallbackDto) SetURL(val string) {
	s.URL = val
}

// Ref: #/components/schemas/OAuthConfigDto
type OAuthConfigDto struct {
	CodeChallenge OptString `json:"codeChallenge"`
	RedirectUri   string    `json:"redirectUri"`
	State         OptString `json:"state"`
}

// GetCodeChallenge returns the value of CodeChallenge.
func (s *OAuthConfigDto) GetCodeChallenge() OptString {
	return s.CodeChallenge
}

// GetRedirectUri returns the value of RedirectUri.
func (s *OAuthConfigDto) GetRedirectUri() string {
	return s.RedirectUri
}

// GetState returns the value of State.
func (s *OAuthConfigDto) GetState() OptString {
	return s.State
}

// SetCodeChallenge sets the value of CodeChallenge.
func (s *OAuthConfigDto) SetCodeChallenge(val OptString) {
	s.CodeChallenge = val
}

// SetRedirectUri sets the value of RedirectUri.
func (s *OAuthConfigDto) SetRedirectUri(val string) {
	s.RedirectUri = val
}

// SetState sets the value of State.
func (s *OAuthConfigDto) SetState(val OptString) {
	s.State = val
}

// Ref: #/components/schemas/OAuthTokenEndpointAuthMethod
type OAuthTokenEndpointAuthMethod string

const (
	OAuthTokenEndpointAuthMethodClientSecretPost  OAuthTokenEndpointAuthMethod = "client_secret_post"
	OAuthTokenEndpointAuthMethodClientSecretBasic OAuthTokenEndpointAuthMethod = "client_secret_basic"
)

// AllValues returns all OAuthTokenEndpointAuthMethod values.
func (OAuthTokenEndpointAuthMethod) AllValues() []OAuthTokenEndpointAuthMethod {
	return []OAuthTokenEndpointAuthMethod{
		OAuthTokenEndpointAuthMethodClientSecretPost,
		OAuthTokenEndpointAuthMethodClientSecretBasic,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s OAuthTokenEndpointAuthMethod) MarshalText() ([]byte, error) {
	switch s {
	case OAuthTokenEndpointAuthMethodClientSecretPost:
		return []byte(s), nil
	case OAuthTokenEndpointAuthMethodClientSecretBasic:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *OAuthTokenEndpointAuthMethod) UnmarshalText(data []byte) error {
	switch OAuthTokenEndpointAuthMethod(data) {
	case OAuthTokenEndpointAuthMethodClientSecretPost:
		*s = OAuthTokenEndpointAuthMethodClientSecretPost
		return nil
	case OAuthTokenEndpointAuthMethodClientSecretBasic:
		*s = OAuthTokenEndpointAuthMethodClientSecretBasic
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/OnThisDayDto
type OnThisDayDto struct {
	Year float64 `json:"year"`
}

// GetYear returns the value of Year.
func (s *OnThisDayDto) GetYear() float64 {
	return s.Year
}

// SetYear sets the value of Year.
func (s *OnThisDayDto) SetYear(val float64) {
	s.Year = val
}

// Ref: #/components/schemas/OnboardingDto
type OnboardingDto struct {
	IsOnboarded bool `json:"isOnboarded"`
}

// GetIsOnboarded returns the value of IsOnboarded.
func (s *OnboardingDto) GetIsOnboarded() bool {
	return s.IsOnboarded
}

// SetIsOnboarded sets the value of IsOnboarded.
func (s *OnboardingDto) SetIsOnboarded(val bool) {
	s.IsOnboarded = val
}

// Ref: #/components/schemas/OnboardingResponseDto
type OnboardingResponseDto struct {
	IsOnboarded bool `json:"isOnboarded"`
}

// GetIsOnboarded returns the value of IsOnboarded.
func (s *OnboardingResponseDto) GetIsOnboarded() bool {
	return s.IsOnboarded
}

// SetIsOnboarded sets the value of IsOnboarded.
func (s *OnboardingResponseDto) SetIsOnboarded(val bool) {
	s.IsOnboarded = val
}

// NewOptAlbumResponseDto returns new OptAlbumResponseDto with value set to v.
func NewOptAlbumResponseDto(v AlbumResponseDto) OptAlbumResponseDto {
	return OptAlbumResponseDto{
		Value: v,
		Set:   true,
	}
}

// OptAlbumResponseDto is optional AlbumResponseDto.
type OptAlbumResponseDto struct {
	Value AlbumResponseDto
	Set   bool
}

// IsSet returns true if OptAlbumResponseDto was set.
func (o OptAlbumResponseDto) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAlbumResponseDto) Reset() {
	var v AlbumResponseDto
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAlbumResponseDto) SetTo(v AlbumResponseDto) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAlbumResponseDto) Get() (v AlbumResponseDto, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAlbumResponseDto) Or(d AlbumResponseDto) AlbumResponseDto {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAlbumUserRole returns new OptAlbumUserRole with value set to v.
func NewOptAlbumUserRole(v AlbumUserRole) OptAlbumUserRole {
	return OptAlbumUserRole{
		Value: v,
		Set:   true,
	}
}

// OptAlbumUserRole is optional AlbumUserRole.
type OptAlbumUserRole struct {
	Value AlbumUserRole
	Set   bool
}

// IsSet returns true if OptAlbumUserRole was set.
func (o OptAlbumUserRole) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAlbumUserRole) Reset() {
	var v AlbumUserRole
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAlbumUserRole) SetTo(v AlbumUserRole) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAlbumUserRole) Get() (v AlbumUserRole, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAlbumUserRole) Or(d AlbumUserRole) AlbumUserRole {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAlbumsUpdate returns new OptAlbumsUpdate with value set to v.
func NewOptAlbumsUpdate(v AlbumsUpdate) OptAlbumsUpdate {
	return OptAlbumsUpdate{
		Value: v,
		Set:   true,
	}
}

// OptAlbumsUpdate is optional AlbumsUpdate.
type OptAlbumsUpdate struct {
	Value AlbumsUpdate
	Set   bool
}

// IsSet returns true if OptAlbumsUpdate was set.
func (o OptAlbumsUpdate) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAlbumsUpdate) Reset() {
	var v AlbumsUpdate
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAlbumsUpdate) SetTo(v AlbumsUpdate) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAlbumsUpdate) Get() (v AlbumsUpdate, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAlbumsUpdate) Or(d AlbumsUpdate) AlbumsUpdate {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAssetBulkUploadCheckResultReason returns new OptAssetBulkUploadCheckResultReason with value set to v.
func NewOptAssetBulkUploadCheckResultReason(v AssetBulkUploadCheckResultReason) OptAssetBulkUploadCheckResultReason {
	return OptAssetBulkUploadCheckResultReason{
		Value: v,
		Set:   true,
	}
}

// OptAssetBulkUploadCheckResultReason is optional AssetBulkUploadCheckResultReason.
type OptAssetBulkUploadCheckResultReason struct {
	Value AssetBulkUploadCheckResultReason
	Set   bool
}

// IsSet returns true if OptAssetBulkUploadCheckResultReason was set.
func (o OptAssetBulkUploadCheckResultReason) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAssetBulkUploadCheckResultReason) Reset() {
	var v AssetBulkUploadCheckResultReason
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAssetBulkUploadCheckResultReason) SetTo(v AssetBulkUploadCheckResultReason) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAssetBulkUploadCheckResultReason) Get() (v AssetBulkUploadCheckResultReason, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAssetBulkUploadCheckResultReason) Or(d AssetBulkUploadCheckResultReason) AssetBulkUploadCheckResultReason {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAssetIdsResponseDtoError returns new OptAssetIdsResponseDtoError with value set to v.
func NewOptAssetIdsResponseDtoError(v AssetIdsResponseDtoError) OptAssetIdsResponseDtoError {
	return OptAssetIdsResponseDtoError{
		Value: v,
		Set:   true,
	}
}

// OptAssetIdsResponseDtoError is optional AssetIdsResponseDtoError.
type OptAssetIdsResponseDtoError struct {
	Value AssetIdsResponseDtoError
	Set   bool
}

// IsSet returns true if OptAssetIdsResponseDtoError was set.
func (o OptAssetIdsResponseDtoError) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAssetIdsResponseDtoError) Reset() {
	var v AssetIdsResponseDtoError
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAssetIdsResponseDtoError) SetTo(v AssetIdsResponseDtoError) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAssetIdsResponseDtoError) Get() (v AssetIdsResponseDtoError, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAssetIdsResponseDtoError) Or(d AssetIdsResponseDtoError) AssetIdsResponseDtoError {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAssetMediaSize returns new OptAssetMediaSize with value set to v.
func NewOptAssetMediaSize(v AssetMediaSize) OptAssetMediaSize {
	return OptAssetMediaSize{
		Value: v,
		Set:   true,
	}
}

// OptAssetMediaSize is optional AssetMediaSize.
type OptAssetMediaSize struct {
	Value AssetMediaSize
	Set   bool
}

// IsSet returns true if OptAssetMediaSize was set.
func (o OptAssetMediaSize) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAssetMediaSize) Reset() {
	var v AssetMediaSize
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAssetMediaSize) SetTo(v AssetMediaSize) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAssetMediaSize) Get() (v AssetMediaSize, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAssetMediaSize) Or(d AssetMediaSize) AssetMediaSize {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAssetOrder returns new OptAssetOrder with value set to v.
func NewOptAssetOrder(v AssetOrder) OptAssetOrder {
	return OptAssetOrder{
		Value: v,
		Set:   true,
	}
}

// OptAssetOrder is optional AssetOrder.
type OptAssetOrder struct {
	Value AssetOrder
	Set   bool
}

// IsSet returns true if OptAssetOrder was set.
func (o OptAssetOrder) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAssetOrder) Reset() {
	var v AssetOrder
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAssetOrder) SetTo(v AssetOrder) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAssetOrder) Get() (v AssetOrder, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAssetOrder) Or(d AssetOrder) AssetOrder {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAssetTypeEnum returns new OptAssetTypeEnum with value set to v.
func NewOptAssetTypeEnum(v AssetTypeEnum) OptAssetTypeEnum {
	return OptAssetTypeEnum{
		Value: v,
		Set:   true,
	}
}

// OptAssetTypeEnum is optional AssetTypeEnum.
type OptAssetTypeEnum struct {
	Value AssetTypeEnum
	Set   bool
}

// IsSet returns true if OptAssetTypeEnum was set.
func (o OptAssetTypeEnum) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAssetTypeEnum) Reset() {
	var v AssetTypeEnum
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAssetTypeEnum) SetTo(v AssetTypeEnum) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAssetTypeEnum) Get() (v AssetTypeEnum, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAssetTypeEnum) Or(d AssetTypeEnum) AssetTypeEnum {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAssetVisibility returns new OptAssetVisibility with value set to v.
func NewOptAssetVisibility(v AssetVisibility) OptAssetVisibility {
	return OptAssetVisibility{
		Value: v,
		Set:   true,
	}
}

// OptAssetVisibility is optional AssetVisibility.
type OptAssetVisibility struct {
	Value AssetVisibility
	Set   bool
}

// IsSet returns true if OptAssetVisibility was set.
func (o OptAssetVisibility) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAssetVisibility) Reset() {
	var v AssetVisibility
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAssetVisibility) SetTo(v AssetVisibility) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAssetVisibility) Get() (v AssetVisibility, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAssetVisibility) Or(d AssetVisibility) AssetVisibility {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAvatarUpdate returns new OptAvatarUpdate with value set to v.
func NewOptAvatarUpdate(v AvatarUpdate) OptAvatarUpdate {
	return OptAvatarUpdate{
		Value: v,
		Set:   true,
	}
}

// OptAvatarUpdate is optional AvatarUpdate.
type OptAvatarUpdate struct {
	Value AvatarUpdate
	Set   bool
}

// IsSet returns true if OptAvatarUpdate was set.
func (o OptAvatarUpdate) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAvatarUpdate) Reset() {
	var v AvatarUpdate
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAvatarUpdate) SetTo(v AvatarUpdate) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAvatarUpdate) Get() (v AvatarUpdate, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAvatarUpdate) Or(d AvatarUpdate) AvatarUpdate {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptBool returns new OptBool with value set to v.
func NewOptBool(v bool) OptBool {
	return OptBool{
		Value: v,
		Set:   true,
	}
}

// OptBool is optional bool.
type OptBool struct {
	Value bool
	Set   bool
}

// IsSet returns true if OptBool was set.
func (o OptBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBool) SetTo(v bool) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBool) Get() (v bool, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptBulkIdErrorReason returns new OptBulkIdErrorReason with value set to v.
func NewOptBulkIdErrorReason(v BulkIdErrorReason) OptBulkIdErrorReason {
	return OptBulkIdErrorReason{
		Value: v,
		Set:   true,
	}
}

// OptBulkIdErrorReason is optional BulkIdErrorReason.
type OptBulkIdErrorReason struct {
	Value BulkIdErrorReason
	Set   bool
}

// IsSet returns true if OptBulkIdErrorReason was set.
func (o OptBulkIdErrorReason) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBulkIdErrorReason) Reset() {
	var v BulkIdErrorReason
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBulkIdErrorReason) SetTo(v BulkIdErrorReason) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBulkIdErrorReason) Get() (v BulkIdErrorReason, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBulkIdErrorReason) Or(d BulkIdErrorReason) BulkIdErrorReason {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptBulkIdResponseDtoError returns new OptBulkIdResponseDtoError with value set to v.
func NewOptBulkIdResponseDtoError(v BulkIdResponseDtoError) OptBulkIdResponseDtoError {
	return OptBulkIdResponseDtoError{
		Value: v,
		Set:   true,
	}
}

// OptBulkIdResponseDtoError is optional BulkIdResponseDtoError.
type OptBulkIdResponseDtoError struct {
	Value BulkIdResponseDtoError
	Set   bool
}

// IsSet returns true if OptBulkIdResponseDtoError was set.
func (o OptBulkIdResponseDtoError) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBulkIdResponseDtoError) Reset() {
	var v BulkIdResponseDtoError
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBulkIdResponseDtoError) SetTo(v BulkIdResponseDtoError) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBulkIdResponseDtoError) Get() (v BulkIdResponseDtoError, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBulkIdResponseDtoError) Or(d BulkIdResponseDtoError) BulkIdResponseDtoError {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCastUpdate returns new OptCastUpdate with value set to v.
func NewOptCastUpdate(v CastUpdate) OptCastUpdate {
	return OptCastUpdate{
		Value: v,
		Set:   true,
	}
}

// OptCastUpdate is optional CastUpdate.
type OptCastUpdate struct {
	Value CastUpdate
	Set   bool
}

// IsSet returns true if OptCastUpdate was set.
func (o OptCastUpdate) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCastUpdate) Reset() {
	var v CastUpdate
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCastUpdate) SetTo(v CastUpdate) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCastUpdate) Get() (v CastUpdate, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCastUpdate) Or(d CastUpdate) CastUpdate {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDateTime returns new OptDateTime with value set to v.
func NewOptDateTime(v time.Time) OptDateTime {
	return OptDateTime{
		Value: v,
		Set:   true,
	}
}

// OptDateTime is optional time.Time.
type OptDateTime struct {
	Value time.Time
	Set   bool
}

// IsSet returns true if OptDateTime was set.
func (o OptDateTime) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDateTime) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDateTime) SetTo(v time.Time) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDateTime) Get() (v time.Time, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDateTime) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDownloadUpdate returns new OptDownloadUpdate with value set to v.
func NewOptDownloadUpdate(v DownloadUpdate) OptDownloadUpdate {
	return OptDownloadUpdate{
		Value: v,
		Set:   true,
	}
}

// OptDownloadUpdate is optional DownloadUpdate.
type OptDownloadUpdate struct {
	Value DownloadUpdate
	Set   bool
}

// IsSet returns true if OptDownloadUpdate was set.
func (o OptDownloadUpdate) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDownloadUpdate) Reset() {
	var v DownloadUpdate
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDownloadUpdate) SetTo(v DownloadUpdate) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDownloadUpdate) Get() (v DownloadUpdate, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDownloadUpdate) Or(d DownloadUpdate) DownloadUpdate {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptEmailNotificationsUpdate returns new OptEmailNotificationsUpdate with value set to v.
func NewOptEmailNotificationsUpdate(v EmailNotificationsUpdate) OptEmailNotificationsUpdate {
	return OptEmailNotificationsUpdate{
		Value: v,
		Set:   true,
	}
}

// OptEmailNotificationsUpdate is optional EmailNotificationsUpdate.
type OptEmailNotificationsUpdate struct {
	Value EmailNotificationsUpdate
	Set   bool
}

// IsSet returns true if OptEmailNotificationsUpdate was set.
func (o OptEmailNotificationsUpdate) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptEmailNotificationsUpdate) Reset() {
	var v EmailNotificationsUpdate
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptEmailNotificationsUpdate) SetTo(v EmailNotificationsUpdate) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptEmailNotificationsUpdate) Get() (v EmailNotificationsUpdate, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptEmailNotificationsUpdate) Or(d EmailNotificationsUpdate) EmailNotificationsUpdate {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptExifResponseDto returns new OptExifResponseDto with value set to v.
func NewOptExifResponseDto(v ExifResponseDto) OptExifResponseDto {
	return OptExifResponseDto{
		Value: v,
		Set:   true,
	}
}

// OptExifResponseDto is optional ExifResponseDto.
type OptExifResponseDto struct {
	Value ExifResponseDto
	Set   bool
}

// IsSet returns true if OptExifResponseDto was set.
func (o OptExifResponseDto) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptExifResponseDto) Reset() {
	var v ExifResponseDto
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptExifResponseDto) SetTo(v ExifResponseDto) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptExifResponseDto) Get() (v ExifResponseDto, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptExifResponseDto) Or(d ExifResponseDto) ExifResponseDto {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptFloat64 returns new OptFloat64 with value set to v.
func NewOptFloat64(v float64) OptFloat64 {
	return OptFloat64{
		Value: v,
		Set:   true,
	}
}

// OptFloat64 is optional float64.
type OptFloat64 struct {
	Value float64
	Set   bool
}

// IsSet returns true if OptFloat64 was set.
func (o OptFloat64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFloat64) Reset() {
	var v float64
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFloat64) SetTo(v float64) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFloat64) Get() (v float64, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptFloat64) Or(d float64) float64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptFoldersUpdate returns new OptFoldersUpdate with value set to v.
func NewOptFoldersUpdate(v FoldersUpdate) OptFoldersUpdate {
	return OptFoldersUpdate{
		Value: v,
		Set:   true,
	}
}

// OptFoldersUpdate is optional FoldersUpdate.
type OptFoldersUpdate struct {
	Value FoldersUpdate
	Set   bool
}

// IsSet returns true if OptFoldersUpdate was set.
func (o OptFoldersUpdate) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFoldersUpdate) Reset() {
	var v FoldersUpdate
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFoldersUpdate) SetTo(v FoldersUpdate) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFoldersUpdate) Get() (v FoldersUpdate, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptFoldersUpdate) Or(d FoldersUpdate) FoldersUpdate {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptMemoriesUpdate returns new OptMemoriesUpdate with value set to v.
func NewOptMemoriesUpdate(v MemoriesUpdate) OptMemoriesUpdate {
	return OptMemoriesUpdate{
		Value: v,
		Set:   true,
	}
}

// OptMemoriesUpdate is optional MemoriesUpdate.
type OptMemoriesUpdate struct {
	Value MemoriesUpdate
	Set   bool
}

// IsSet returns true if OptMemoriesUpdate was set.
func (o OptMemoriesUpdate) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptMemoriesUpdate) Reset() {
	var v MemoriesUpdate
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptMemoriesUpdate) SetTo(v MemoriesUpdate) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptMemoriesUpdate) Get() (v MemoriesUpdate, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptMemoriesUpdate) Or(d MemoriesUpdate) MemoriesUpdate {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptMemoryType returns new OptMemoryType with value set to v.
func NewOptMemoryType(v MemoryType) OptMemoryType {
	return OptMemoryType{
		Value: v,
		Set:   true,
	}
}

// OptMemoryType is optional MemoryType.
type OptMemoryType struct {
	Value MemoryType
	Set   bool
}

// IsSet returns true if OptMemoryType was set.
func (o OptMemoryType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptMemoryType) Reset() {
	var v MemoryType
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptMemoryType) SetTo(v MemoryType) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptMemoryType) Get() (v MemoryType, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptMemoryType) Or(d MemoryType) MemoryType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptMultipartFile returns new OptMultipartFile with value set to v.
func NewOptMultipartFile(v ht.MultipartFile) OptMultipartFile {
	return OptMultipartFile{
		Value: v,
		Set:   true,
	}
}

// OptMultipartFile is optional ht.MultipartFile.
type OptMultipartFile struct {
	Value ht.MultipartFile
	Set   bool
}

// IsSet returns true if OptMultipartFile was set.
func (o OptMultipartFile) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptMultipartFile) Reset() {
	var v ht.MultipartFile
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptMultipartFile) SetTo(v ht.MultipartFile) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptMultipartFile) Get() (v ht.MultipartFile, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptMultipartFile) Or(d ht.MultipartFile) ht.MultipartFile {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilAssetStackResponseDto returns new OptNilAssetStackResponseDto with value set to v.
func NewOptNilAssetStackResponseDto(v AssetStackResponseDto) OptNilAssetStackResponseDto {
	return OptNilAssetStackResponseDto{
		Value: v,
		Set:   true,
	}
}

// OptNilAssetStackResponseDto is optional nullable AssetStackResponseDto.
type OptNilAssetStackResponseDto struct {
	Value AssetStackResponseDto
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilAssetStackResponseDto was set.
func (o OptNilAssetStackResponseDto) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilAssetStackResponseDto) Reset() {
	var v AssetStackResponseDto
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilAssetStackResponseDto) SetTo(v AssetStackResponseDto) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilAssetStackResponseDto) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilAssetStackResponseDto) SetToNull() {
	o.Set = true
	o.Null = true
	var v AssetStackResponseDto
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilAssetStackResponseDto) Get() (v AssetStackResponseDto, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilAssetStackResponseDto) Or(d AssetStackResponseDto) AssetStackResponseDto {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilDate returns new OptNilDate with value set to v.
func NewOptNilDate(v time.Time) OptNilDate {
	return OptNilDate{
		Value: v,
		Set:   true,
	}
}

// OptNilDate is optional nullable time.Time.
type OptNilDate struct {
	Value time.Time
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilDate was set.
func (o OptNilDate) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilDate) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilDate) SetTo(v time.Time) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilDate) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilDate) SetToNull() {
	o.Set = true
	o.Null = true
	var v time.Time
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilDate) Get() (v time.Time, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilDate) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilDateTime returns new OptNilDateTime with value set to v.
func NewOptNilDateTime(v time.Time) OptNilDateTime {
	return OptNilDateTime{
		Value: v,
		Set:   true,
	}
}

// OptNilDateTime is optional nullable time.Time.
type OptNilDateTime struct {
	Value time.Time
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilDateTime was set.
func (o OptNilDateTime) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilDateTime) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilDateTime) SetTo(v time.Time) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilDateTime) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilDateTime) SetToNull() {
	o.Set = true
	o.Null = true
	var v time.Time
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilDateTime) Get() (v time.Time, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilDateTime) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilFloat64 returns new OptNilFloat64 with value set to v.
func NewOptNilFloat64(v float64) OptNilFloat64 {
	return OptNilFloat64{
		Value: v,
		Set:   true,
	}
}

// OptNilFloat64 is optional nullable float64.
type OptNilFloat64 struct {
	Value float64
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilFloat64 was set.
func (o OptNilFloat64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilFloat64) Reset() {
	var v float64
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilFloat64) SetTo(v float64) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilFloat64) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilFloat64) SetToNull() {
	o.Set = true
	o.Null = true
	var v float64
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilFloat64) Get() (v float64, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilFloat64) Or(d float64) float64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilInt64 returns new OptNilInt64 with value set to v.
func NewOptNilInt64(v int64) OptNilInt64 {
	return OptNilInt64{
		Value: v,
		Set:   true,
	}
}

// OptNilInt64 is optional nullable int64.
type OptNilInt64 struct {
	Value int64
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilInt64 was set.
func (o OptNilInt64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilInt64) Reset() {
	var v int64
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilInt64) SetTo(v int64) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilInt64) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilInt64) SetToNull() {
	o.Set = true
	o.Null = true
	var v int64
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilInt64) Get() (v int64, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilInt64) Or(d int64) int64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilString returns new OptNilString with value set to v.
func NewOptNilString(v string) OptNilString {
	return OptNilString{
		Value: v,
		Set:   true,
	}
}

// OptNilString is optional nullable string.
type OptNilString struct {
	Value string
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilString was set.
func (o OptNilString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilString) Reset() {
	var v string
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilString) SetTo(v string) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilString) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilString) SetToNull() {
	o.Set = true
	o.Null = true
	var v string
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilString) Get() (v string, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilUUID returns new OptNilUUID with value set to v.
func NewOptNilUUID(v uuid.UUID) OptNilUUID {
	return OptNilUUID{
		Value: v,
		Set:   true,
	}
}

// OptNilUUID is optional nullable uuid.UUID.
type OptNilUUID struct {
	Value uuid.UUID
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilUUID was set.
func (o OptNilUUID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilUUID) Reset() {
	var v uuid.UUID
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilUUID) SetTo(v uuid.UUID) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilUUID) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilUUID) SetToNull() {
	o.Set = true
	o.Null = true
	var v uuid.UUID
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilUUID) Get() (v uuid.UUID, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilUUID) Or(d uuid.UUID) uuid.UUID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilUUIDArray returns new OptNilUUIDArray with value set to v.
func NewOptNilUUIDArray(v []uuid.UUID) OptNilUUIDArray {
	return OptNilUUIDArray{
		Value: v,
		Set:   true,
	}
}

// OptNilUUIDArray is optional nullable []uuid.UUID.
type OptNilUUIDArray struct {
	Value []uuid.UUID
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilUUIDArray was set.
func (o OptNilUUIDArray) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilUUIDArray) Reset() {
	var v []uuid.UUID
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilUUIDArray) SetTo(v []uuid.UUID) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilUUIDArray) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilUUIDArray) SetToNull() {
	o.Set = true
	o.Null = true
	var v []uuid.UUID
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilUUIDArray) Get() (v []uuid.UUID, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilUUIDArray) Or(d []uuid.UUID) []uuid.UUID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilUserAvatarColor returns new OptNilUserAvatarColor with value set to v.
func NewOptNilUserAvatarColor(v UserAvatarColor) OptNilUserAvatarColor {
	return OptNilUserAvatarColor{
		Value: v,
		Set:   true,
	}
}

// OptNilUserAvatarColor is optional nullable UserAvatarColor.
type OptNilUserAvatarColor struct {
	Value UserAvatarColor
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilUserAvatarColor was set.
func (o OptNilUserAvatarColor) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilUserAvatarColor) Reset() {
	var v UserAvatarColor
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilUserAvatarColor) SetTo(v UserAvatarColor) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilUserAvatarColor) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilUserAvatarColor) SetToNull() {
	o.Set = true
	o.Null = true
	var v UserAvatarColor
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilUserAvatarColor) Get() (v UserAvatarColor, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilUserAvatarColor) Or(d UserAvatarColor) UserAvatarColor {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNotificationLevel returns new OptNotificationLevel with value set to v.
func NewOptNotificationLevel(v NotificationLevel) OptNotificationLevel {
	return OptNotificationLevel{
		Value: v,
		Set:   true,
	}
}

// OptNotificationLevel is optional NotificationLevel.
type OptNotificationLevel struct {
	Value NotificationLevel
	Set   bool
}

// IsSet returns true if OptNotificationLevel was set.
func (o OptNotificationLevel) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNotificationLevel) Reset() {
	var v NotificationLevel
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptNotificationLevel) SetTo(v NotificationLevel) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNotificationLevel) Get() (v NotificationLevel, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNotificationLevel) Or(d NotificationLevel) NotificationLevel {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNotificationType returns new OptNotificationType with value set to v.
func NewOptNotificationType(v NotificationType) OptNotificationType {
	return OptNotificationType{
		Value: v,
		Set:   true,
	}
}

// OptNotificationType is optional NotificationType.
type OptNotificationType struct {
	Value NotificationType
	Set   bool
}

// IsSet returns true if OptNotificationType was set.
func (o OptNotificationType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNotificationType) Reset() {
	var v NotificationType
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptNotificationType) SetTo(v NotificationType) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNotificationType) Get() (v NotificationType, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNotificationType) Or(d NotificationType) NotificationType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPeopleUpdate returns new OptPeopleUpdate with value set to v.
func NewOptPeopleUpdate(v PeopleUpdate) OptPeopleUpdate {
	return OptPeopleUpdate{
		Value: v,
		Set:   true,
	}
}

// OptPeopleUpdate is optional PeopleUpdate.
type OptPeopleUpdate struct {
	Value PeopleUpdate
	Set   bool
}

// IsSet returns true if OptPeopleUpdate was set.
func (o OptPeopleUpdate) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPeopleUpdate) Reset() {
	var v PeopleUpdate
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPeopleUpdate) SetTo(v PeopleUpdate) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPeopleUpdate) Get() (v PeopleUpdate, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPeopleUpdate) Or(d PeopleUpdate) PeopleUpdate {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPurchaseUpdate returns new OptPurchaseUpdate with value set to v.
func NewOptPurchaseUpdate(v PurchaseUpdate) OptPurchaseUpdate {
	return OptPurchaseUpdate{
		Value: v,
		Set:   true,
	}
}

// OptPurchaseUpdate is optional PurchaseUpdate.
type OptPurchaseUpdate struct {
	Value PurchaseUpdate
	Set   bool
}

// IsSet returns true if OptPurchaseUpdate was set.
func (o OptPurchaseUpdate) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPurchaseUpdate) Reset() {
	var v PurchaseUpdate
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPurchaseUpdate) SetTo(v PurchaseUpdate) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPurchaseUpdate) Get() (v PurchaseUpdate, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPurchaseUpdate) Or(d PurchaseUpdate) PurchaseUpdate {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptRatingsUpdate returns new OptRatingsUpdate with value set to v.
func NewOptRatingsUpdate(v RatingsUpdate) OptRatingsUpdate {
	return OptRatingsUpdate{
		Value: v,
		Set:   true,
	}
}

// OptRatingsUpdate is optional RatingsUpdate.
type OptRatingsUpdate struct {
	Value RatingsUpdate
	Set   bool
}

// IsSet returns true if OptRatingsUpdate was set.
func (o OptRatingsUpdate) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptRatingsUpdate) Reset() {
	var v RatingsUpdate
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptRatingsUpdate) SetTo(v RatingsUpdate) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptRatingsUpdate) Get() (v RatingsUpdate, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptRatingsUpdate) Or(d RatingsUpdate) RatingsUpdate {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptReactionLevel returns new OptReactionLevel with value set to v.
func NewOptReactionLevel(v ReactionLevel) OptReactionLevel {
	return OptReactionLevel{
		Value: v,
		Set:   true,
	}
}

// OptReactionLevel is optional ReactionLevel.
type OptReactionLevel struct {
	Value ReactionLevel
	Set   bool
}

// IsSet returns true if OptReactionLevel was set.
func (o OptReactionLevel) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptReactionLevel) Reset() {
	var v ReactionLevel
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptReactionLevel) SetTo(v ReactionLevel) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptReactionLevel) Get() (v ReactionLevel, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptReactionLevel) Or(d ReactionLevel) ReactionLevel {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptReactionType returns new OptReactionType with value set to v.
func NewOptReactionType(v ReactionType) OptReactionType {
	return OptReactionType{
		Value: v,
		Set:   true,
	}
}

// OptReactionType is optional ReactionType.
type OptReactionType struct {
	Value ReactionType
	Set   bool
}

// IsSet returns true if OptReactionType was set.
func (o OptReactionType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptReactionType) Reset() {
	var v ReactionType
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptReactionType) SetTo(v ReactionType) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptReactionType) Get() (v ReactionType, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptReactionType) Or(d ReactionType) ReactionType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptSharedLinksUpdate returns new OptSharedLinksUpdate with value set to v.
func NewOptSharedLinksUpdate(v SharedLinksUpdate) OptSharedLinksUpdate {
	return OptSharedLinksUpdate{
		Value: v,
		Set:   true,
	}
}

// OptSharedLinksUpdate is optional SharedLinksUpdate.
type OptSharedLinksUpdate struct {
	Value SharedLinksUpdate
	Set   bool
}

// IsSet returns true if OptSharedLinksUpdate was set.
func (o OptSharedLinksUpdate) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSharedLinksUpdate) Reset() {
	var v SharedLinksUpdate
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSharedLinksUpdate) SetTo(v SharedLinksUpdate) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSharedLinksUpdate) Get() (v SharedLinksUpdate, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptSharedLinksUpdate) Or(d SharedLinksUpdate) SharedLinksUpdate {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptSourceType returns new OptSourceType with value set to v.
func NewOptSourceType(v SourceType) OptSourceType {
	return OptSourceType{
		Value: v,
		Set:   true,
	}
}

// OptSourceType is optional SourceType.
type OptSourceType struct {
	Value SourceType
	Set   bool
}

// IsSet returns true if OptSourceType was set.
func (o OptSourceType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSourceType) Reset() {
	var v SourceType
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSourceType) SetTo(v SourceType) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSourceType) Get() (v SourceType, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptSourceType) Or(d SourceType) SourceType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptTagsUpdate returns new OptTagsUpdate with value set to v.
func NewOptTagsUpdate(v TagsUpdate) OptTagsUpdate {
	return OptTagsUpdate{
		Value: v,
		Set:   true,
	}
}

// OptTagsUpdate is optional TagsUpdate.
type OptTagsUpdate struct {
	Value TagsUpdate
	Set   bool
}

// IsSet returns true if OptTagsUpdate was set.
func (o OptTagsUpdate) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTagsUpdate) Reset() {
	var v TagsUpdate
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTagsUpdate) SetTo(v TagsUpdate) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTagsUpdate) Get() (v TagsUpdate, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptTagsUpdate) Or(d TagsUpdate) TagsUpdate {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUUID returns new OptUUID with value set to v.
func NewOptUUID(v uuid.UUID) OptUUID {
	return OptUUID{
		Value: v,
		Set:   true,
	}
}

// OptUUID is optional uuid.UUID.
type OptUUID struct {
	Value uuid.UUID
	Set   bool
}

// IsSet returns true if OptUUID was set.
func (o OptUUID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUUID) Reset() {
	var v uuid.UUID
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUUID) SetTo(v uuid.UUID) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUUID) Get() (v uuid.UUID, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUUID) Or(d uuid.UUID) uuid.UUID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUserAvatarColor returns new OptUserAvatarColor with value set to v.
func NewOptUserAvatarColor(v UserAvatarColor) OptUserAvatarColor {
	return OptUserAvatarColor{
		Value: v,
		Set:   true,
	}
}

// OptUserAvatarColor is optional UserAvatarColor.
type OptUserAvatarColor struct {
	Value UserAvatarColor
	Set   bool
}

// IsSet returns true if OptUserAvatarColor was set.
func (o OptUserAvatarColor) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUserAvatarColor) Reset() {
	var v UserAvatarColor
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUserAvatarColor) SetTo(v UserAvatarColor) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUserAvatarColor) Get() (v UserAvatarColor, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUserAvatarColor) Or(d UserAvatarColor) UserAvatarColor {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUserResponseDto returns new OptUserResponseDto with value set to v.
func NewOptUserResponseDto(v UserResponseDto) OptUserResponseDto {
	return OptUserResponseDto{
		Value: v,
		Set:   true,
	}
}

// OptUserResponseDto is optional UserResponseDto.
type OptUserResponseDto struct {
	Value UserResponseDto
	Set   bool
}

// IsSet returns true if OptUserResponseDto was set.
func (o OptUserResponseDto) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUserResponseDto) Reset() {
	var v UserResponseDto
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUserResponseDto) SetTo(v UserResponseDto) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUserResponseDto) Get() (v UserResponseDto, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUserResponseDto) Or(d UserResponseDto) UserResponseDto {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #/components/schemas/PartnerCreateDto
type PartnerCreateDto struct {
	SharedWithId uuid.UUID `json:"sharedWithId"`
}

// GetSharedWithId returns the value of SharedWithId.
func (s *PartnerCreateDto) GetSharedWithId() uuid.UUID {
	return s.SharedWithId
}

// SetSharedWithId sets the value of SharedWithId.
func (s *PartnerCreateDto) SetSharedWithId(val uuid.UUID) {
	s.SharedWithId = val
}

// Ref: #/components/schemas/PartnerDirection
type PartnerDirection string

const (
	PartnerDirectionSharedBy   PartnerDirection = "shared-by"
	PartnerDirectionSharedWith PartnerDirection = "shared-with"
)

// AllValues returns all PartnerDirection values.
func (PartnerDirection) AllValues() []PartnerDirection {
	return []PartnerDirection{
		PartnerDirectionSharedBy,
		PartnerDirectionSharedWith,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PartnerDirection) MarshalText() ([]byte, error) {
	switch s {
	case PartnerDirectionSharedBy:
		return []byte(s), nil
	case PartnerDirectionSharedWith:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PartnerDirection) UnmarshalText(data []byte) error {
	switch PartnerDirection(data) {
	case PartnerDirectionSharedBy:
		*s = PartnerDirectionSharedBy
		return nil
	case PartnerDirectionSharedWith:
		*s = PartnerDirectionSharedWith
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/PartnerResponseDto
type PartnerResponseDto struct {
	AvatarColor      UserAvatarColor `json:"avatarColor"`
	Email            string          `json:"email"`
	ID               string          `json:"id"`
	InTimeline       OptBool         `json:"inTimeline"`
	Name             string          `json:"name"`
	ProfileChangedAt time.Time       `json:"profileChangedAt"`
	ProfileImagePath string          `json:"profileImagePath"`
}

// GetAvatarColor returns the value of AvatarColor.
func (s *PartnerResponseDto) GetAvatarColor() UserAvatarColor {
	return s.AvatarColor
}

// GetEmail returns the value of Email.
func (s *PartnerResponseDto) GetEmail() string {
	return s.Email
}

// GetID returns the value of ID.
func (s *PartnerResponseDto) GetID() string {
	return s.ID
}

// GetInTimeline returns the value of InTimeline.
func (s *PartnerResponseDto) GetInTimeline() OptBool {
	return s.InTimeline
}

// GetName returns the value of Name.
func (s *PartnerResponseDto) GetName() string {
	return s.Name
}

// GetProfileChangedAt returns the value of ProfileChangedAt.
func (s *PartnerResponseDto) GetProfileChangedAt() time.Time {
	return s.ProfileChangedAt
}

// GetProfileImagePath returns the value of ProfileImagePath.
func (s *PartnerResponseDto) GetProfileImagePath() string {
	return s.ProfileImagePath
}

// SetAvatarColor sets the value of AvatarColor.
func (s *PartnerResponseDto) SetAvatarColor(val UserAvatarColor) {
	s.AvatarColor = val
}

// SetEmail sets the value of Email.
func (s *PartnerResponseDto) SetEmail(val string) {
	s.Email = val
}

// SetID sets the value of ID.
func (s *PartnerResponseDto) SetID(val string) {
	s.ID = val
}

// SetInTimeline sets the value of InTimeline.
func (s *PartnerResponseDto) SetInTimeline(val OptBool) {
	s.InTimeline = val
}

// SetName sets the value of Name.
func (s *PartnerResponseDto) SetName(val string) {
	s.Name = val
}

// SetProfileChangedAt sets the value of ProfileChangedAt.
func (s *PartnerResponseDto) SetProfileChangedAt(val time.Time) {
	s.ProfileChangedAt = val
}

// SetProfileImagePath sets the value of ProfileImagePath.
func (s *PartnerResponseDto) SetProfileImagePath(val string) {
	s.ProfileImagePath = val
}

// Ref: #/components/schemas/PartnerUpdateDto
type PartnerUpdateDto struct {
	InTimeline bool `json:"inTimeline"`
}

// GetInTimeline returns the value of InTimeline.
func (s *PartnerUpdateDto) GetInTimeline() bool {
	return s.InTimeline
}

// SetInTimeline sets the value of InTimeline.
func (s *PartnerUpdateDto) SetInTimeline(val bool) {
	s.InTimeline = val
}

// Ref: #/components/schemas/PeopleResponse
type PeopleResponse struct {
	Enabled    bool `json:"enabled"`
	SidebarWeb bool `json:"sidebarWeb"`
}

// GetEnabled returns the value of Enabled.
func (s *PeopleResponse) GetEnabled() bool {
	return s.Enabled
}

// GetSidebarWeb returns the value of SidebarWeb.
func (s *PeopleResponse) GetSidebarWeb() bool {
	return s.SidebarWeb
}

// SetEnabled sets the value of Enabled.
func (s *PeopleResponse) SetEnabled(val bool) {
	s.Enabled = val
}

// SetSidebarWeb sets the value of SidebarWeb.
func (s *PeopleResponse) SetSidebarWeb(val bool) {
	s.SidebarWeb = val
}

// Ref: #/components/schemas/PeopleResponseDto
type PeopleResponseDto struct {
	// This property was added in v1.110.0.
	HasNextPage OptBool             `json:"hasNextPage"`
	Hidden      int                 `json:"hidden"`
	People      []PersonResponseDto `json:"people"`
	Total       int                 `json:"total"`
}

// GetHasNextPage returns the value of HasNextPage.
func (s *PeopleResponseDto) GetHasNextPage() OptBool {
	return s.HasNextPage
}

// GetHidden returns the value of Hidden.
func (s *PeopleResponseDto) GetHidden() int {
	return s.Hidden
}

// GetPeople returns the value of People.
func (s *PeopleResponseDto) GetPeople() []PersonResponseDto {
	return s.People
}

// GetTotal returns the value of Total.
func (s *PeopleResponseDto) GetTotal() int {
	return s.Total
}

// SetHasNextPage sets the value of HasNextPage.
func (s *PeopleResponseDto) SetHasNextPage(val OptBool) {
	s.HasNextPage = val
}

// SetHidden sets the value of Hidden.
func (s *PeopleResponseDto) SetHidden(val int) {
	s.Hidden = val
}

// SetPeople sets the value of People.
func (s *PeopleResponseDto) SetPeople(val []PersonResponseDto) {
	s.People = val
}

// SetTotal sets the value of Total.
func (s *PeopleResponseDto) SetTotal(val int) {
	s.Total = val
}

// Ref: #/components/schemas/PeopleUpdate
type PeopleUpdate struct {
	Enabled    OptBool `json:"enabled"`
	SidebarWeb OptBool `json:"sidebarWeb"`
}

// GetEnabled returns the value of Enabled.
func (s *PeopleUpdate) GetEnabled() OptBool {
	return s.Enabled
}

// GetSidebarWeb returns the value of SidebarWeb.
func (s *PeopleUpdate) GetSidebarWeb() OptBool {
	return s.SidebarWeb
}

// SetEnabled sets the value of Enabled.
func (s *PeopleUpdate) SetEnabled(val OptBool) {
	s.Enabled = val
}

// SetSidebarWeb sets the value of SidebarWeb.
func (s *PeopleUpdate) SetSidebarWeb(val OptBool) {
	s.SidebarWeb = val
}

// Ref: #/components/schemas/PeopleUpdateDto
type PeopleUpdateDto struct {
	People []PeopleUpdateItem `json:"people"`
}

// GetPeople returns the value of People.
func (s *PeopleUpdateDto) GetPeople() []PeopleUpdateItem {
	return s.People
}

// SetPeople sets the value of People.
func (s *PeopleUpdateDto) SetPeople(val []PeopleUpdateItem) {
	s.People = val
}

// Ref: #/components/schemas/PeopleUpdateItem
type PeopleUpdateItem struct {
	// Person date of birth.
	// Note: the mobile app cannot currently set the birth date to null.
	BirthDate OptNilDate   `json:"birthDate"`
	Color     OptNilString `json:"color"`
	// Asset is used to get the feature face thumbnail.
	FeatureFaceAssetId OptUUID `json:"featureFaceAssetId"`
	// Person id.
	ID         string  `json:"id"`
	IsFavorite OptBool `json:"isFavorite"`
	// Person visibility.
	IsHidden OptBool `json:"isHidden"`
	// Person name.
	Name OptString `json:"name"`
}

// GetBirthDate returns the value of BirthDate.
func (s *PeopleUpdateItem) GetBirthDate() OptNilDate {
	return s.BirthDate
}

// GetColor returns the value of Color.
func (s *PeopleUpdateItem) GetColor() OptNilString {
	return s.Color
}

// GetFeatureFaceAssetId returns the value of FeatureFaceAssetId.
func (s *PeopleUpdateItem) GetFeatureFaceAssetId() OptUUID {
	return s.FeatureFaceAssetId
}

// GetID returns the value of ID.
func (s *PeopleUpdateItem) GetID() string {
	return s.ID
}

// GetIsFavorite returns the value of IsFavorite.
func (s *PeopleUpdateItem) GetIsFavorite() OptBool {
	return s.IsFavorite
}

// GetIsHidden returns the value of IsHidden.
func (s *PeopleUpdateItem) GetIsHidden() OptBool {
	return s.IsHidden
}

// GetName returns the value of Name.
func (s *PeopleUpdateItem) GetName() OptString {
	return s.Name
}

// SetBirthDate sets the value of BirthDate.
func (s *PeopleUpdateItem) SetBirthDate(val OptNilDate) {
	s.BirthDate = val
}

// SetColor sets the value of Color.
func (s *PeopleUpdateItem) SetColor(val OptNilString) {
	s.Color = val
}

// SetFeatureFaceAssetId sets the value of FeatureFaceAssetId.
func (s *PeopleUpdateItem) SetFeatureFaceAssetId(val OptUUID) {
	s.FeatureFaceAssetId = val
}

// SetID sets the value of ID.
func (s *PeopleUpdateItem) SetID(val string) {
	s.ID = val
}

// SetIsFavorite sets the value of IsFavorite.
func (s *PeopleUpdateItem) SetIsFavorite(val OptBool) {
	s.IsFavorite = val
}

// SetIsHidden sets the value of IsHidden.
func (s *PeopleUpdateItem) SetIsHidden(val OptBool) {
	s.IsHidden = val
}

// SetName sets the value of Name.
func (s *PeopleUpdateItem) SetName(val OptString) {
	s.Name = val
}

// Ref: #/components/schemas/Permission
type Permission string

const (
	PermissionAll                    Permission = "all"
	PermissionActivityCreate         Permission = "activity.create"
	PermissionActivityRead           Permission = "activity.read"
	PermissionActivityUpdate         Permission = "activity.update"
	PermissionActivityDelete         Permission = "activity.delete"
	PermissionActivityStatistics     Permission = "activity.statistics"
	PermissionApiKeyCreate           Permission = "apiKey.create"
	PermissionApiKeyRead             Permission = "apiKey.read"
	PermissionApiKeyUpdate           Permission = "apiKey.update"
	PermissionApiKeyDelete           Permission = "apiKey.delete"
	PermissionAssetRead              Permission = "asset.read"
	PermissionAssetUpdate            Permission = "asset.update"
	PermissionAssetDelete            Permission = "asset.delete"
	PermissionAssetStatistics        Permission = "asset.statistics"
	PermissionAssetShare             Permission = "asset.share"
	PermissionAssetView              Permission = "asset.view"
	PermissionAssetDownload          Permission = "asset.download"
	PermissionAssetUpload            Permission = "asset.upload"
	PermissionAssetReplace           Permission = "asset.replace"
	PermissionAlbumCreate            Permission = "album.create"
	PermissionAlbumRead              Permission = "album.read"
	PermissionAlbumUpdate            Permission = "album.update"
	PermissionAlbumDelete            Permission = "album.delete"
	PermissionAlbumStatistics        Permission = "album.statistics"
	PermissionAlbumShare             Permission = "album.share"
	PermissionAlbumDownload          Permission = "album.download"
	PermissionAlbumAssetCreate       Permission = "albumAsset.create"
	PermissionAlbumAssetDelete       Permission = "albumAsset.delete"
	PermissionAlbumUserCreate        Permission = "albumUser.create"
	PermissionAlbumUserUpdate        Permission = "albumUser.update"
	PermissionAlbumUserDelete        Permission = "albumUser.delete"
	PermissionAuthChangePassword     Permission = "auth.changePassword"
	PermissionAuthDeviceDelete       Permission = "authDevice.delete"
	PermissionArchiveRead            Permission = "archive.read"
	PermissionDuplicateRead          Permission = "duplicate.read"
	PermissionDuplicateDelete        Permission = "duplicate.delete"
	PermissionFaceCreate             Permission = "face.create"
	PermissionFaceRead               Permission = "face.read"
	PermissionFaceUpdate             Permission = "face.update"
	PermissionFaceDelete             Permission = "face.delete"
	PermissionJobCreate              Permission = "job.create"
	PermissionJobRead                Permission = "job.read"
	PermissionLibraryCreate          Permission = "library.create"
	PermissionLibraryRead            Permission = "library.read"
	PermissionLibraryUpdate          Permission = "library.update"
	PermissionLibraryDelete          Permission = "library.delete"
	PermissionLibraryStatistics      Permission = "library.statistics"
	PermissionTimelineRead           Permission = "timeline.read"
	PermissionTimelineDownload       Permission = "timeline.download"
	PermissionMemoryCreate           Permission = "memory.create"
	PermissionMemoryRead             Permission = "memory.read"
	PermissionMemoryUpdate           Permission = "memory.update"
	PermissionMemoryDelete           Permission = "memory.delete"
	PermissionMemoryStatistics       Permission = "memory.statistics"
	PermissionMemoryAssetCreate      Permission = "memoryAsset.create"
	PermissionMemoryAssetDelete      Permission = "memoryAsset.delete"
	PermissionNotificationCreate     Permission = "notification.create"
	PermissionNotificationRead       Permission = "notification.read"
	PermissionNotificationUpdate     Permission = "notification.update"
	PermissionNotificationDelete     Permission = "notification.delete"
	PermissionPartnerCreate          Permission = "partner.create"
	PermissionPartnerRead            Permission = "partner.read"
	PermissionPartnerUpdate          Permission = "partner.update"
	PermissionPartnerDelete          Permission = "partner.delete"
	PermissionPersonCreate           Permission = "person.create"
	PermissionPersonRead             Permission = "person.read"
	PermissionPersonUpdate           Permission = "person.update"
	PermissionPersonDelete           Permission = "person.delete"
	PermissionPersonStatistics       Permission = "person.statistics"
	PermissionPersonMerge            Permission = "person.merge"
	PermissionPersonReassign         Permission = "person.reassign"
	PermissionPinCodeCreate          Permission = "pinCode.create"
	PermissionPinCodeUpdate          Permission = "pinCode.update"
	PermissionPinCodeDelete          Permission = "pinCode.delete"
	PermissionServerAbout            Permission = "server.about"
	PermissionServerApkLinks         Permission = "server.apkLinks"
	PermissionServerStorage          Permission = "server.storage"
	PermissionServerStatistics       Permission = "server.statistics"
	PermissionServerVersionCheck     Permission = "server.versionCheck"
	PermissionServerLicenseRead      Permission = "serverLicense.read"
	PermissionServerLicenseUpdate    Permission = "serverLicense.update"
	PermissionServerLicenseDelete    Permission = "serverLicense.delete"
	PermissionSessionCreate          Permission = "session.create"
	PermissionSessionRead            Permission = "session.read"
	PermissionSessionUpdate          Permission = "session.update"
	PermissionSessionDelete          Permission = "session.delete"
	PermissionSessionLock            Permission = "session.lock"
	PermissionSharedLinkCreate       Permission = "sharedLink.create"
	PermissionSharedLinkRead         Permission = "sharedLink.read"
	PermissionSharedLinkUpdate       Permission = "sharedLink.update"
	PermissionSharedLinkDelete       Permission = "sharedLink.delete"
	PermissionStackCreate            Permission = "stack.create"
	PermissionStackRead              Permission = "stack.read"
	PermissionStackUpdate            Permission = "stack.update"
	PermissionStackDelete            Permission = "stack.delete"
	PermissionSyncStream             Permission = "sync.stream"
	PermissionSyncCheckpointRead     Permission = "syncCheckpoint.read"
	PermissionSyncCheckpointUpdate   Permission = "syncCheckpoint.update"
	PermissionSyncCheckpointDelete   Permission = "syncCheckpoint.delete"
	PermissionSystemConfigRead       Permission = "systemConfig.read"
	PermissionSystemConfigUpdate     Permission = "systemConfig.update"
	PermissionSystemMetadataRead     Permission = "systemMetadata.read"
	PermissionSystemMetadataUpdate   Permission = "systemMetadata.update"
	PermissionTagCreate              Permission = "tag.create"
	PermissionTagRead                Permission = "tag.read"
	PermissionTagUpdate              Permission = "tag.update"
	PermissionTagDelete              Permission = "tag.delete"
	PermissionTagAsset               Permission = "tag.asset"
	PermissionUserRead               Permission = "user.read"
	PermissionUserUpdate             Permission = "user.update"
	PermissionUserLicenseCreate      Permission = "userLicense.create"
	PermissionUserLicenseRead        Permission = "userLicense.read"
	PermissionUserLicenseUpdate      Permission = "userLicense.update"
	PermissionUserLicenseDelete      Permission = "userLicense.delete"
	PermissionUserOnboardingRead     Permission = "userOnboarding.read"
	PermissionUserOnboardingUpdate   Permission = "userOnboarding.update"
	PermissionUserOnboardingDelete   Permission = "userOnboarding.delete"
	PermissionUserPreferenceRead     Permission = "userPreference.read"
	PermissionUserPreferenceUpdate   Permission = "userPreference.update"
	PermissionUserProfileImageCreate Permission = "userProfileImage.create"
	PermissionUserProfileImageRead   Permission = "userProfileImage.read"
	PermissionUserProfileImageUpdate Permission = "userProfileImage.update"
	PermissionUserProfileImageDelete Permission = "userProfileImage.delete"
	PermissionAdminUserCreate        Permission = "adminUser.create"
	PermissionAdminUserRead          Permission = "adminUser.read"
	PermissionAdminUserUpdate        Permission = "adminUser.update"
	PermissionAdminUserDelete        Permission = "adminUser.delete"
	PermissionAdminAuthUnlinkAll     Permission = "adminAuth.unlinkAll"
)

// AllValues returns all Permission values.
func (Permission) AllValues() []Permission {
	return []Permission{
		PermissionAll,
		PermissionActivityCreate,
		PermissionActivityRead,
		PermissionActivityUpdate,
		PermissionActivityDelete,
		PermissionActivityStatistics,
		PermissionApiKeyCreate,
		PermissionApiKeyRead,
		PermissionApiKeyUpdate,
		PermissionApiKeyDelete,
		PermissionAssetRead,
		PermissionAssetUpdate,
		PermissionAssetDelete,
		PermissionAssetStatistics,
		PermissionAssetShare,
		PermissionAssetView,
		PermissionAssetDownload,
		PermissionAssetUpload,
		PermissionAssetReplace,
		PermissionAlbumCreate,
		PermissionAlbumRead,
		PermissionAlbumUpdate,
		PermissionAlbumDelete,
		PermissionAlbumStatistics,
		PermissionAlbumShare,
		PermissionAlbumDownload,
		PermissionAlbumAssetCreate,
		PermissionAlbumAssetDelete,
		PermissionAlbumUserCreate,
		PermissionAlbumUserUpdate,
		PermissionAlbumUserDelete,
		PermissionAuthChangePassword,
		PermissionAuthDeviceDelete,
		PermissionArchiveRead,
		PermissionDuplicateRead,
		PermissionDuplicateDelete,
		PermissionFaceCreate,
		PermissionFaceRead,
		PermissionFaceUpdate,
		PermissionFaceDelete,
		PermissionJobCreate,
		PermissionJobRead,
		PermissionLibraryCreate,
		PermissionLibraryRead,
		PermissionLibraryUpdate,
		PermissionLibraryDelete,
		PermissionLibraryStatistics,
		PermissionTimelineRead,
		PermissionTimelineDownload,
		PermissionMemoryCreate,
		PermissionMemoryRead,
		PermissionMemoryUpdate,
		PermissionMemoryDelete,
		PermissionMemoryStatistics,
		PermissionMemoryAssetCreate,
		PermissionMemoryAssetDelete,
		PermissionNotificationCreate,
		PermissionNotificationRead,
		PermissionNotificationUpdate,
		PermissionNotificationDelete,
		PermissionPartnerCreate,
		PermissionPartnerRead,
		PermissionPartnerUpdate,
		PermissionPartnerDelete,
		PermissionPersonCreate,
		PermissionPersonRead,
		PermissionPersonUpdate,
		PermissionPersonDelete,
		PermissionPersonStatistics,
		PermissionPersonMerge,
		PermissionPersonReassign,
		PermissionPinCodeCreate,
		PermissionPinCodeUpdate,
		PermissionPinCodeDelete,
		PermissionServerAbout,
		PermissionServerApkLinks,
		PermissionServerStorage,
		PermissionServerStatistics,
		PermissionServerVersionCheck,
		PermissionServerLicenseRead,
		PermissionServerLicenseUpdate,
		PermissionServerLicenseDelete,
		PermissionSessionCreate,
		PermissionSessionRead,
		PermissionSessionUpdate,
		PermissionSessionDelete,
		PermissionSessionLock,
		PermissionSharedLinkCreate,
		PermissionSharedLinkRead,
		PermissionSharedLinkUpdate,
		PermissionSharedLinkDelete,
		PermissionStackCreate,
		PermissionStackRead,
		PermissionStackUpdate,
		PermissionStackDelete,
		PermissionSyncStream,
		PermissionSyncCheckpointRead,
		PermissionSyncCheckpointUpdate,
		PermissionSyncCheckpointDelete,
		PermissionSystemConfigRead,
		PermissionSystemConfigUpdate,
		PermissionSystemMetadataRead,
		PermissionSystemMetadataUpdate,
		PermissionTagCreate,
		PermissionTagRead,
		PermissionTagUpdate,
		PermissionTagDelete,
		PermissionTagAsset,
		PermissionUserRead,
		PermissionUserUpdate,
		PermissionUserLicenseCreate,
		PermissionUserLicenseRead,
		PermissionUserLicenseUpdate,
		PermissionUserLicenseDelete,
		PermissionUserOnboardingRead,
		PermissionUserOnboardingUpdate,
		PermissionUserOnboardingDelete,
		PermissionUserPreferenceRead,
		PermissionUserPreferenceUpdate,
		PermissionUserProfileImageCreate,
		PermissionUserProfileImageRead,
		PermissionUserProfileImageUpdate,
		PermissionUserProfileImageDelete,
		PermissionAdminUserCreate,
		PermissionAdminUserRead,
		PermissionAdminUserUpdate,
		PermissionAdminUserDelete,
		PermissionAdminAuthUnlinkAll,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s Permission) MarshalText() ([]byte, error) {
	switch s {
	case PermissionAll:
		return []byte(s), nil
	case PermissionActivityCreate:
		return []byte(s), nil
	case PermissionActivityRead:
		return []byte(s), nil
	case PermissionActivityUpdate:
		return []byte(s), nil
	case PermissionActivityDelete:
		return []byte(s), nil
	case PermissionActivityStatistics:
		return []byte(s), nil
	case PermissionApiKeyCreate:
		return []byte(s), nil
	case PermissionApiKeyRead:
		return []byte(s), nil
	case PermissionApiKeyUpdate:
		return []byte(s), nil
	case PermissionApiKeyDelete:
		return []byte(s), nil
	case PermissionAssetRead:
		return []byte(s), nil
	case PermissionAssetUpdate:
		return []byte(s), nil
	case PermissionAssetDelete:
		return []byte(s), nil
	case PermissionAssetStatistics:
		return []byte(s), nil
	case PermissionAssetShare:
		return []byte(s), nil
	case PermissionAssetView:
		return []byte(s), nil
	case PermissionAssetDownload:
		return []byte(s), nil
	case PermissionAssetUpload:
		return []byte(s), nil
	case PermissionAssetReplace:
		return []byte(s), nil
	case PermissionAlbumCreate:
		return []byte(s), nil
	case PermissionAlbumRead:
		return []byte(s), nil
	case PermissionAlbumUpdate:
		return []byte(s), nil
	case PermissionAlbumDelete:
		return []byte(s), nil
	case PermissionAlbumStatistics:
		return []byte(s), nil
	case PermissionAlbumShare:
		return []byte(s), nil
	case PermissionAlbumDownload:
		return []byte(s), nil
	case PermissionAlbumAssetCreate:
		return []byte(s), nil
	case PermissionAlbumAssetDelete:
		return []byte(s), nil
	case PermissionAlbumUserCreate:
		return []byte(s), nil
	case PermissionAlbumUserUpdate:
		return []byte(s), nil
	case PermissionAlbumUserDelete:
		return []byte(s), nil
	case PermissionAuthChangePassword:
		return []byte(s), nil
	case PermissionAuthDeviceDelete:
		return []byte(s), nil
	case PermissionArchiveRead:
		return []byte(s), nil
	case PermissionDuplicateRead:
		return []byte(s), nil
	case PermissionDuplicateDelete:
		return []byte(s), nil
	case PermissionFaceCreate:
		return []byte(s), nil
	case PermissionFaceRead:
		return []byte(s), nil
	case PermissionFaceUpdate:
		return []byte(s), nil
	case PermissionFaceDelete:
		return []byte(s), nil
	case PermissionJobCreate:
		return []byte(s), nil
	case PermissionJobRead:
		return []byte(s), nil
	case PermissionLibraryCreate:
		return []byte(s), nil
	case PermissionLibraryRead:
		return []byte(s), nil
	case PermissionLibraryUpdate:
		return []byte(s), nil
	case PermissionLibraryDelete:
		return []byte(s), nil
	case PermissionLibraryStatistics:
		return []byte(s), nil
	case PermissionTimelineRead:
		return []byte(s), nil
	case PermissionTimelineDownload:
		return []byte(s), nil
	case PermissionMemoryCreate:
		return []byte(s), nil
	case PermissionMemoryRead:
		return []byte(s), nil
	case PermissionMemoryUpdate:
		return []byte(s), nil
	case PermissionMemoryDelete:
		return []byte(s), nil
	case PermissionMemoryStatistics:
		return []byte(s), nil
	case PermissionMemoryAssetCreate:
		return []byte(s), nil
	case PermissionMemoryAssetDelete:
		return []byte(s), nil
	case PermissionNotificationCreate:
		return []byte(s), nil
	case PermissionNotificationRead:
		return []byte(s), nil
	case PermissionNotificationUpdate:
		return []byte(s), nil
	case PermissionNotificationDelete:
		return []byte(s), nil
	case PermissionPartnerCreate:
		return []byte(s), nil
	case PermissionPartnerRead:
		return []byte(s), nil
	case PermissionPartnerUpdate:
		return []byte(s), nil
	case PermissionPartnerDelete:
		return []byte(s), nil
	case PermissionPersonCreate:
		return []byte(s), nil
	case PermissionPersonRead:
		return []byte(s), nil
	case PermissionPersonUpdate:
		return []byte(s), nil
	case PermissionPersonDelete:
		return []byte(s), nil
	case PermissionPersonStatistics:
		return []byte(s), nil
	case PermissionPersonMerge:
		return []byte(s), nil
	case PermissionPersonReassign:
		return []byte(s), nil
	case PermissionPinCodeCreate:
		return []byte(s), nil
	case PermissionPinCodeUpdate:
		return []byte(s), nil
	case PermissionPinCodeDelete:
		return []byte(s), nil
	case PermissionServerAbout:
		return []byte(s), nil
	case PermissionServerApkLinks:
		return []byte(s), nil
	case PermissionServerStorage:
		return []byte(s), nil
	case PermissionServerStatistics:
		return []byte(s), nil
	case PermissionServerVersionCheck:
		return []byte(s), nil
	case PermissionServerLicenseRead:
		return []byte(s), nil
	case PermissionServerLicenseUpdate:
		return []byte(s), nil
	case PermissionServerLicenseDelete:
		return []byte(s), nil
	case PermissionSessionCreate:
		return []byte(s), nil
	case PermissionSessionRead:
		return []byte(s), nil
	case PermissionSessionUpdate:
		return []byte(s), nil
	case PermissionSessionDelete:
		return []byte(s), nil
	case PermissionSessionLock:
		return []byte(s), nil
	case PermissionSharedLinkCreate:
		return []byte(s), nil
	case PermissionSharedLinkRead:
		return []byte(s), nil
	case PermissionSharedLinkUpdate:
		return []byte(s), nil
	case PermissionSharedLinkDelete:
		return []byte(s), nil
	case PermissionStackCreate:
		return []byte(s), nil
	case PermissionStackRead:
		return []byte(s), nil
	case PermissionStackUpdate:
		return []byte(s), nil
	case PermissionStackDelete:
		return []byte(s), nil
	case PermissionSyncStream:
		return []byte(s), nil
	case PermissionSyncCheckpointRead:
		return []byte(s), nil
	case PermissionSyncCheckpointUpdate:
		return []byte(s), nil
	case PermissionSyncCheckpointDelete:
		return []byte(s), nil
	case PermissionSystemConfigRead:
		return []byte(s), nil
	case PermissionSystemConfigUpdate:
		return []byte(s), nil
	case PermissionSystemMetadataRead:
		return []byte(s), nil
	case PermissionSystemMetadataUpdate:
		return []byte(s), nil
	case PermissionTagCreate:
		return []byte(s), nil
	case PermissionTagRead:
		return []byte(s), nil
	case PermissionTagUpdate:
		return []byte(s), nil
	case PermissionTagDelete:
		return []byte(s), nil
	case PermissionTagAsset:
		return []byte(s), nil
	case PermissionUserRead:
		return []byte(s), nil
	case PermissionUserUpdate:
		return []byte(s), nil
	case PermissionUserLicenseCreate:
		return []byte(s), nil
	case PermissionUserLicenseRead:
		return []byte(s), nil
	case PermissionUserLicenseUpdate:
		return []byte(s), nil
	case PermissionUserLicenseDelete:
		return []byte(s), nil
	case PermissionUserOnboardingRead:
		return []byte(s), nil
	case PermissionUserOnboardingUpdate:
		return []byte(s), nil
	case PermissionUserOnboardingDelete:
		return []byte(s), nil
	case PermissionUserPreferenceRead:
		return []byte(s), nil
	case PermissionUserPreferenceUpdate:
		return []byte(s), nil
	case PermissionUserProfileImageCreate:
		return []byte(s), nil
	case PermissionUserProfileImageRead:
		return []byte(s), nil
	case PermissionUserProfileImageUpdate:
		return []byte(s), nil
	case PermissionUserProfileImageDelete:
		return []byte(s), nil
	case PermissionAdminUserCreate:
		return []byte(s), nil
	case PermissionAdminUserRead:
		return []byte(s), nil
	case PermissionAdminUserUpdate:
		return []byte(s), nil
	case PermissionAdminUserDelete:
		return []byte(s), nil
	case PermissionAdminAuthUnlinkAll:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *Permission) UnmarshalText(data []byte) error {
	switch Permission(data) {
	case PermissionAll:
		*s = PermissionAll
		return nil
	case PermissionActivityCreate:
		*s = PermissionActivityCreate
		return nil
	case PermissionActivityRead:
		*s = PermissionActivityRead
		return nil
	case PermissionActivityUpdate:
		*s = PermissionActivityUpdate
		return nil
	case PermissionActivityDelete:
		*s = PermissionActivityDelete
		return nil
	case PermissionActivityStatistics:
		*s = PermissionActivityStatistics
		return nil
	case PermissionApiKeyCreate:
		*s = PermissionApiKeyCreate
		return nil
	case PermissionApiKeyRead:
		*s = PermissionApiKeyRead
		return nil
	case PermissionApiKeyUpdate:
		*s = PermissionApiKeyUpdate
		return nil
	case PermissionApiKeyDelete:
		*s = PermissionApiKeyDelete
		return nil
	case PermissionAssetRead:
		*s = PermissionAssetRead
		return nil
	case PermissionAssetUpdate:
		*s = PermissionAssetUpdate
		return nil
	case PermissionAssetDelete:
		*s = PermissionAssetDelete
		return nil
	case PermissionAssetStatistics:
		*s = PermissionAssetStatistics
		return nil
	case PermissionAssetShare:
		*s = PermissionAssetShare
		return nil
	case PermissionAssetView:
		*s = PermissionAssetView
		return nil
	case PermissionAssetDownload:
		*s = PermissionAssetDownload
		return nil
	case PermissionAssetUpload:
		*s = PermissionAssetUpload
		return nil
	case PermissionAssetReplace:
		*s = PermissionAssetReplace
		return nil
	case PermissionAlbumCreate:
		*s = PermissionAlbumCreate
		return nil
	case PermissionAlbumRead:
		*s = PermissionAlbumRead
		return nil
	case PermissionAlbumUpdate:
		*s = PermissionAlbumUpdate
		return nil
	case PermissionAlbumDelete:
		*s = PermissionAlbumDelete
		return nil
	case PermissionAlbumStatistics:
		*s = PermissionAlbumStatistics
		return nil
	case PermissionAlbumShare:
		*s = PermissionAlbumShare
		return nil
	case PermissionAlbumDownload:
		*s = PermissionAlbumDownload
		return nil
	case PermissionAlbumAssetCreate:
		*s = PermissionAlbumAssetCreate
		return nil
	case PermissionAlbumAssetDelete:
		*s = PermissionAlbumAssetDelete
		return nil
	case PermissionAlbumUserCreate:
		*s = PermissionAlbumUserCreate
		return nil
	case PermissionAlbumUserUpdate:
		*s = PermissionAlbumUserUpdate
		return nil
	case PermissionAlbumUserDelete:
		*s = PermissionAlbumUserDelete
		return nil
	case PermissionAuthChangePassword:
		*s = PermissionAuthChangePassword
		return nil
	case PermissionAuthDeviceDelete:
		*s = PermissionAuthDeviceDelete
		return nil
	case PermissionArchiveRead:
		*s = PermissionArchiveRead
		return nil
	case PermissionDuplicateRead:
		*s = PermissionDuplicateRead
		return nil
	case PermissionDuplicateDelete:
		*s = PermissionDuplicateDelete
		return nil
	case PermissionFaceCreate:
		*s = PermissionFaceCreate
		return nil
	case PermissionFaceRead:
		*s = PermissionFaceRead
		return nil
	case PermissionFaceUpdate:
		*s = PermissionFaceUpdate
		return nil
	case PermissionFaceDelete:
		*s = PermissionFaceDelete
		return nil
	case PermissionJobCreate:
		*s = PermissionJobCreate
		return nil
	case PermissionJobRead:
		*s = PermissionJobRead
		return nil
	case PermissionLibraryCreate:
		*s = PermissionLibraryCreate
		return nil
	case PermissionLibraryRead:
		*s = PermissionLibraryRead
		return nil
	case PermissionLibraryUpdate:
		*s = PermissionLibraryUpdate
		return nil
	case PermissionLibraryDelete:
		*s = PermissionLibraryDelete
		return nil
	case PermissionLibraryStatistics:
		*s = PermissionLibraryStatistics
		return nil
	case PermissionTimelineRead:
		*s = PermissionTimelineRead
		return nil
	case PermissionTimelineDownload:
		*s = PermissionTimelineDownload
		return nil
	case PermissionMemoryCreate:
		*s = PermissionMemoryCreate
		return nil
	case PermissionMemoryRead:
		*s = PermissionMemoryRead
		return nil
	case PermissionMemoryUpdate:
		*s = PermissionMemoryUpdate
		return nil
	case PermissionMemoryDelete:
		*s = PermissionMemoryDelete
		return nil
	case PermissionMemoryStatistics:
		*s = PermissionMemoryStatistics
		return nil
	case PermissionMemoryAssetCreate:
		*s = PermissionMemoryAssetCreate
		return nil
	case PermissionMemoryAssetDelete:
		*s = PermissionMemoryAssetDelete
		return nil
	case PermissionNotificationCreate:
		*s = PermissionNotificationCreate
		return nil
	case PermissionNotificationRead:
		*s = PermissionNotificationRead
		return nil
	case PermissionNotificationUpdate:
		*s = PermissionNotificationUpdate
		return nil
	case PermissionNotificationDelete:
		*s = PermissionNotificationDelete
		return nil
	case PermissionPartnerCreate:
		*s = PermissionPartnerCreate
		return nil
	case PermissionPartnerRead:
		*s = PermissionPartnerRead
		return nil
	case PermissionPartnerUpdate:
		*s = PermissionPartnerUpdate
		return nil
	case PermissionPartnerDelete:
		*s = PermissionPartnerDelete
		return nil
	case PermissionPersonCreate:
		*s = PermissionPersonCreate
		return nil
	case PermissionPersonRead:
		*s = PermissionPersonRead
		return nil
	case PermissionPersonUpdate:
		*s = PermissionPersonUpdate
		return nil
	case PermissionPersonDelete:
		*s = PermissionPersonDelete
		return nil
	case PermissionPersonStatistics:
		*s = PermissionPersonStatistics
		return nil
	case PermissionPersonMerge:
		*s = PermissionPersonMerge
		return nil
	case PermissionPersonReassign:
		*s = PermissionPersonReassign
		return nil
	case PermissionPinCodeCreate:
		*s = PermissionPinCodeCreate
		return nil
	case PermissionPinCodeUpdate:
		*s = PermissionPinCodeUpdate
		return nil
	case PermissionPinCodeDelete:
		*s = PermissionPinCodeDelete
		return nil
	case PermissionServerAbout:
		*s = PermissionServerAbout
		return nil
	case PermissionServerApkLinks:
		*s = PermissionServerApkLinks
		return nil
	case PermissionServerStorage:
		*s = PermissionServerStorage
		return nil
	case PermissionServerStatistics:
		*s = PermissionServerStatistics
		return nil
	case PermissionServerVersionCheck:
		*s = PermissionServerVersionCheck
		return nil
	case PermissionServerLicenseRead:
		*s = PermissionServerLicenseRead
		return nil
	case PermissionServerLicenseUpdate:
		*s = PermissionServerLicenseUpdate
		return nil
	case PermissionServerLicenseDelete:
		*s = PermissionServerLicenseDelete
		return nil
	case PermissionSessionCreate:
		*s = PermissionSessionCreate
		return nil
	case PermissionSessionRead:
		*s = PermissionSessionRead
		return nil
	case PermissionSessionUpdate:
		*s = PermissionSessionUpdate
		return nil
	case PermissionSessionDelete:
		*s = PermissionSessionDelete
		return nil
	case PermissionSessionLock:
		*s = PermissionSessionLock
		return nil
	case PermissionSharedLinkCreate:
		*s = PermissionSharedLinkCreate
		return nil
	case PermissionSharedLinkRead:
		*s = PermissionSharedLinkRead
		return nil
	case PermissionSharedLinkUpdate:
		*s = PermissionSharedLinkUpdate
		return nil
	case PermissionSharedLinkDelete:
		*s = PermissionSharedLinkDelete
		return nil
	case PermissionStackCreate:
		*s = PermissionStackCreate
		return nil
	case PermissionStackRead:
		*s = PermissionStackRead
		return nil
	case PermissionStackUpdate:
		*s = PermissionStackUpdate
		return nil
	case PermissionStackDelete:
		*s = PermissionStackDelete
		return nil
	case PermissionSyncStream:
		*s = PermissionSyncStream
		return nil
	case PermissionSyncCheckpointRead:
		*s = PermissionSyncCheckpointRead
		return nil
	case PermissionSyncCheckpointUpdate:
		*s = PermissionSyncCheckpointUpdate
		return nil
	case PermissionSyncCheckpointDelete:
		*s = PermissionSyncCheckpointDelete
		return nil
	case PermissionSystemConfigRead:
		*s = PermissionSystemConfigRead
		return nil
	case PermissionSystemConfigUpdate:
		*s = PermissionSystemConfigUpdate
		return nil
	case PermissionSystemMetadataRead:
		*s = PermissionSystemMetadataRead
		return nil
	case PermissionSystemMetadataUpdate:
		*s = PermissionSystemMetadataUpdate
		return nil
	case PermissionTagCreate:
		*s = PermissionTagCreate
		return nil
	case PermissionTagRead:
		*s = PermissionTagRead
		return nil
	case PermissionTagUpdate:
		*s = PermissionTagUpdate
		return nil
	case PermissionTagDelete:
		*s = PermissionTagDelete
		return nil
	case PermissionTagAsset:
		*s = PermissionTagAsset
		return nil
	case PermissionUserRead:
		*s = PermissionUserRead
		return nil
	case PermissionUserUpdate:
		*s = PermissionUserUpdate
		return nil
	case PermissionUserLicenseCreate:
		*s = PermissionUserLicenseCreate
		return nil
	case PermissionUserLicenseRead:
		*s = PermissionUserLicenseRead
		return nil
	case PermissionUserLicenseUpdate:
		*s = PermissionUserLicenseUpdate
		return nil
	case PermissionUserLicenseDelete:
		*s = PermissionUserLicenseDelete
		return nil
	case PermissionUserOnboardingRead:
		*s = PermissionUserOnboardingRead
		return nil
	case PermissionUserOnboardingUpdate:
		*s = PermissionUserOnboardingUpdate
		return nil
	case PermissionUserOnboardingDelete:
		*s = PermissionUserOnboardingDelete
		return nil
	case PermissionUserPreferenceRead:
		*s = PermissionUserPreferenceRead
		return nil
	case PermissionUserPreferenceUpdate:
		*s = PermissionUserPreferenceUpdate
		return nil
	case PermissionUserProfileImageCreate:
		*s = PermissionUserProfileImageCreate
		return nil
	case PermissionUserProfileImageRead:
		*s = PermissionUserProfileImageRead
		return nil
	case PermissionUserProfileImageUpdate:
		*s = PermissionUserProfileImageUpdate
		return nil
	case PermissionUserProfileImageDelete:
		*s = PermissionUserProfileImageDelete
		return nil
	case PermissionAdminUserCreate:
		*s = PermissionAdminUserCreate
		return nil
	case PermissionAdminUserRead:
		*s = PermissionAdminUserRead
		return nil
	case PermissionAdminUserUpdate:
		*s = PermissionAdminUserUpdate
		return nil
	case PermissionAdminUserDelete:
		*s = PermissionAdminUserDelete
		return nil
	case PermissionAdminAuthUnlinkAll:
		*s = PermissionAdminAuthUnlinkAll
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/PersonCreateDto
type PersonCreateDto struct {
	// Person date of birth.
	// Note: the mobile app cannot currently set the birth date to null.
	BirthDate  OptNilDate   `json:"birthDate"`
	Color      OptNilString `json:"color"`
	IsFavorite OptBool      `json:"isFavorite"`
	// Person visibility.
	IsHidden OptBool `json:"isHidden"`
	// Person name.
	Name OptString `json:"name"`
}

// GetBirthDate returns the value of BirthDate.
func (s *PersonCreateDto) GetBirthDate() OptNilDate {
	return s.BirthDate
}

// GetColor returns the value of Color.
func (s *PersonCreateDto) GetColor() OptNilString {
	return s.Color
}

// GetIsFavorite returns the value of IsFavorite.
func (s *PersonCreateDto) GetIsFavorite() OptBool {
	return s.IsFavorite
}

// GetIsHidden returns the value of IsHidden.
func (s *PersonCreateDto) GetIsHidden() OptBool {
	return s.IsHidden
}

// GetName returns the value of Name.
func (s *PersonCreateDto) GetName() OptString {
	return s.Name
}

// SetBirthDate sets the value of BirthDate.
func (s *PersonCreateDto) SetBirthDate(val OptNilDate) {
	s.BirthDate = val
}

// SetColor sets the value of Color.
func (s *PersonCreateDto) SetColor(val OptNilString) {
	s.Color = val
}

// SetIsFavorite sets the value of IsFavorite.
func (s *PersonCreateDto) SetIsFavorite(val OptBool) {
	s.IsFavorite = val
}

// SetIsHidden sets the value of IsHidden.
func (s *PersonCreateDto) SetIsHidden(val OptBool) {
	s.IsHidden = val
}

// SetName sets the value of Name.
func (s *PersonCreateDto) SetName(val OptString) {
	s.Name = val
}

// Ref: #/components/schemas/PersonResponseDto
type PersonResponseDto struct {
	BirthDate NilDate `json:"birthDate"`
	// This property was added in v1.126.0.
	Color OptString `json:"color"`
	ID    string    `json:"id"`
	// This property was added in v1.126.0.
	IsFavorite    OptBool `json:"isFavorite"`
	IsHidden      bool    `json:"isHidden"`
	Name          string  `json:"name"`
	ThumbnailPath string  `json:"thumbnailPath"`
	// This property was added in v1.107.0.
	UpdatedAt OptDateTime `json:"updatedAt"`
}

// GetBirthDate returns the value of BirthDate.
func (s *PersonResponseDto) GetBirthDate() NilDate {
	return s.BirthDate
}

// GetColor returns the value of Color.
func (s *PersonResponseDto) GetColor() OptString {
	return s.Color
}

// GetID returns the value of ID.
func (s *PersonResponseDto) GetID() string {
	return s.ID
}

// GetIsFavorite returns the value of IsFavorite.
func (s *PersonResponseDto) GetIsFavorite() OptBool {
	return s.IsFavorite
}

// GetIsHidden returns the value of IsHidden.
func (s *PersonResponseDto) GetIsHidden() bool {
	return s.IsHidden
}

// GetName returns the value of Name.
func (s *PersonResponseDto) GetName() string {
	return s.Name
}

// GetThumbnailPath returns the value of ThumbnailPath.
func (s *PersonResponseDto) GetThumbnailPath() string {
	return s.ThumbnailPath
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *PersonResponseDto) GetUpdatedAt() OptDateTime {
	return s.UpdatedAt
}

// SetBirthDate sets the value of BirthDate.
func (s *PersonResponseDto) SetBirthDate(val NilDate) {
	s.BirthDate = val
}

// SetColor sets the value of Color.
func (s *PersonResponseDto) SetColor(val OptString) {
	s.Color = val
}

// SetID sets the value of ID.
func (s *PersonResponseDto) SetID(val string) {
	s.ID = val
}

// SetIsFavorite sets the value of IsFavorite.
func (s *PersonResponseDto) SetIsFavorite(val OptBool) {
	s.IsFavorite = val
}

// SetIsHidden sets the value of IsHidden.
func (s *PersonResponseDto) SetIsHidden(val bool) {
	s.IsHidden = val
}

// SetName sets the value of Name.
func (s *PersonResponseDto) SetName(val string) {
	s.Name = val
}

// SetThumbnailPath sets the value of ThumbnailPath.
func (s *PersonResponseDto) SetThumbnailPath(val string) {
	s.ThumbnailPath = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *PersonResponseDto) SetUpdatedAt(val OptDateTime) {
	s.UpdatedAt = val
}

// Ref: #/components/schemas/PersonStatisticsResponseDto
type PersonStatisticsResponseDto struct {
	Assets int `json:"assets"`
}

// GetAssets returns the value of Assets.
func (s *PersonStatisticsResponseDto) GetAssets() int {
	return s.Assets
}

// SetAssets sets the value of Assets.
func (s *PersonStatisticsResponseDto) SetAssets(val int) {
	s.Assets = val
}

// Ref: #/components/schemas/PersonUpdateDto
type PersonUpdateDto struct {
	// Person date of birth.
	// Note: the mobile app cannot currently set the birth date to null.
	BirthDate OptNilDate   `json:"birthDate"`
	Color     OptNilString `json:"color"`
	// Asset is used to get the feature face thumbnail.
	FeatureFaceAssetId OptUUID `json:"featureFaceAssetId"`
	IsFavorite         OptBool `json:"isFavorite"`
	// Person visibility.
	IsHidden OptBool `json:"isHidden"`
	// Person name.
	Name OptString `json:"name"`
}

// GetBirthDate returns the value of BirthDate.
func (s *PersonUpdateDto) GetBirthDate() OptNilDate {
	return s.BirthDate
}

// GetColor returns the value of Color.
func (s *PersonUpdateDto) GetColor() OptNilString {
	return s.Color
}

// GetFeatureFaceAssetId returns the value of FeatureFaceAssetId.
func (s *PersonUpdateDto) GetFeatureFaceAssetId() OptUUID {
	return s.FeatureFaceAssetId
}

// GetIsFavorite returns the value of IsFavorite.
func (s *PersonUpdateDto) GetIsFavorite() OptBool {
	return s.IsFavorite
}

// GetIsHidden returns the value of IsHidden.
func (s *PersonUpdateDto) GetIsHidden() OptBool {
	return s.IsHidden
}

// GetName returns the value of Name.
func (s *PersonUpdateDto) GetName() OptString {
	return s.Name
}

// SetBirthDate sets the value of BirthDate.
func (s *PersonUpdateDto) SetBirthDate(val OptNilDate) {
	s.BirthDate = val
}

// SetColor sets the value of Color.
func (s *PersonUpdateDto) SetColor(val OptNilString) {
	s.Color = val
}

// SetFeatureFaceAssetId sets the value of FeatureFaceAssetId.
func (s *PersonUpdateDto) SetFeatureFaceAssetId(val OptUUID) {
	s.FeatureFaceAssetId = val
}

// SetIsFavorite sets the value of IsFavorite.
func (s *PersonUpdateDto) SetIsFavorite(val OptBool) {
	s.IsFavorite = val
}

// SetIsHidden sets the value of IsHidden.
func (s *PersonUpdateDto) SetIsHidden(val OptBool) {
	s.IsHidden = val
}

// SetName sets the value of Name.
func (s *PersonUpdateDto) SetName(val OptString) {
	s.Name = val
}

// Ref: #/components/schemas/PersonWithFacesResponseDto
type PersonWithFacesResponseDto struct {
	BirthDate NilDate `json:"birthDate"`
	// This property was added in v1.126.0.
	Color OptString                           `json:"color"`
	Faces []AssetFaceWithoutPersonResponseDto `json:"faces"`
	ID    string                              `json:"id"`
	// This property was added in v1.126.0.
	IsFavorite    OptBool `json:"isFavorite"`
	IsHidden      bool    `json:"isHidden"`
	Name          string  `json:"name"`
	ThumbnailPath string  `json:"thumbnailPath"`
	// This property was added in v1.107.0.
	UpdatedAt OptDateTime `json:"updatedAt"`
}

// GetBirthDate returns the value of BirthDate.
func (s *PersonWithFacesResponseDto) GetBirthDate() NilDate {
	return s.BirthDate
}

// GetColor returns the value of Color.
func (s *PersonWithFacesResponseDto) GetColor() OptString {
	return s.Color
}

// GetFaces returns the value of Faces.
func (s *PersonWithFacesResponseDto) GetFaces() []AssetFaceWithoutPersonResponseDto {
	return s.Faces
}

// GetID returns the value of ID.
func (s *PersonWithFacesResponseDto) GetID() string {
	return s.ID
}

// GetIsFavorite returns the value of IsFavorite.
func (s *PersonWithFacesResponseDto) GetIsFavorite() OptBool {
	return s.IsFavorite
}

// GetIsHidden returns the value of IsHidden.
func (s *PersonWithFacesResponseDto) GetIsHidden() bool {
	return s.IsHidden
}

// GetName returns the value of Name.
func (s *PersonWithFacesResponseDto) GetName() string {
	return s.Name
}

// GetThumbnailPath returns the value of ThumbnailPath.
func (s *PersonWithFacesResponseDto) GetThumbnailPath() string {
	return s.ThumbnailPath
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *PersonWithFacesResponseDto) GetUpdatedAt() OptDateTime {
	return s.UpdatedAt
}

// SetBirthDate sets the value of BirthDate.
func (s *PersonWithFacesResponseDto) SetBirthDate(val NilDate) {
	s.BirthDate = val
}

// SetColor sets the value of Color.
func (s *PersonWithFacesResponseDto) SetColor(val OptString) {
	s.Color = val
}

// SetFaces sets the value of Faces.
func (s *PersonWithFacesResponseDto) SetFaces(val []AssetFaceWithoutPersonResponseDto) {
	s.Faces = val
}

// SetID sets the value of ID.
func (s *PersonWithFacesResponseDto) SetID(val string) {
	s.ID = val
}

// SetIsFavorite sets the value of IsFavorite.
func (s *PersonWithFacesResponseDto) SetIsFavorite(val OptBool) {
	s.IsFavorite = val
}

// SetIsHidden sets the value of IsHidden.
func (s *PersonWithFacesResponseDto) SetIsHidden(val bool) {
	s.IsHidden = val
}

// SetName sets the value of Name.
func (s *PersonWithFacesResponseDto) SetName(val string) {
	s.Name = val
}

// SetThumbnailPath sets the value of ThumbnailPath.
func (s *PersonWithFacesResponseDto) SetThumbnailPath(val string) {
	s.ThumbnailPath = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *PersonWithFacesResponseDto) SetUpdatedAt(val OptDateTime) {
	s.UpdatedAt = val
}

// Ref: #/components/schemas/PinCodeChangeDto
type PinCodeChangeDto struct {
	NewPinCode string    `json:"newPinCode"`
	Password   OptString `json:"password"`
	PinCode    OptString `json:"pinCode"`
}

// GetNewPinCode returns the value of NewPinCode.
func (s *PinCodeChangeDto) GetNewPinCode() string {
	return s.NewPinCode
}

// GetPassword returns the value of Password.
func (s *PinCodeChangeDto) GetPassword() OptString {
	return s.Password
}

// GetPinCode returns the value of PinCode.
func (s *PinCodeChangeDto) GetPinCode() OptString {
	return s.PinCode
}

// SetNewPinCode sets the value of NewPinCode.
func (s *PinCodeChangeDto) SetNewPinCode(val string) {
	s.NewPinCode = val
}

// SetPassword sets the value of Password.
func (s *PinCodeChangeDto) SetPassword(val OptString) {
	s.Password = val
}

// SetPinCode sets the value of PinCode.
func (s *PinCodeChangeDto) SetPinCode(val OptString) {
	s.PinCode = val
}

// Ref: #/components/schemas/PinCodeResetDto
type PinCodeResetDto struct {
	Password OptString `json:"password"`
	PinCode  OptString `json:"pinCode"`
}

// GetPassword returns the value of Password.
func (s *PinCodeResetDto) GetPassword() OptString {
	return s.Password
}

// GetPinCode returns the value of PinCode.
func (s *PinCodeResetDto) GetPinCode() OptString {
	return s.PinCode
}

// SetPassword sets the value of Password.
func (s *PinCodeResetDto) SetPassword(val OptString) {
	s.Password = val
}

// SetPinCode sets the value of PinCode.
func (s *PinCodeResetDto) SetPinCode(val OptString) {
	s.PinCode = val
}

// Ref: #/components/schemas/PinCodeSetupDto
type PinCodeSetupDto struct {
	PinCode string `json:"pinCode"`
}

// GetPinCode returns the value of PinCode.
func (s *PinCodeSetupDto) GetPinCode() string {
	return s.PinCode
}

// SetPinCode sets the value of PinCode.
func (s *PinCodeSetupDto) SetPinCode(val string) {
	s.PinCode = val
}

// Ref: #/components/schemas/PlacesResponseDto
type PlacesResponseDto struct {
	Admin1name OptString `json:"admin1name"`
	Admin2name OptString `json:"admin2name"`
	Latitude   float64   `json:"latitude"`
	Longitude  float64   `json:"longitude"`
	Name       string    `json:"name"`
}

// GetAdmin1name returns the value of Admin1name.
func (s *PlacesResponseDto) GetAdmin1name() OptString {
	return s.Admin1name
}

// GetAdmin2name returns the value of Admin2name.
func (s *PlacesResponseDto) GetAdmin2name() OptString {
	return s.Admin2name
}

// GetLatitude returns the value of Latitude.
func (s *PlacesResponseDto) GetLatitude() float64 {
	return s.Latitude
}

// GetLongitude returns the value of Longitude.
func (s *PlacesResponseDto) GetLongitude() float64 {
	return s.Longitude
}

// GetName returns the value of Name.
func (s *PlacesResponseDto) GetName() string {
	return s.Name
}

// SetAdmin1name sets the value of Admin1name.
func (s *PlacesResponseDto) SetAdmin1name(val OptString) {
	s.Admin1name = val
}

// SetAdmin2name sets the value of Admin2name.
func (s *PlacesResponseDto) SetAdmin2name(val OptString) {
	s.Admin2name = val
}

// SetLatitude sets the value of Latitude.
func (s *PlacesResponseDto) SetLatitude(val float64) {
	s.Latitude = val
}

// SetLongitude sets the value of Longitude.
func (s *PlacesResponseDto) SetLongitude(val float64) {
	s.Longitude = val
}

// SetName sets the value of Name.
func (s *PlacesResponseDto) SetName(val string) {
	s.Name = val
}

type PlayAssetVideoOK struct {
	Data io.Reader
}

// Read reads data from the Data reader.
//
// Kept to satisfy the io.Reader interface.
func (s PlayAssetVideoOK) Read(p []byte) (n int, err error) {
	if s.Data == nil {
		return 0, io.EOF
	}
	return s.Data.Read(p)
}

// Ref: #/components/schemas/PurchaseResponse
type PurchaseResponse struct {
	HideBuyButtonUntil string `json:"hideBuyButtonUntil"`
	ShowSupportBadge   bool   `json:"showSupportBadge"`
}

// GetHideBuyButtonUntil returns the value of HideBuyButtonUntil.
func (s *PurchaseResponse) GetHideBuyButtonUntil() string {
	return s.HideBuyButtonUntil
}

// GetShowSupportBadge returns the value of ShowSupportBadge.
func (s *PurchaseResponse) GetShowSupportBadge() bool {
	return s.ShowSupportBadge
}

// SetHideBuyButtonUntil sets the value of HideBuyButtonUntil.
func (s *PurchaseResponse) SetHideBuyButtonUntil(val string) {
	s.HideBuyButtonUntil = val
}

// SetShowSupportBadge sets the value of ShowSupportBadge.
func (s *PurchaseResponse) SetShowSupportBadge(val bool) {
	s.ShowSupportBadge = val
}

// Ref: #/components/schemas/PurchaseUpdate
type PurchaseUpdate struct {
	HideBuyButtonUntil OptString `json:"hideBuyButtonUntil"`
	ShowSupportBadge   OptBool   `json:"showSupportBadge"`
}

// GetHideBuyButtonUntil returns the value of HideBuyButtonUntil.
func (s *PurchaseUpdate) GetHideBuyButtonUntil() OptString {
	return s.HideBuyButtonUntil
}

// GetShowSupportBadge returns the value of ShowSupportBadge.
func (s *PurchaseUpdate) GetShowSupportBadge() OptBool {
	return s.ShowSupportBadge
}

// SetHideBuyButtonUntil sets the value of HideBuyButtonUntil.
func (s *PurchaseUpdate) SetHideBuyButtonUntil(val OptString) {
	s.HideBuyButtonUntil = val
}

// SetShowSupportBadge sets the value of ShowSupportBadge.
func (s *PurchaseUpdate) SetShowSupportBadge(val OptBool) {
	s.ShowSupportBadge = val
}

// Ref: #/components/schemas/QueueStatusDto
type QueueStatusDto struct {
	IsActive bool `json:"isActive"`
	IsPaused bool `json:"isPaused"`
}

// GetIsActive returns the value of IsActive.
func (s *QueueStatusDto) GetIsActive() bool {
	return s.IsActive
}

// GetIsPaused returns the value of IsPaused.
func (s *QueueStatusDto) GetIsPaused() bool {
	return s.IsPaused
}

// SetIsActive sets the value of IsActive.
func (s *QueueStatusDto) SetIsActive(val bool) {
	s.IsActive = val
}

// SetIsPaused sets the value of IsPaused.
func (s *QueueStatusDto) SetIsPaused(val bool) {
	s.IsPaused = val
}

// Ref: #/components/schemas/RandomSearchDto
type RandomSearchDto struct {
	AlbumIds      []uuid.UUID        `json:"albumIds"`
	City          OptNilString       `json:"city"`
	Country       OptNilString       `json:"country"`
	CreatedAfter  OptDateTime        `json:"createdAfter"`
	CreatedBefore OptDateTime        `json:"createdBefore"`
	DeviceId      OptString          `json:"deviceId"`
	IsEncoded     OptBool            `json:"isEncoded"`
	IsFavorite    OptBool            `json:"isFavorite"`
	IsMotion      OptBool            `json:"isMotion"`
	IsNotInAlbum  OptBool            `json:"isNotInAlbum"`
	IsOffline     OptBool            `json:"isOffline"`
	LensModel     OptNilString       `json:"lensModel"`
	LibraryId     OptNilUUID         `json:"libraryId"`
	Make          OptString          `json:"make"`
	Model         OptNilString       `json:"model"`
	PersonIds     []uuid.UUID        `json:"personIds"`
	Rating        OptFloat64         `json:"rating"`
	Size          OptFloat64         `json:"size"`
	State         OptNilString       `json:"state"`
	TagIds        OptNilUUIDArray    `json:"tagIds"`
	TakenAfter    OptDateTime        `json:"takenAfter"`
	TakenBefore   OptDateTime        `json:"takenBefore"`
	TrashedAfter  OptDateTime        `json:"trashedAfter"`
	TrashedBefore OptDateTime        `json:"trashedBefore"`
	Type          OptAssetTypeEnum   `json:"type"`
	UpdatedAfter  OptDateTime        `json:"updatedAfter"`
	UpdatedBefore OptDateTime        `json:"updatedBefore"`
	Visibility    OptAssetVisibility `json:"visibility"`
	WithDeleted   OptBool            `json:"withDeleted"`
	WithExif      OptBool            `json:"withExif"`
	WithPeople    OptBool            `json:"withPeople"`
	WithStacked   OptBool            `json:"withStacked"`
}

// GetAlbumIds returns the value of AlbumIds.
func (s *RandomSearchDto) GetAlbumIds() []uuid.UUID {
	return s.AlbumIds
}

// GetCity returns the value of City.
func (s *RandomSearchDto) GetCity() OptNilString {
	return s.City
}

// GetCountry returns the value of Country.
func (s *RandomSearchDto) GetCountry() OptNilString {
	return s.Country
}

// GetCreatedAfter returns the value of CreatedAfter.
func (s *RandomSearchDto) GetCreatedAfter() OptDateTime {
	return s.CreatedAfter
}

// GetCreatedBefore returns the value of CreatedBefore.
func (s *RandomSearchDto) GetCreatedBefore() OptDateTime {
	return s.CreatedBefore
}

// GetDeviceId returns the value of DeviceId.
func (s *RandomSearchDto) GetDeviceId() OptString {
	return s.DeviceId
}

// GetIsEncoded returns the value of IsEncoded.
func (s *RandomSearchDto) GetIsEncoded() OptBool {
	return s.IsEncoded
}

// GetIsFavorite returns the value of IsFavorite.
func (s *RandomSearchDto) GetIsFavorite() OptBool {
	return s.IsFavorite
}

// GetIsMotion returns the value of IsMotion.
func (s *RandomSearchDto) GetIsMotion() OptBool {
	return s.IsMotion
}

// GetIsNotInAlbum returns the value of IsNotInAlbum.
func (s *RandomSearchDto) GetIsNotInAlbum() OptBool {
	return s.IsNotInAlbum
}

// GetIsOffline returns the value of IsOffline.
func (s *RandomSearchDto) GetIsOffline() OptBool {
	return s.IsOffline
}

// GetLensModel returns the value of LensModel.
func (s *RandomSearchDto) GetLensModel() OptNilString {
	return s.LensModel
}

// GetLibraryId returns the value of LibraryId.
func (s *RandomSearchDto) GetLibraryId() OptNilUUID {
	return s.LibraryId
}

// GetMake returns the value of Make.
func (s *RandomSearchDto) GetMake() OptString {
	return s.Make
}

// GetModel returns the value of Model.
func (s *RandomSearchDto) GetModel() OptNilString {
	return s.Model
}

// GetPersonIds returns the value of PersonIds.
func (s *RandomSearchDto) GetPersonIds() []uuid.UUID {
	return s.PersonIds
}

// GetRating returns the value of Rating.
func (s *RandomSearchDto) GetRating() OptFloat64 {
	return s.Rating
}

// GetSize returns the value of Size.
func (s *RandomSearchDto) GetSize() OptFloat64 {
	return s.Size
}

// GetState returns the value of State.
func (s *RandomSearchDto) GetState() OptNilString {
	return s.State
}

// GetTagIds returns the value of TagIds.
func (s *RandomSearchDto) GetTagIds() OptNilUUIDArray {
	return s.TagIds
}

// GetTakenAfter returns the value of TakenAfter.
func (s *RandomSearchDto) GetTakenAfter() OptDateTime {
	return s.TakenAfter
}

// GetTakenBefore returns the value of TakenBefore.
func (s *RandomSearchDto) GetTakenBefore() OptDateTime {
	return s.TakenBefore
}

// GetTrashedAfter returns the value of TrashedAfter.
func (s *RandomSearchDto) GetTrashedAfter() OptDateTime {
	return s.TrashedAfter
}

// GetTrashedBefore returns the value of TrashedBefore.
func (s *RandomSearchDto) GetTrashedBefore() OptDateTime {
	return s.TrashedBefore
}

// GetType returns the value of Type.
func (s *RandomSearchDto) GetType() OptAssetTypeEnum {
	return s.Type
}

// GetUpdatedAfter returns the value of UpdatedAfter.
func (s *RandomSearchDto) GetUpdatedAfter() OptDateTime {
	return s.UpdatedAfter
}

// GetUpdatedBefore returns the value of UpdatedBefore.
func (s *RandomSearchDto) GetUpdatedBefore() OptDateTime {
	return s.UpdatedBefore
}

// GetVisibility returns the value of Visibility.
func (s *RandomSearchDto) GetVisibility() OptAssetVisibility {
	return s.Visibility
}

// GetWithDeleted returns the value of WithDeleted.
func (s *RandomSearchDto) GetWithDeleted() OptBool {
	return s.WithDeleted
}

// GetWithExif returns the value of WithExif.
func (s *RandomSearchDto) GetWithExif() OptBool {
	return s.WithExif
}

// GetWithPeople returns the value of WithPeople.
func (s *RandomSearchDto) GetWithPeople() OptBool {
	return s.WithPeople
}

// GetWithStacked returns the value of WithStacked.
func (s *RandomSearchDto) GetWithStacked() OptBool {
	return s.WithStacked
}

// SetAlbumIds sets the value of AlbumIds.
func (s *RandomSearchDto) SetAlbumIds(val []uuid.UUID) {
	s.AlbumIds = val
}

// SetCity sets the value of City.
func (s *RandomSearchDto) SetCity(val OptNilString) {
	s.City = val
}

// SetCountry sets the value of Country.
func (s *RandomSearchDto) SetCountry(val OptNilString) {
	s.Country = val
}

// SetCreatedAfter sets the value of CreatedAfter.
func (s *RandomSearchDto) SetCreatedAfter(val OptDateTime) {
	s.CreatedAfter = val
}

// SetCreatedBefore sets the value of CreatedBefore.
func (s *RandomSearchDto) SetCreatedBefore(val OptDateTime) {
	s.CreatedBefore = val
}

// SetDeviceId sets the value of DeviceId.
func (s *RandomSearchDto) SetDeviceId(val OptString) {
	s.DeviceId = val
}

// SetIsEncoded sets the value of IsEncoded.
func (s *RandomSearchDto) SetIsEncoded(val OptBool) {
	s.IsEncoded = val
}

// SetIsFavorite sets the value of IsFavorite.
func (s *RandomSearchDto) SetIsFavorite(val OptBool) {
	s.IsFavorite = val
}

// SetIsMotion sets the value of IsMotion.
func (s *RandomSearchDto) SetIsMotion(val OptBool) {
	s.IsMotion = val
}

// SetIsNotInAlbum sets the value of IsNotInAlbum.
func (s *RandomSearchDto) SetIsNotInAlbum(val OptBool) {
	s.IsNotInAlbum = val
}

// SetIsOffline sets the value of IsOffline.
func (s *RandomSearchDto) SetIsOffline(val OptBool) {
	s.IsOffline = val
}

// SetLensModel sets the value of LensModel.
func (s *RandomSearchDto) SetLensModel(val OptNilString) {
	s.LensModel = val
}

// SetLibraryId sets the value of LibraryId.
func (s *RandomSearchDto) SetLibraryId(val OptNilUUID) {
	s.LibraryId = val
}

// SetMake sets the value of Make.
func (s *RandomSearchDto) SetMake(val OptString) {
	s.Make = val
}

// SetModel sets the value of Model.
func (s *RandomSearchDto) SetModel(val OptNilString) {
	s.Model = val
}

// SetPersonIds sets the value of PersonIds.
func (s *RandomSearchDto) SetPersonIds(val []uuid.UUID) {
	s.PersonIds = val
}

// SetRating sets the value of Rating.
func (s *RandomSearchDto) SetRating(val OptFloat64) {
	s.Rating = val
}

// SetSize sets the value of Size.
func (s *RandomSearchDto) SetSize(val OptFloat64) {
	s.Size = val
}

// SetState sets the value of State.
func (s *RandomSearchDto) SetState(val OptNilString) {
	s.State = val
}

// SetTagIds sets the value of TagIds.
func (s *RandomSearchDto) SetTagIds(val OptNilUUIDArray) {
	s.TagIds = val
}

// SetTakenAfter sets the value of TakenAfter.
func (s *RandomSearchDto) SetTakenAfter(val OptDateTime) {
	s.TakenAfter = val
}

// SetTakenBefore sets the value of TakenBefore.
func (s *RandomSearchDto) SetTakenBefore(val OptDateTime) {
	s.TakenBefore = val
}

// SetTrashedAfter sets the value of TrashedAfter.
func (s *RandomSearchDto) SetTrashedAfter(val OptDateTime) {
	s.TrashedAfter = val
}

// SetTrashedBefore sets the value of TrashedBefore.
func (s *RandomSearchDto) SetTrashedBefore(val OptDateTime) {
	s.TrashedBefore = val
}

// SetType sets the value of Type.
func (s *RandomSearchDto) SetType(val OptAssetTypeEnum) {
	s.Type = val
}

// SetUpdatedAfter sets the value of UpdatedAfter.
func (s *RandomSearchDto) SetUpdatedAfter(val OptDateTime) {
	s.UpdatedAfter = val
}

// SetUpdatedBefore sets the value of UpdatedBefore.
func (s *RandomSearchDto) SetUpdatedBefore(val OptDateTime) {
	s.UpdatedBefore = val
}

// SetVisibility sets the value of Visibility.
func (s *RandomSearchDto) SetVisibility(val OptAssetVisibility) {
	s.Visibility = val
}

// SetWithDeleted sets the value of WithDeleted.
func (s *RandomSearchDto) SetWithDeleted(val OptBool) {
	s.WithDeleted = val
}

// SetWithExif sets the value of WithExif.
func (s *RandomSearchDto) SetWithExif(val OptBool) {
	s.WithExif = val
}

// SetWithPeople sets the value of WithPeople.
func (s *RandomSearchDto) SetWithPeople(val OptBool) {
	s.WithPeople = val
}

// SetWithStacked sets the value of WithStacked.
func (s *RandomSearchDto) SetWithStacked(val OptBool) {
	s.WithStacked = val
}

// Ref: #/components/schemas/RatingsResponse
type RatingsResponse struct {
	Enabled bool `json:"enabled"`
}

// GetEnabled returns the value of Enabled.
func (s *RatingsResponse) GetEnabled() bool {
	return s.Enabled
}

// SetEnabled sets the value of Enabled.
func (s *RatingsResponse) SetEnabled(val bool) {
	s.Enabled = val
}

// Ref: #/components/schemas/RatingsUpdate
type RatingsUpdate struct {
	Enabled OptBool `json:"enabled"`
}

// GetEnabled returns the value of Enabled.
func (s *RatingsUpdate) GetEnabled() OptBool {
	return s.Enabled
}

// SetEnabled sets the value of Enabled.
func (s *RatingsUpdate) SetEnabled(val OptBool) {
	s.Enabled = val
}

// Ref: #/components/schemas/ReactionLevel
type ReactionLevel string

const (
	ReactionLevelAlbum ReactionLevel = "album"
	ReactionLevelAsset ReactionLevel = "asset"
)

// AllValues returns all ReactionLevel values.
func (ReactionLevel) AllValues() []ReactionLevel {
	return []ReactionLevel{
		ReactionLevelAlbum,
		ReactionLevelAsset,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s ReactionLevel) MarshalText() ([]byte, error) {
	switch s {
	case ReactionLevelAlbum:
		return []byte(s), nil
	case ReactionLevelAsset:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ReactionLevel) UnmarshalText(data []byte) error {
	switch ReactionLevel(data) {
	case ReactionLevelAlbum:
		*s = ReactionLevelAlbum
		return nil
	case ReactionLevelAsset:
		*s = ReactionLevelAsset
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/ReactionType
type ReactionType string

const (
	ReactionTypeComment ReactionType = "comment"
	ReactionTypeLike    ReactionType = "like"
)

// AllValues returns all ReactionType values.
func (ReactionType) AllValues() []ReactionType {
	return []ReactionType{
		ReactionTypeComment,
		ReactionTypeLike,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s ReactionType) MarshalText() ([]byte, error) {
	switch s {
	case ReactionTypeComment:
		return []byte(s), nil
	case ReactionTypeLike:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ReactionType) UnmarshalText(data []byte) error {
	switch ReactionType(data) {
	case ReactionTypeComment:
		*s = ReactionTypeComment
		return nil
	case ReactionTypeLike:
		*s = ReactionTypeLike
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// RedirectOAuthToMobileOK is response for RedirectOAuthToMobile operation.
type RedirectOAuthToMobileOK struct{}

// RemoveAssetFromStackNoContent is response for RemoveAssetFromStack operation.
type RemoveAssetFromStackNoContent struct{}

// RemovePartnerNoContent is response for RemovePartner operation.
type RemovePartnerNoContent struct{}

// RemoveSharedLinkNoContent is response for RemoveSharedLink operation.
type RemoveSharedLinkNoContent struct{}

// RemoveUserFromAlbumNoContent is response for RemoveUserFromAlbum operation.
type RemoveUserFromAlbumNoContent struct{}

// ResetPinCodeNoContent is response for ResetPinCode operation.
type ResetPinCodeNoContent struct{}

// Ref: #/components/schemas/ReverseGeocodingStateResponseDto
type ReverseGeocodingStateResponseDto struct {
	LastImportFileName NilString `json:"lastImportFileName"`
	LastUpdate         NilString `json:"lastUpdate"`
}

// GetLastImportFileName returns the value of LastImportFileName.
func (s *ReverseGeocodingStateResponseDto) GetLastImportFileName() NilString {
	return s.LastImportFileName
}

// GetLastUpdate returns the value of LastUpdate.
func (s *ReverseGeocodingStateResponseDto) GetLastUpdate() NilString {
	return s.LastUpdate
}

// SetLastImportFileName sets the value of LastImportFileName.
func (s *ReverseGeocodingStateResponseDto) SetLastImportFileName(val NilString) {
	s.LastImportFileName = val
}

// SetLastUpdate sets the value of LastUpdate.
func (s *ReverseGeocodingStateResponseDto) SetLastUpdate(val NilString) {
	s.LastUpdate = val
}

// RunAssetJobsNoContent is response for RunAssetJobs operation.
type RunAssetJobsNoContent struct{}

// ScanLibraryNoContent is response for ScanLibrary operation.
type ScanLibraryNoContent struct{}

// Ref: #/components/schemas/SearchAlbumResponseDto
type SearchAlbumResponseDto struct {
	Count  int                      `json:"count"`
	Facets []SearchFacetResponseDto `json:"facets"`
	Items  []AlbumResponseDto       `json:"items"`
	Total  int                      `json:"total"`
}

// GetCount returns the value of Count.
func (s *SearchAlbumResponseDto) GetCount() int {
	return s.Count
}

// GetFacets returns the value of Facets.
func (s *SearchAlbumResponseDto) GetFacets() []SearchFacetResponseDto {
	return s.Facets
}

// GetItems returns the value of Items.
func (s *SearchAlbumResponseDto) GetItems() []AlbumResponseDto {
	return s.Items
}

// GetTotal returns the value of Total.
func (s *SearchAlbumResponseDto) GetTotal() int {
	return s.Total
}

// SetCount sets the value of Count.
func (s *SearchAlbumResponseDto) SetCount(val int) {
	s.Count = val
}

// SetFacets sets the value of Facets.
func (s *SearchAlbumResponseDto) SetFacets(val []SearchFacetResponseDto) {
	s.Facets = val
}

// SetItems sets the value of Items.
func (s *SearchAlbumResponseDto) SetItems(val []AlbumResponseDto) {
	s.Items = val
}

// SetTotal sets the value of Total.
func (s *SearchAlbumResponseDto) SetTotal(val int) {
	s.Total = val
}

// Ref: #/components/schemas/SearchAssetResponseDto
type SearchAssetResponseDto struct {
	Count    int                      `json:"count"`
	Facets   []SearchFacetResponseDto `json:"facets"`
	Items    []AssetResponseDto       `json:"items"`
	NextPage NilString                `json:"nextPage"`
	Total    int                      `json:"total"`
}

// GetCount returns the value of Count.
func (s *SearchAssetResponseDto) GetCount() int {
	return s.Count
}

// GetFacets returns the value of Facets.
func (s *SearchAssetResponseDto) GetFacets() []SearchFacetResponseDto {
	return s.Facets
}

// GetItems returns the value of Items.
func (s *SearchAssetResponseDto) GetItems() []AssetResponseDto {
	return s.Items
}

// GetNextPage returns the value of NextPage.
func (s *SearchAssetResponseDto) GetNextPage() NilString {
	return s.NextPage
}

// GetTotal returns the value of Total.
func (s *SearchAssetResponseDto) GetTotal() int {
	return s.Total
}

// SetCount sets the value of Count.
func (s *SearchAssetResponseDto) SetCount(val int) {
	s.Count = val
}

// SetFacets sets the value of Facets.
func (s *SearchAssetResponseDto) SetFacets(val []SearchFacetResponseDto) {
	s.Facets = val
}

// SetItems sets the value of Items.
func (s *SearchAssetResponseDto) SetItems(val []AssetResponseDto) {
	s.Items = val
}

// SetNextPage sets the value of NextPage.
func (s *SearchAssetResponseDto) SetNextPage(val NilString) {
	s.NextPage = val
}

// SetTotal sets the value of Total.
func (s *SearchAssetResponseDto) SetTotal(val int) {
	s.Total = val
}

// Ref: #/components/schemas/SearchExploreItem
type SearchExploreItem struct {
	Data  AssetResponseDto `json:"data"`
	Value string           `json:"value"`
}

// GetData returns the value of Data.
func (s *SearchExploreItem) GetData() AssetResponseDto {
	return s.Data
}

// GetValue returns the value of Value.
func (s *SearchExploreItem) GetValue() string {
	return s.Value
}

// SetData sets the value of Data.
func (s *SearchExploreItem) SetData(val AssetResponseDto) {
	s.Data = val
}

// SetValue sets the value of Value.
func (s *SearchExploreItem) SetValue(val string) {
	s.Value = val
}

// Ref: #/components/schemas/SearchExploreResponseDto
type SearchExploreResponseDto struct {
	FieldName string              `json:"fieldName"`
	Items     []SearchExploreItem `json:"items"`
}

// GetFieldName returns the value of FieldName.
func (s *SearchExploreResponseDto) GetFieldName() string {
	return s.FieldName
}

// GetItems returns the value of Items.
func (s *SearchExploreResponseDto) GetItems() []SearchExploreItem {
	return s.Items
}

// SetFieldName sets the value of FieldName.
func (s *SearchExploreResponseDto) SetFieldName(val string) {
	s.FieldName = val
}

// SetItems sets the value of Items.
func (s *SearchExploreResponseDto) SetItems(val []SearchExploreItem) {
	s.Items = val
}

// Ref: #/components/schemas/SearchFacetCountResponseDto
type SearchFacetCountResponseDto struct {
	Count int    `json:"count"`
	Value string `json:"value"`
}

// GetCount returns the value of Count.
func (s *SearchFacetCountResponseDto) GetCount() int {
	return s.Count
}

// GetValue returns the value of Value.
func (s *SearchFacetCountResponseDto) GetValue() string {
	return s.Value
}

// SetCount sets the value of Count.
func (s *SearchFacetCountResponseDto) SetCount(val int) {
	s.Count = val
}

// SetValue sets the value of Value.
func (s *SearchFacetCountResponseDto) SetValue(val string) {
	s.Value = val
}

// Ref: #/components/schemas/SearchFacetResponseDto
type SearchFacetResponseDto struct {
	Counts    []SearchFacetCountResponseDto `json:"counts"`
	FieldName string                        `json:"fieldName"`
}

// GetCounts returns the value of Counts.
func (s *SearchFacetResponseDto) GetCounts() []SearchFacetCountResponseDto {
	return s.Counts
}

// GetFieldName returns the value of FieldName.
func (s *SearchFacetResponseDto) GetFieldName() string {
	return s.FieldName
}

// SetCounts sets the value of Counts.
func (s *SearchFacetResponseDto) SetCounts(val []SearchFacetCountResponseDto) {
	s.Counts = val
}

// SetFieldName sets the value of FieldName.
func (s *SearchFacetResponseDto) SetFieldName(val string) {
	s.FieldName = val
}

// Ref: #/components/schemas/SearchResponseDto
type SearchResponseDto struct {
	Albums SearchAlbumResponseDto `json:"albums"`
	Assets SearchAssetResponseDto `json:"assets"`
}

// GetAlbums returns the value of Albums.
func (s *SearchResponseDto) GetAlbums() SearchAlbumResponseDto {
	return s.Albums
}

// GetAssets returns the value of Assets.
func (s *SearchResponseDto) GetAssets() SearchAssetResponseDto {
	return s.Assets
}

// SetAlbums sets the value of Albums.
func (s *SearchResponseDto) SetAlbums(val SearchAlbumResponseDto) {
	s.Albums = val
}

// SetAssets sets the value of Assets.
func (s *SearchResponseDto) SetAssets(val SearchAssetResponseDto) {
	s.Assets = val
}

// Ref: #/components/schemas/SearchStatisticsResponseDto
type SearchStatisticsResponseDto struct {
	Total int `json:"total"`
}

// GetTotal returns the value of Total.
func (s *SearchStatisticsResponseDto) GetTotal() int {
	return s.Total
}

// SetTotal sets the value of Total.
func (s *SearchStatisticsResponseDto) SetTotal(val int) {
	s.Total = val
}

// Ref: #/components/schemas/SearchSuggestionType
type SearchSuggestionType string

const (
	SearchSuggestionTypeCountry     SearchSuggestionType = "country"
	SearchSuggestionTypeState       SearchSuggestionType = "state"
	SearchSuggestionTypeCity        SearchSuggestionType = "city"
	SearchSuggestionTypeCameraMake  SearchSuggestionType = "camera-make"
	SearchSuggestionTypeCameraModel SearchSuggestionType = "camera-model"
)

// AllValues returns all SearchSuggestionType values.
func (SearchSuggestionType) AllValues() []SearchSuggestionType {
	return []SearchSuggestionType{
		SearchSuggestionTypeCountry,
		SearchSuggestionTypeState,
		SearchSuggestionTypeCity,
		SearchSuggestionTypeCameraMake,
		SearchSuggestionTypeCameraModel,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s SearchSuggestionType) MarshalText() ([]byte, error) {
	switch s {
	case SearchSuggestionTypeCountry:
		return []byte(s), nil
	case SearchSuggestionTypeState:
		return []byte(s), nil
	case SearchSuggestionTypeCity:
		return []byte(s), nil
	case SearchSuggestionTypeCameraMake:
		return []byte(s), nil
	case SearchSuggestionTypeCameraModel:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *SearchSuggestionType) UnmarshalText(data []byte) error {
	switch SearchSuggestionType(data) {
	case SearchSuggestionTypeCountry:
		*s = SearchSuggestionTypeCountry
		return nil
	case SearchSuggestionTypeState:
		*s = SearchSuggestionTypeState
		return nil
	case SearchSuggestionTypeCity:
		*s = SearchSuggestionTypeCity
		return nil
	case SearchSuggestionTypeCameraMake:
		*s = SearchSuggestionTypeCameraMake
		return nil
	case SearchSuggestionTypeCameraModel:
		*s = SearchSuggestionTypeCameraModel
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// SendSyncAckNoContent is response for SendSyncAck operation.
type SendSyncAckNoContent struct{}

// Ref: #/components/schemas/ServerAboutResponseDto
type ServerAboutResponseDto struct {
	Build                      OptString `json:"build"`
	BuildImage                 OptString `json:"buildImage"`
	BuildImageUrl              OptString `json:"buildImageUrl"`
	BuildUrl                   OptString `json:"buildUrl"`
	Exiftool                   OptString `json:"exiftool"`
	Ffmpeg                     OptString `json:"ffmpeg"`
	Imagemagick                OptString `json:"imagemagick"`
	Libvips                    OptString `json:"libvips"`
	Licensed                   bool      `json:"licensed"`
	Nodejs                     OptString `json:"nodejs"`
	Repository                 OptString `json:"repository"`
	RepositoryUrl              OptString `json:"repositoryUrl"`
	SourceCommit               OptString `json:"sourceCommit"`
	SourceRef                  OptString `json:"sourceRef"`
	SourceUrl                  OptString `json:"sourceUrl"`
	ThirdPartyBugFeatureUrl    OptString `json:"thirdPartyBugFeatureUrl"`
	ThirdPartyDocumentationUrl OptString `json:"thirdPartyDocumentationUrl"`
	ThirdPartySourceUrl        OptString `json:"thirdPartySourceUrl"`
	ThirdPartySupportUrl       OptString `json:"thirdPartySupportUrl"`
	Version                    string    `json:"version"`
	VersionUrl                 string    `json:"versionUrl"`
}

// GetBuild returns the value of Build.
func (s *ServerAboutResponseDto) GetBuild() OptString {
	return s.Build
}

// GetBuildImage returns the value of BuildImage.
func (s *ServerAboutResponseDto) GetBuildImage() OptString {
	return s.BuildImage
}

// GetBuildImageUrl returns the value of BuildImageUrl.
func (s *ServerAboutResponseDto) GetBuildImageUrl() OptString {
	return s.BuildImageUrl
}

// GetBuildUrl returns the value of BuildUrl.
func (s *ServerAboutResponseDto) GetBuildUrl() OptString {
	return s.BuildUrl
}

// GetExiftool returns the value of Exiftool.
func (s *ServerAboutResponseDto) GetExiftool() OptString {
	return s.Exiftool
}

// GetFfmpeg returns the value of Ffmpeg.
func (s *ServerAboutResponseDto) GetFfmpeg() OptString {
	return s.Ffmpeg
}

// GetImagemagick returns the value of Imagemagick.
func (s *ServerAboutResponseDto) GetImagemagick() OptString {
	return s.Imagemagick
}

// GetLibvips returns the value of Libvips.
func (s *ServerAboutResponseDto) GetLibvips() OptString {
	return s.Libvips
}

// GetLicensed returns the value of Licensed.
func (s *ServerAboutResponseDto) GetLicensed() bool {
	return s.Licensed
}

// GetNodejs returns the value of Nodejs.
func (s *ServerAboutResponseDto) GetNodejs() OptString {
	return s.Nodejs
}

// GetRepository returns the value of Repository.
func (s *ServerAboutResponseDto) GetRepository() OptString {
	return s.Repository
}

// GetRepositoryUrl returns the value of RepositoryUrl.
func (s *ServerAboutResponseDto) GetRepositoryUrl() OptString {
	return s.RepositoryUrl
}

// GetSourceCommit returns the value of SourceCommit.
func (s *ServerAboutResponseDto) GetSourceCommit() OptString {
	return s.SourceCommit
}

// GetSourceRef returns the value of SourceRef.
func (s *ServerAboutResponseDto) GetSourceRef() OptString {
	return s.SourceRef
}

// GetSourceUrl returns the value of SourceUrl.
func (s *ServerAboutResponseDto) GetSourceUrl() OptString {
	return s.SourceUrl
}

// GetThirdPartyBugFeatureUrl returns the value of ThirdPartyBugFeatureUrl.
func (s *ServerAboutResponseDto) GetThirdPartyBugFeatureUrl() OptString {
	return s.ThirdPartyBugFeatureUrl
}

// GetThirdPartyDocumentationUrl returns the value of ThirdPartyDocumentationUrl.
func (s *ServerAboutResponseDto) GetThirdPartyDocumentationUrl() OptString {
	return s.ThirdPartyDocumentationUrl
}

// GetThirdPartySourceUrl returns the value of ThirdPartySourceUrl.
func (s *ServerAboutResponseDto) GetThirdPartySourceUrl() OptString {
	return s.ThirdPartySourceUrl
}

// GetThirdPartySupportUrl returns the value of ThirdPartySupportUrl.
func (s *ServerAboutResponseDto) GetThirdPartySupportUrl() OptString {
	return s.ThirdPartySupportUrl
}

// GetVersion returns the value of Version.
func (s *ServerAboutResponseDto) GetVersion() string {
	return s.Version
}

// GetVersionUrl returns the value of VersionUrl.
func (s *ServerAboutResponseDto) GetVersionUrl() string {
	return s.VersionUrl
}

// SetBuild sets the value of Build.
func (s *ServerAboutResponseDto) SetBuild(val OptString) {
	s.Build = val
}

// SetBuildImage sets the value of BuildImage.
func (s *ServerAboutResponseDto) SetBuildImage(val OptString) {
	s.BuildImage = val
}

// SetBuildImageUrl sets the value of BuildImageUrl.
func (s *ServerAboutResponseDto) SetBuildImageUrl(val OptString) {
	s.BuildImageUrl = val
}

// SetBuildUrl sets the value of BuildUrl.
func (s *ServerAboutResponseDto) SetBuildUrl(val OptString) {
	s.BuildUrl = val
}

// SetExiftool sets the value of Exiftool.
func (s *ServerAboutResponseDto) SetExiftool(val OptString) {
	s.Exiftool = val
}

// SetFfmpeg sets the value of Ffmpeg.
func (s *ServerAboutResponseDto) SetFfmpeg(val OptString) {
	s.Ffmpeg = val
}

// SetImagemagick sets the value of Imagemagick.
func (s *ServerAboutResponseDto) SetImagemagick(val OptString) {
	s.Imagemagick = val
}

// SetLibvips sets the value of Libvips.
func (s *ServerAboutResponseDto) SetLibvips(val OptString) {
	s.Libvips = val
}

// SetLicensed sets the value of Licensed.
func (s *ServerAboutResponseDto) SetLicensed(val bool) {
	s.Licensed = val
}

// SetNodejs sets the value of Nodejs.
func (s *ServerAboutResponseDto) SetNodejs(val OptString) {
	s.Nodejs = val
}

// SetRepository sets the value of Repository.
func (s *ServerAboutResponseDto) SetRepository(val OptString) {
	s.Repository = val
}

// SetRepositoryUrl sets the value of RepositoryUrl.
func (s *ServerAboutResponseDto) SetRepositoryUrl(val OptString) {
	s.RepositoryUrl = val
}

// SetSourceCommit sets the value of SourceCommit.
func (s *ServerAboutResponseDto) SetSourceCommit(val OptString) {
	s.SourceCommit = val
}

// SetSourceRef sets the value of SourceRef.
func (s *ServerAboutResponseDto) SetSourceRef(val OptString) {
	s.SourceRef = val
}

// SetSourceUrl sets the value of SourceUrl.
func (s *ServerAboutResponseDto) SetSourceUrl(val OptString) {
	s.SourceUrl = val
}

// SetThirdPartyBugFeatureUrl sets the value of ThirdPartyBugFeatureUrl.
func (s *ServerAboutResponseDto) SetThirdPartyBugFeatureUrl(val OptString) {
	s.ThirdPartyBugFeatureUrl = val
}

// SetThirdPartyDocumentationUrl sets the value of ThirdPartyDocumentationUrl.
func (s *ServerAboutResponseDto) SetThirdPartyDocumentationUrl(val OptString) {
	s.ThirdPartyDocumentationUrl = val
}

// SetThirdPartySourceUrl sets the value of ThirdPartySourceUrl.
func (s *ServerAboutResponseDto) SetThirdPartySourceUrl(val OptString) {
	s.ThirdPartySourceUrl = val
}

// SetThirdPartySupportUrl sets the value of ThirdPartySupportUrl.
func (s *ServerAboutResponseDto) SetThirdPartySupportUrl(val OptString) {
	s.ThirdPartySupportUrl = val
}

// SetVersion sets the value of Version.
func (s *ServerAboutResponseDto) SetVersion(val string) {
	s.Version = val
}

// SetVersionUrl sets the value of VersionUrl.
func (s *ServerAboutResponseDto) SetVersionUrl(val string) {
	s.VersionUrl = val
}

// Ref: #/components/schemas/ServerApkLinksDto
type ServerApkLinksDto struct {
	Arm64v8a   string `json:"arm64v8a"`
	Armeabiv7a string `json:"armeabiv7a"`
	Universal  string `json:"universal"`
	X8664      string `json:"x86_64"`
}

// GetArm64v8a returns the value of Arm64v8a.
func (s *ServerApkLinksDto) GetArm64v8a() string {
	return s.Arm64v8a
}

// GetArmeabiv7a returns the value of Armeabiv7a.
func (s *ServerApkLinksDto) GetArmeabiv7a() string {
	return s.Armeabiv7a
}

// GetUniversal returns the value of Universal.
func (s *ServerApkLinksDto) GetUniversal() string {
	return s.Universal
}

// GetX8664 returns the value of X8664.
func (s *ServerApkLinksDto) GetX8664() string {
	return s.X8664
}

// SetArm64v8a sets the value of Arm64v8a.
func (s *ServerApkLinksDto) SetArm64v8a(val string) {
	s.Arm64v8a = val
}

// SetArmeabiv7a sets the value of Armeabiv7a.
func (s *ServerApkLinksDto) SetArmeabiv7a(val string) {
	s.Armeabiv7a = val
}

// SetUniversal sets the value of Universal.
func (s *ServerApkLinksDto) SetUniversal(val string) {
	s.Universal = val
}

// SetX8664 sets the value of X8664.
func (s *ServerApkLinksDto) SetX8664(val string) {
	s.X8664 = val
}

// Ref: #/components/schemas/ServerConfigDto
type ServerConfigDto struct {
	ExternalDomain   string `json:"externalDomain"`
	IsInitialized    bool   `json:"isInitialized"`
	IsOnboarded      bool   `json:"isOnboarded"`
	LoginPageMessage string `json:"loginPageMessage"`
	MapDarkStyleUrl  string `json:"mapDarkStyleUrl"`
	MapLightStyleUrl string `json:"mapLightStyleUrl"`
	OauthButtonText  string `json:"oauthButtonText"`
	PublicUsers      bool   `json:"publicUsers"`
	TrashDays        int    `json:"trashDays"`
	UserDeleteDelay  int    `json:"userDeleteDelay"`
}

// GetExternalDomain returns the value of ExternalDomain.
func (s *ServerConfigDto) GetExternalDomain() string {
	return s.ExternalDomain
}

// GetIsInitialized returns the value of IsInitialized.
func (s *ServerConfigDto) GetIsInitialized() bool {
	return s.IsInitialized
}

// GetIsOnboarded returns the value of IsOnboarded.
func (s *ServerConfigDto) GetIsOnboarded() bool {
	return s.IsOnboarded
}

// GetLoginPageMessage returns the value of LoginPageMessage.
func (s *ServerConfigDto) GetLoginPageMessage() string {
	return s.LoginPageMessage
}

// GetMapDarkStyleUrl returns the value of MapDarkStyleUrl.
func (s *ServerConfigDto) GetMapDarkStyleUrl() string {
	return s.MapDarkStyleUrl
}

// GetMapLightStyleUrl returns the value of MapLightStyleUrl.
func (s *ServerConfigDto) GetMapLightStyleUrl() string {
	return s.MapLightStyleUrl
}

// GetOauthButtonText returns the value of OauthButtonText.
func (s *ServerConfigDto) GetOauthButtonText() string {
	return s.OauthButtonText
}

// GetPublicUsers returns the value of PublicUsers.
func (s *ServerConfigDto) GetPublicUsers() bool {
	return s.PublicUsers
}

// GetTrashDays returns the value of TrashDays.
func (s *ServerConfigDto) GetTrashDays() int {
	return s.TrashDays
}

// GetUserDeleteDelay returns the value of UserDeleteDelay.
func (s *ServerConfigDto) GetUserDeleteDelay() int {
	return s.UserDeleteDelay
}

// SetExternalDomain sets the value of ExternalDomain.
func (s *ServerConfigDto) SetExternalDomain(val string) {
	s.ExternalDomain = val
}

// SetIsInitialized sets the value of IsInitialized.
func (s *ServerConfigDto) SetIsInitialized(val bool) {
	s.IsInitialized = val
}

// SetIsOnboarded sets the value of IsOnboarded.
func (s *ServerConfigDto) SetIsOnboarded(val bool) {
	s.IsOnboarded = val
}

// SetLoginPageMessage sets the value of LoginPageMessage.
func (s *ServerConfigDto) SetLoginPageMessage(val string) {
	s.LoginPageMessage = val
}

// SetMapDarkStyleUrl sets the value of MapDarkStyleUrl.
func (s *ServerConfigDto) SetMapDarkStyleUrl(val string) {
	s.MapDarkStyleUrl = val
}

// SetMapLightStyleUrl sets the value of MapLightStyleUrl.
func (s *ServerConfigDto) SetMapLightStyleUrl(val string) {
	s.MapLightStyleUrl = val
}

// SetOauthButtonText sets the value of OauthButtonText.
func (s *ServerConfigDto) SetOauthButtonText(val string) {
	s.OauthButtonText = val
}

// SetPublicUsers sets the value of PublicUsers.
func (s *ServerConfigDto) SetPublicUsers(val bool) {
	s.PublicUsers = val
}

// SetTrashDays sets the value of TrashDays.
func (s *ServerConfigDto) SetTrashDays(val int) {
	s.TrashDays = val
}

// SetUserDeleteDelay sets the value of UserDeleteDelay.
func (s *ServerConfigDto) SetUserDeleteDelay(val int) {
	s.UserDeleteDelay = val
}

// Ref: #/components/schemas/ServerFeaturesDto
type ServerFeaturesDto struct {
	ConfigFile         bool `json:"configFile"`
	DuplicateDetection bool `json:"duplicateDetection"`
	Email              bool `json:"email"`
	FacialRecognition  bool `json:"facialRecognition"`
	ImportFaces        bool `json:"importFaces"`
	Map                bool `json:"map"`
	OAuth              bool `json:"oauth"`
	OauthAutoLaunch    bool `json:"oauthAutoLaunch"`
	PasswordLogin      bool `json:"passwordLogin"`
	ReverseGeocoding   bool `json:"reverseGeocoding"`
	Search             bool `json:"search"`
	Sidecar            bool `json:"sidecar"`
	SmartSearch        bool `json:"smartSearch"`
	Trash              bool `json:"trash"`
}

// GetConfigFile returns the value of ConfigFile.
func (s *ServerFeaturesDto) GetConfigFile() bool {
	return s.ConfigFile
}

// GetDuplicateDetection returns the value of DuplicateDetection.
func (s *ServerFeaturesDto) GetDuplicateDetection() bool {
	return s.DuplicateDetection
}

// GetEmail returns the value of Email.
func (s *ServerFeaturesDto) GetEmail() bool {
	return s.Email
}

// GetFacialRecognition returns the value of FacialRecognition.
func (s *ServerFeaturesDto) GetFacialRecognition() bool {
	return s.FacialRecognition
}

// GetImportFaces returns the value of ImportFaces.
func (s *ServerFeaturesDto) GetImportFaces() bool {
	return s.ImportFaces
}

// GetMap returns the value of Map.
func (s *ServerFeaturesDto) GetMap() bool {
	return s.Map
}

// GetOAuth returns the value of OAuth.
func (s *ServerFeaturesDto) GetOAuth() bool {
	return s.OAuth
}

// GetOauthAutoLaunch returns the value of OauthAutoLaunch.
func (s *ServerFeaturesDto) GetOauthAutoLaunch() bool {
	return s.OauthAutoLaunch
}

// GetPasswordLogin returns the value of PasswordLogin.
func (s *ServerFeaturesDto) GetPasswordLogin() bool {
	return s.PasswordLogin
}

// GetReverseGeocoding returns the value of ReverseGeocoding.
func (s *ServerFeaturesDto) GetReverseGeocoding() bool {
	return s.ReverseGeocoding
}

// GetSearch returns the value of Search.
func (s *ServerFeaturesDto) GetSearch() bool {
	return s.Search
}

// GetSidecar returns the value of Sidecar.
func (s *ServerFeaturesDto) GetSidecar() bool {
	return s.Sidecar
}

// GetSmartSearch returns the value of SmartSearch.
func (s *ServerFeaturesDto) GetSmartSearch() bool {
	return s.SmartSearch
}

// GetTrash returns the value of Trash.
func (s *ServerFeaturesDto) GetTrash() bool {
	return s.Trash
}

// SetConfigFile sets the value of ConfigFile.
func (s *ServerFeaturesDto) SetConfigFile(val bool) {
	s.ConfigFile = val
}

// SetDuplicateDetection sets the value of DuplicateDetection.
func (s *ServerFeaturesDto) SetDuplicateDetection(val bool) {
	s.DuplicateDetection = val
}

// SetEmail sets the value of Email.
func (s *ServerFeaturesDto) SetEmail(val bool) {
	s.Email = val
}

// SetFacialRecognition sets the value of FacialRecognition.
func (s *ServerFeaturesDto) SetFacialRecognition(val bool) {
	s.FacialRecognition = val
}

// SetImportFaces sets the value of ImportFaces.
func (s *ServerFeaturesDto) SetImportFaces(val bool) {
	s.ImportFaces = val
}

// SetMap sets the value of Map.
func (s *ServerFeaturesDto) SetMap(val bool) {
	s.Map = val
}

// SetOAuth sets the value of OAuth.
func (s *ServerFeaturesDto) SetOAuth(val bool) {
	s.OAuth = val
}

// SetOauthAutoLaunch sets the value of OauthAutoLaunch.
func (s *ServerFeaturesDto) SetOauthAutoLaunch(val bool) {
	s.OauthAutoLaunch = val
}

// SetPasswordLogin sets the value of PasswordLogin.
func (s *ServerFeaturesDto) SetPasswordLogin(val bool) {
	s.PasswordLogin = val
}

// SetReverseGeocoding sets the value of ReverseGeocoding.
func (s *ServerFeaturesDto) SetReverseGeocoding(val bool) {
	s.ReverseGeocoding = val
}

// SetSearch sets the value of Search.
func (s *ServerFeaturesDto) SetSearch(val bool) {
	s.Search = val
}

// SetSidecar sets the value of Sidecar.
func (s *ServerFeaturesDto) SetSidecar(val bool) {
	s.Sidecar = val
}

// SetSmartSearch sets the value of SmartSearch.
func (s *ServerFeaturesDto) SetSmartSearch(val bool) {
	s.SmartSearch = val
}

// SetTrash sets the value of Trash.
func (s *ServerFeaturesDto) SetTrash(val bool) {
	s.Trash = val
}

// Ref: #/components/schemas/ServerMediaTypesResponseDto
type ServerMediaTypesResponseDto struct {
	Image   []string `json:"image"`
	Sidecar []string `json:"sidecar"`
	Video   []string `json:"video"`
}

// GetImage returns the value of Image.
func (s *ServerMediaTypesResponseDto) GetImage() []string {
	return s.Image
}

// GetSidecar returns the value of Sidecar.
func (s *ServerMediaTypesResponseDto) GetSidecar() []string {
	return s.Sidecar
}

// GetVideo returns the value of Video.
func (s *ServerMediaTypesResponseDto) GetVideo() []string {
	return s.Video
}

// SetImage sets the value of Image.
func (s *ServerMediaTypesResponseDto) SetImage(val []string) {
	s.Image = val
}

// SetSidecar sets the value of Sidecar.
func (s *ServerMediaTypesResponseDto) SetSidecar(val []string) {
	s.Sidecar = val
}

// SetVideo sets the value of Video.
func (s *ServerMediaTypesResponseDto) SetVideo(val []string) {
	s.Video = val
}

// Ref: #/components/schemas/ServerPingResponse
type ServerPingResponse struct {
	Res string `json:"res"`
}

// GetRes returns the value of Res.
func (s *ServerPingResponse) GetRes() string {
	return s.Res
}

// SetRes sets the value of Res.
func (s *ServerPingResponse) SetRes(val string) {
	s.Res = val
}

// Ref: #/components/schemas/ServerStatsResponseDto
type ServerStatsResponseDto struct {
	Photos      int              `json:"photos"`
	Usage       int64            `json:"usage"`
	UsageByUser []UsageByUserDto `json:"usageByUser"`
	UsagePhotos int64            `json:"usagePhotos"`
	UsageVideos int64            `json:"usageVideos"`
	Videos      int              `json:"videos"`
}

// GetPhotos returns the value of Photos.
func (s *ServerStatsResponseDto) GetPhotos() int {
	return s.Photos
}

// GetUsage returns the value of Usage.
func (s *ServerStatsResponseDto) GetUsage() int64 {
	return s.Usage
}

// GetUsageByUser returns the value of UsageByUser.
func (s *ServerStatsResponseDto) GetUsageByUser() []UsageByUserDto {
	return s.UsageByUser
}

// GetUsagePhotos returns the value of UsagePhotos.
func (s *ServerStatsResponseDto) GetUsagePhotos() int64 {
	return s.UsagePhotos
}

// GetUsageVideos returns the value of UsageVideos.
func (s *ServerStatsResponseDto) GetUsageVideos() int64 {
	return s.UsageVideos
}

// GetVideos returns the value of Videos.
func (s *ServerStatsResponseDto) GetVideos() int {
	return s.Videos
}

// SetPhotos sets the value of Photos.
func (s *ServerStatsResponseDto) SetPhotos(val int) {
	s.Photos = val
}

// SetUsage sets the value of Usage.
func (s *ServerStatsResponseDto) SetUsage(val int64) {
	s.Usage = val
}

// SetUsageByUser sets the value of UsageByUser.
func (s *ServerStatsResponseDto) SetUsageByUser(val []UsageByUserDto) {
	s.UsageByUser = val
}

// SetUsagePhotos sets the value of UsagePhotos.
func (s *ServerStatsResponseDto) SetUsagePhotos(val int64) {
	s.UsagePhotos = val
}

// SetUsageVideos sets the value of UsageVideos.
func (s *ServerStatsResponseDto) SetUsageVideos(val int64) {
	s.UsageVideos = val
}

// SetVideos sets the value of Videos.
func (s *ServerStatsResponseDto) SetVideos(val int) {
	s.Videos = val
}

// Ref: #/components/schemas/ServerStorageResponseDto
type ServerStorageResponseDto struct {
	DiskAvailable       string  `json:"diskAvailable"`
	DiskAvailableRaw    int64   `json:"diskAvailableRaw"`
	DiskSize            string  `json:"diskSize"`
	DiskSizeRaw         int64   `json:"diskSizeRaw"`
	DiskUsagePercentage float64 `json:"diskUsagePercentage"`
	DiskUse             string  `json:"diskUse"`
	DiskUseRaw          int64   `json:"diskUseRaw"`
}

// GetDiskAvailable returns the value of DiskAvailable.
func (s *ServerStorageResponseDto) GetDiskAvailable() string {
	return s.DiskAvailable
}

// GetDiskAvailableRaw returns the value of DiskAvailableRaw.
func (s *ServerStorageResponseDto) GetDiskAvailableRaw() int64 {
	return s.DiskAvailableRaw
}

// GetDiskSize returns the value of DiskSize.
func (s *ServerStorageResponseDto) GetDiskSize() string {
	return s.DiskSize
}

// GetDiskSizeRaw returns the value of DiskSizeRaw.
func (s *ServerStorageResponseDto) GetDiskSizeRaw() int64 {
	return s.DiskSizeRaw
}

// GetDiskUsagePercentage returns the value of DiskUsagePercentage.
func (s *ServerStorageResponseDto) GetDiskUsagePercentage() float64 {
	return s.DiskUsagePercentage
}

// GetDiskUse returns the value of DiskUse.
func (s *ServerStorageResponseDto) GetDiskUse() string {
	return s.DiskUse
}

// GetDiskUseRaw returns the value of DiskUseRaw.
func (s *ServerStorageResponseDto) GetDiskUseRaw() int64 {
	return s.DiskUseRaw
}

// SetDiskAvailable sets the value of DiskAvailable.
func (s *ServerStorageResponseDto) SetDiskAvailable(val string) {
	s.DiskAvailable = val
}

// SetDiskAvailableRaw sets the value of DiskAvailableRaw.
func (s *ServerStorageResponseDto) SetDiskAvailableRaw(val int64) {
	s.DiskAvailableRaw = val
}

// SetDiskSize sets the value of DiskSize.
func (s *ServerStorageResponseDto) SetDiskSize(val string) {
	s.DiskSize = val
}

// SetDiskSizeRaw sets the value of DiskSizeRaw.
func (s *ServerStorageResponseDto) SetDiskSizeRaw(val int64) {
	s.DiskSizeRaw = val
}

// SetDiskUsagePercentage sets the value of DiskUsagePercentage.
func (s *ServerStorageResponseDto) SetDiskUsagePercentage(val float64) {
	s.DiskUsagePercentage = val
}

// SetDiskUse sets the value of DiskUse.
func (s *ServerStorageResponseDto) SetDiskUse(val string) {
	s.DiskUse = val
}

// SetDiskUseRaw sets the value of DiskUseRaw.
func (s *ServerStorageResponseDto) SetDiskUseRaw(val int64) {
	s.DiskUseRaw = val
}

// Ref: #/components/schemas/ServerThemeDto
type ServerThemeDto struct {
	CustomCss string `json:"customCss"`
}

// GetCustomCss returns the value of CustomCss.
func (s *ServerThemeDto) GetCustomCss() string {
	return s.CustomCss
}

// SetCustomCss sets the value of CustomCss.
func (s *ServerThemeDto) SetCustomCss(val string) {
	s.CustomCss = val
}

// Ref: #/components/schemas/ServerVersionHistoryResponseDto
type ServerVersionHistoryResponseDto struct {
	CreatedAt time.Time `json:"createdAt"`
	ID        string    `json:"id"`
	Version   string    `json:"version"`
}

// GetCreatedAt returns the value of CreatedAt.
func (s *ServerVersionHistoryResponseDto) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetID returns the value of ID.
func (s *ServerVersionHistoryResponseDto) GetID() string {
	return s.ID
}

// GetVersion returns the value of Version.
func (s *ServerVersionHistoryResponseDto) GetVersion() string {
	return s.Version
}

// SetCreatedAt sets the value of CreatedAt.
func (s *ServerVersionHistoryResponseDto) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetID sets the value of ID.
func (s *ServerVersionHistoryResponseDto) SetID(val string) {
	s.ID = val
}

// SetVersion sets the value of Version.
func (s *ServerVersionHistoryResponseDto) SetVersion(val string) {
	s.Version = val
}

// Ref: #/components/schemas/ServerVersionResponseDto
type ServerVersionResponseDto struct {
	Major int `json:"major"`
	Minor int `json:"minor"`
	Patch int `json:"patch"`
}

// GetMajor returns the value of Major.
func (s *ServerVersionResponseDto) GetMajor() int {
	return s.Major
}

// GetMinor returns the value of Minor.
func (s *ServerVersionResponseDto) GetMinor() int {
	return s.Minor
}

// GetPatch returns the value of Patch.
func (s *ServerVersionResponseDto) GetPatch() int {
	return s.Patch
}

// SetMajor sets the value of Major.
func (s *ServerVersionResponseDto) SetMajor(val int) {
	s.Major = val
}

// SetMinor sets the value of Minor.
func (s *ServerVersionResponseDto) SetMinor(val int) {
	s.Minor = val
}

// SetPatch sets the value of Patch.
func (s *ServerVersionResponseDto) SetPatch(val int) {
	s.Patch = val
}

// Ref: #/components/schemas/SessionCreateDto
type SessionCreateDto struct {
	DeviceOS   OptString `json:"deviceOS"`
	DeviceType OptString `json:"deviceType"`
	// Session duration, in seconds.
	Duration OptFloat64 `json:"duration"`
}

// GetDeviceOS returns the value of DeviceOS.
func (s *SessionCreateDto) GetDeviceOS() OptString {
	return s.DeviceOS
}

// GetDeviceType returns the value of DeviceType.
func (s *SessionCreateDto) GetDeviceType() OptString {
	return s.DeviceType
}

// GetDuration returns the value of Duration.
func (s *SessionCreateDto) GetDuration() OptFloat64 {
	return s.Duration
}

// SetDeviceOS sets the value of DeviceOS.
func (s *SessionCreateDto) SetDeviceOS(val OptString) {
	s.DeviceOS = val
}

// SetDeviceType sets the value of DeviceType.
func (s *SessionCreateDto) SetDeviceType(val OptString) {
	s.DeviceType = val
}

// SetDuration sets the value of Duration.
func (s *SessionCreateDto) SetDuration(val OptFloat64) {
	s.Duration = val
}

// Ref: #/components/schemas/SessionCreateResponseDto
type SessionCreateResponseDto struct {
	CreatedAt          string    `json:"createdAt"`
	Current            bool      `json:"current"`
	DeviceOS           string    `json:"deviceOS"`
	DeviceType         string    `json:"deviceType"`
	ExpiresAt          OptString `json:"expiresAt"`
	ID                 string    `json:"id"`
	IsPendingSyncReset bool      `json:"isPendingSyncReset"`
	Token              string    `json:"token"`
	UpdatedAt          string    `json:"updatedAt"`
}

// GetCreatedAt returns the value of CreatedAt.
func (s *SessionCreateResponseDto) GetCreatedAt() string {
	return s.CreatedAt
}

// GetCurrent returns the value of Current.
func (s *SessionCreateResponseDto) GetCurrent() bool {
	return s.Current
}

// GetDeviceOS returns the value of DeviceOS.
func (s *SessionCreateResponseDto) GetDeviceOS() string {
	return s.DeviceOS
}

// GetDeviceType returns the value of DeviceType.
func (s *SessionCreateResponseDto) GetDeviceType() string {
	return s.DeviceType
}

// GetExpiresAt returns the value of ExpiresAt.
func (s *SessionCreateResponseDto) GetExpiresAt() OptString {
	return s.ExpiresAt
}

// GetID returns the value of ID.
func (s *SessionCreateResponseDto) GetID() string {
	return s.ID
}

// GetIsPendingSyncReset returns the value of IsPendingSyncReset.
func (s *SessionCreateResponseDto) GetIsPendingSyncReset() bool {
	return s.IsPendingSyncReset
}

// GetToken returns the value of Token.
func (s *SessionCreateResponseDto) GetToken() string {
	return s.Token
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *SessionCreateResponseDto) GetUpdatedAt() string {
	return s.UpdatedAt
}

// SetCreatedAt sets the value of CreatedAt.
func (s *SessionCreateResponseDto) SetCreatedAt(val string) {
	s.CreatedAt = val
}

// SetCurrent sets the value of Current.
func (s *SessionCreateResponseDto) SetCurrent(val bool) {
	s.Current = val
}

// SetDeviceOS sets the value of DeviceOS.
func (s *SessionCreateResponseDto) SetDeviceOS(val string) {
	s.DeviceOS = val
}

// SetDeviceType sets the value of DeviceType.
func (s *SessionCreateResponseDto) SetDeviceType(val string) {
	s.DeviceType = val
}

// SetExpiresAt sets the value of ExpiresAt.
func (s *SessionCreateResponseDto) SetExpiresAt(val OptString) {
	s.ExpiresAt = val
}

// SetID sets the value of ID.
func (s *SessionCreateResponseDto) SetID(val string) {
	s.ID = val
}

// SetIsPendingSyncReset sets the value of IsPendingSyncReset.
func (s *SessionCreateResponseDto) SetIsPendingSyncReset(val bool) {
	s.IsPendingSyncReset = val
}

// SetToken sets the value of Token.
func (s *SessionCreateResponseDto) SetToken(val string) {
	s.Token = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *SessionCreateResponseDto) SetUpdatedAt(val string) {
	s.UpdatedAt = val
}

// Ref: #/components/schemas/SessionResponseDto
type SessionResponseDto struct {
	CreatedAt          string    `json:"createdAt"`
	Current            bool      `json:"current"`
	DeviceOS           string    `json:"deviceOS"`
	DeviceType         string    `json:"deviceType"`
	ExpiresAt          OptString `json:"expiresAt"`
	ID                 string    `json:"id"`
	IsPendingSyncReset bool      `json:"isPendingSyncReset"`
	UpdatedAt          string    `json:"updatedAt"`
}

// GetCreatedAt returns the value of CreatedAt.
func (s *SessionResponseDto) GetCreatedAt() string {
	return s.CreatedAt
}

// GetCurrent returns the value of Current.
func (s *SessionResponseDto) GetCurrent() bool {
	return s.Current
}

// GetDeviceOS returns the value of DeviceOS.
func (s *SessionResponseDto) GetDeviceOS() string {
	return s.DeviceOS
}

// GetDeviceType returns the value of DeviceType.
func (s *SessionResponseDto) GetDeviceType() string {
	return s.DeviceType
}

// GetExpiresAt returns the value of ExpiresAt.
func (s *SessionResponseDto) GetExpiresAt() OptString {
	return s.ExpiresAt
}

// GetID returns the value of ID.
func (s *SessionResponseDto) GetID() string {
	return s.ID
}

// GetIsPendingSyncReset returns the value of IsPendingSyncReset.
func (s *SessionResponseDto) GetIsPendingSyncReset() bool {
	return s.IsPendingSyncReset
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *SessionResponseDto) GetUpdatedAt() string {
	return s.UpdatedAt
}

// SetCreatedAt sets the value of CreatedAt.
func (s *SessionResponseDto) SetCreatedAt(val string) {
	s.CreatedAt = val
}

// SetCurrent sets the value of Current.
func (s *SessionResponseDto) SetCurrent(val bool) {
	s.Current = val
}

// SetDeviceOS sets the value of DeviceOS.
func (s *SessionResponseDto) SetDeviceOS(val string) {
	s.DeviceOS = val
}

// SetDeviceType sets the value of DeviceType.
func (s *SessionResponseDto) SetDeviceType(val string) {
	s.DeviceType = val
}

// SetExpiresAt sets the value of ExpiresAt.
func (s *SessionResponseDto) SetExpiresAt(val OptString) {
	s.ExpiresAt = val
}

// SetID sets the value of ID.
func (s *SessionResponseDto) SetID(val string) {
	s.ID = val
}

// SetIsPendingSyncReset sets the value of IsPendingSyncReset.
func (s *SessionResponseDto) SetIsPendingSyncReset(val bool) {
	s.IsPendingSyncReset = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *SessionResponseDto) SetUpdatedAt(val string) {
	s.UpdatedAt = val
}

// Ref: #/components/schemas/SessionUnlockDto
type SessionUnlockDto struct {
	Password OptString `json:"password"`
	PinCode  OptString `json:"pinCode"`
}

// GetPassword returns the value of Password.
func (s *SessionUnlockDto) GetPassword() OptString {
	return s.Password
}

// GetPinCode returns the value of PinCode.
func (s *SessionUnlockDto) GetPinCode() OptString {
	return s.PinCode
}

// SetPassword sets the value of Password.
func (s *SessionUnlockDto) SetPassword(val OptString) {
	s.Password = val
}

// SetPinCode sets the value of PinCode.
func (s *SessionUnlockDto) SetPinCode(val OptString) {
	s.PinCode = val
}

// Ref: #/components/schemas/SessionUpdateDto
type SessionUpdateDto struct {
	IsPendingSyncReset OptBool `json:"isPendingSyncReset"`
}

// GetIsPendingSyncReset returns the value of IsPendingSyncReset.
func (s *SessionUpdateDto) GetIsPendingSyncReset() OptBool {
	return s.IsPendingSyncReset
}

// SetIsPendingSyncReset sets the value of IsPendingSyncReset.
func (s *SessionUpdateDto) SetIsPendingSyncReset(val OptBool) {
	s.IsPendingSyncReset = val
}

// SetupPinCodeNoContent is response for SetupPinCode operation.
type SetupPinCodeNoContent struct{}

// Ref: #/components/schemas/SharedLinkCreateDto
type SharedLinkCreateDto struct {
	AlbumId       OptUUID        `json:"albumId"`
	AllowDownload OptBool        `json:"allowDownload"`
	AllowUpload   OptBool        `json:"allowUpload"`
	AssetIds      []uuid.UUID    `json:"assetIds"`
	Description   OptNilString   `json:"description"`
	ExpiresAt     OptNilDateTime `json:"expiresAt"`
	Password      OptNilString   `json:"password"`
	ShowMetadata  OptBool        `json:"showMetadata"`
	Slug          OptNilString   `json:"slug"`
	Type          SharedLinkType `json:"type"`
}

// GetAlbumId returns the value of AlbumId.
func (s *SharedLinkCreateDto) GetAlbumId() OptUUID {
	return s.AlbumId
}

// GetAllowDownload returns the value of AllowDownload.
func (s *SharedLinkCreateDto) GetAllowDownload() OptBool {
	return s.AllowDownload
}

// GetAllowUpload returns the value of AllowUpload.
func (s *SharedLinkCreateDto) GetAllowUpload() OptBool {
	return s.AllowUpload
}

// GetAssetIds returns the value of AssetIds.
func (s *SharedLinkCreateDto) GetAssetIds() []uuid.UUID {
	return s.AssetIds
}

// GetDescription returns the value of Description.
func (s *SharedLinkCreateDto) GetDescription() OptNilString {
	return s.Description
}

// GetExpiresAt returns the value of ExpiresAt.
func (s *SharedLinkCreateDto) GetExpiresAt() OptNilDateTime {
	return s.ExpiresAt
}

// GetPassword returns the value of Password.
func (s *SharedLinkCreateDto) GetPassword() OptNilString {
	return s.Password
}

// GetShowMetadata returns the value of ShowMetadata.
func (s *SharedLinkCreateDto) GetShowMetadata() OptBool {
	return s.ShowMetadata
}

// GetSlug returns the value of Slug.
func (s *SharedLinkCreateDto) GetSlug() OptNilString {
	return s.Slug
}

// GetType returns the value of Type.
func (s *SharedLinkCreateDto) GetType() SharedLinkType {
	return s.Type
}

// SetAlbumId sets the value of AlbumId.
func (s *SharedLinkCreateDto) SetAlbumId(val OptUUID) {
	s.AlbumId = val
}

// SetAllowDownload sets the value of AllowDownload.
func (s *SharedLinkCreateDto) SetAllowDownload(val OptBool) {
	s.AllowDownload = val
}

// SetAllowUpload sets the value of AllowUpload.
func (s *SharedLinkCreateDto) SetAllowUpload(val OptBool) {
	s.AllowUpload = val
}

// SetAssetIds sets the value of AssetIds.
func (s *SharedLinkCreateDto) SetAssetIds(val []uuid.UUID) {
	s.AssetIds = val
}

// SetDescription sets the value of Description.
func (s *SharedLinkCreateDto) SetDescription(val OptNilString) {
	s.Description = val
}

// SetExpiresAt sets the value of ExpiresAt.
func (s *SharedLinkCreateDto) SetExpiresAt(val OptNilDateTime) {
	s.ExpiresAt = val
}

// SetPassword sets the value of Password.
func (s *SharedLinkCreateDto) SetPassword(val OptNilString) {
	s.Password = val
}

// SetShowMetadata sets the value of ShowMetadata.
func (s *SharedLinkCreateDto) SetShowMetadata(val OptBool) {
	s.ShowMetadata = val
}

// SetSlug sets the value of Slug.
func (s *SharedLinkCreateDto) SetSlug(val OptNilString) {
	s.Slug = val
}

// SetType sets the value of Type.
func (s *SharedLinkCreateDto) SetType(val SharedLinkType) {
	s.Type = val
}

// Ref: #/components/schemas/SharedLinkEditDto
type SharedLinkEditDto struct {
	AllowDownload OptBool `json:"allowDownload"`
	AllowUpload   OptBool `json:"allowUpload"`
	// Few clients cannot send null to set the expiryTime to never.
	// Setting this flag and not sending expiryAt is considered as null instead.
	// Clients that can send null values can ignore this.
	ChangeExpiryTime OptBool        `json:"changeExpiryTime"`
	Description      OptNilString   `json:"description"`
	ExpiresAt        OptNilDateTime `json:"expiresAt"`
	Password         OptNilString   `json:"password"`
	ShowMetadata     OptBool        `json:"showMetadata"`
	Slug             OptNilString   `json:"slug"`
}

// GetAllowDownload returns the value of AllowDownload.
func (s *SharedLinkEditDto) GetAllowDownload() OptBool {
	return s.AllowDownload
}

// GetAllowUpload returns the value of AllowUpload.
func (s *SharedLinkEditDto) GetAllowUpload() OptBool {
	return s.AllowUpload
}

// GetChangeExpiryTime returns the value of ChangeExpiryTime.
func (s *SharedLinkEditDto) GetChangeExpiryTime() OptBool {
	return s.ChangeExpiryTime
}

// GetDescription returns the value of Description.
func (s *SharedLinkEditDto) GetDescription() OptNilString {
	return s.Description
}

// GetExpiresAt returns the value of ExpiresAt.
func (s *SharedLinkEditDto) GetExpiresAt() OptNilDateTime {
	return s.ExpiresAt
}

// GetPassword returns the value of Password.
func (s *SharedLinkEditDto) GetPassword() OptNilString {
	return s.Password
}

// GetShowMetadata returns the value of ShowMetadata.
func (s *SharedLinkEditDto) GetShowMetadata() OptBool {
	return s.ShowMetadata
}

// GetSlug returns the value of Slug.
func (s *SharedLinkEditDto) GetSlug() OptNilString {
	return s.Slug
}

// SetAllowDownload sets the value of AllowDownload.
func (s *SharedLinkEditDto) SetAllowDownload(val OptBool) {
	s.AllowDownload = val
}

// SetAllowUpload sets the value of AllowUpload.
func (s *SharedLinkEditDto) SetAllowUpload(val OptBool) {
	s.AllowUpload = val
}

// SetChangeExpiryTime sets the value of ChangeExpiryTime.
func (s *SharedLinkEditDto) SetChangeExpiryTime(val OptBool) {
	s.ChangeExpiryTime = val
}

// SetDescription sets the value of Description.
func (s *SharedLinkEditDto) SetDescription(val OptNilString) {
	s.Description = val
}

// SetExpiresAt sets the value of ExpiresAt.
func (s *SharedLinkEditDto) SetExpiresAt(val OptNilDateTime) {
	s.ExpiresAt = val
}

// SetPassword sets the value of Password.
func (s *SharedLinkEditDto) SetPassword(val OptNilString) {
	s.Password = val
}

// SetShowMetadata sets the value of ShowMetadata.
func (s *SharedLinkEditDto) SetShowMetadata(val OptBool) {
	s.ShowMetadata = val
}

// SetSlug sets the value of Slug.
func (s *SharedLinkEditDto) SetSlug(val OptNilString) {
	s.Slug = val
}

// Ref: #/components/schemas/SharedLinkResponseDto
type SharedLinkResponseDto struct {
	Album         OptAlbumResponseDto `json:"album"`
	AllowDownload bool                `json:"allowDownload"`
	AllowUpload   bool                `json:"allowUpload"`
	Assets        []AssetResponseDto  `json:"assets"`
	CreatedAt     time.Time           `json:"createdAt"`
	Description   NilString           `json:"description"`
	ExpiresAt     NilDateTime         `json:"expiresAt"`
	ID            string              `json:"id"`
	Key           string              `json:"key"`
	Password      NilString           `json:"password"`
	ShowMetadata  bool                `json:"showMetadata"`
	Slug          NilString           `json:"slug"`
	Token         OptNilString        `json:"token"`
	Type          SharedLinkType      `json:"type"`
	UserId        string              `json:"userId"`
}

// GetAlbum returns the value of Album.
func (s *SharedLinkResponseDto) GetAlbum() OptAlbumResponseDto {
	return s.Album
}

// GetAllowDownload returns the value of AllowDownload.
func (s *SharedLinkResponseDto) GetAllowDownload() bool {
	return s.AllowDownload
}

// GetAllowUpload returns the value of AllowUpload.
func (s *SharedLinkResponseDto) GetAllowUpload() bool {
	return s.AllowUpload
}

// GetAssets returns the value of Assets.
func (s *SharedLinkResponseDto) GetAssets() []AssetResponseDto {
	return s.Assets
}

// GetCreatedAt returns the value of CreatedAt.
func (s *SharedLinkResponseDto) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetDescription returns the value of Description.
func (s *SharedLinkResponseDto) GetDescription() NilString {
	return s.Description
}

// GetExpiresAt returns the value of ExpiresAt.
func (s *SharedLinkResponseDto) GetExpiresAt() NilDateTime {
	return s.ExpiresAt
}

// GetID returns the value of ID.
func (s *SharedLinkResponseDto) GetID() string {
	return s.ID
}

// GetKey returns the value of Key.
func (s *SharedLinkResponseDto) GetKey() string {
	return s.Key
}

// GetPassword returns the value of Password.
func (s *SharedLinkResponseDto) GetPassword() NilString {
	return s.Password
}

// GetShowMetadata returns the value of ShowMetadata.
func (s *SharedLinkResponseDto) GetShowMetadata() bool {
	return s.ShowMetadata
}

// GetSlug returns the value of Slug.
func (s *SharedLinkResponseDto) GetSlug() NilString {
	return s.Slug
}

// GetToken returns the value of Token.
func (s *SharedLinkResponseDto) GetToken() OptNilString {
	return s.Token
}

// GetType returns the value of Type.
func (s *SharedLinkResponseDto) GetType() SharedLinkType {
	return s.Type
}

// GetUserId returns the value of UserId.
func (s *SharedLinkResponseDto) GetUserId() string {
	return s.UserId
}

// SetAlbum sets the value of Album.
func (s *SharedLinkResponseDto) SetAlbum(val OptAlbumResponseDto) {
	s.Album = val
}

// SetAllowDownload sets the value of AllowDownload.
func (s *SharedLinkResponseDto) SetAllowDownload(val bool) {
	s.AllowDownload = val
}

// SetAllowUpload sets the value of AllowUpload.
func (s *SharedLinkResponseDto) SetAllowUpload(val bool) {
	s.AllowUpload = val
}

// SetAssets sets the value of Assets.
func (s *SharedLinkResponseDto) SetAssets(val []AssetResponseDto) {
	s.Assets = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *SharedLinkResponseDto) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetDescription sets the value of Description.
func (s *SharedLinkResponseDto) SetDescription(val NilString) {
	s.Description = val
}

// SetExpiresAt sets the value of ExpiresAt.
func (s *SharedLinkResponseDto) SetExpiresAt(val NilDateTime) {
	s.ExpiresAt = val
}

// SetID sets the value of ID.
func (s *SharedLinkResponseDto) SetID(val string) {
	s.ID = val
}

// SetKey sets the value of Key.
func (s *SharedLinkResponseDto) SetKey(val string) {
	s.Key = val
}

// SetPassword sets the value of Password.
func (s *SharedLinkResponseDto) SetPassword(val NilString) {
	s.Password = val
}

// SetShowMetadata sets the value of ShowMetadata.
func (s *SharedLinkResponseDto) SetShowMetadata(val bool) {
	s.ShowMetadata = val
}

// SetSlug sets the value of Slug.
func (s *SharedLinkResponseDto) SetSlug(val NilString) {
	s.Slug = val
}

// SetToken sets the value of Token.
func (s *SharedLinkResponseDto) SetToken(val OptNilString) {
	s.Token = val
}

// SetType sets the value of Type.
func (s *SharedLinkResponseDto) SetType(val SharedLinkType) {
	s.Type = val
}

// SetUserId sets the value of UserId.
func (s *SharedLinkResponseDto) SetUserId(val string) {
	s.UserId = val
}

// Ref: #/components/schemas/SharedLinkType
type SharedLinkType string

const (
	SharedLinkTypeALBUM      SharedLinkType = "ALBUM"
	SharedLinkTypeINDIVIDUAL SharedLinkType = "INDIVIDUAL"
)

// AllValues returns all SharedLinkType values.
func (SharedLinkType) AllValues() []SharedLinkType {
	return []SharedLinkType{
		SharedLinkTypeALBUM,
		SharedLinkTypeINDIVIDUAL,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s SharedLinkType) MarshalText() ([]byte, error) {
	switch s {
	case SharedLinkTypeALBUM:
		return []byte(s), nil
	case SharedLinkTypeINDIVIDUAL:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *SharedLinkType) UnmarshalText(data []byte) error {
	switch SharedLinkType(data) {
	case SharedLinkTypeALBUM:
		*s = SharedLinkTypeALBUM
		return nil
	case SharedLinkTypeINDIVIDUAL:
		*s = SharedLinkTypeINDIVIDUAL
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/SharedLinksResponse
type SharedLinksResponse struct {
	Enabled    bool `json:"enabled"`
	SidebarWeb bool `json:"sidebarWeb"`
}

// GetEnabled returns the value of Enabled.
func (s *SharedLinksResponse) GetEnabled() bool {
	return s.Enabled
}

// GetSidebarWeb returns the value of SidebarWeb.
func (s *SharedLinksResponse) GetSidebarWeb() bool {
	return s.SidebarWeb
}

// SetEnabled sets the value of Enabled.
func (s *SharedLinksResponse) SetEnabled(val bool) {
	s.Enabled = val
}

// SetSidebarWeb sets the value of SidebarWeb.
func (s *SharedLinksResponse) SetSidebarWeb(val bool) {
	s.SidebarWeb = val
}

// Ref: #/components/schemas/SharedLinksUpdate
type SharedLinksUpdate struct {
	Enabled    OptBool `json:"enabled"`
	SidebarWeb OptBool `json:"sidebarWeb"`
}

// GetEnabled returns the value of Enabled.
func (s *SharedLinksUpdate) GetEnabled() OptBool {
	return s.Enabled
}

// GetSidebarWeb returns the value of SidebarWeb.
func (s *SharedLinksUpdate) GetSidebarWeb() OptBool {
	return s.SidebarWeb
}

// SetEnabled sets the value of Enabled.
func (s *SharedLinksUpdate) SetEnabled(val OptBool) {
	s.Enabled = val
}

// SetSidebarWeb sets the value of SidebarWeb.
func (s *SharedLinksUpdate) SetSidebarWeb(val OptBool) {
	s.SidebarWeb = val
}

// Ref: #/components/schemas/SignUpDto
type SignUpDto struct {
	Email    string `json:"email"`
	Name     string `json:"name"`
	Password string `json:"password"`
}

// GetEmail returns the value of Email.
func (s *SignUpDto) GetEmail() string {
	return s.Email
}

// GetName returns the value of Name.
func (s *SignUpDto) GetName() string {
	return s.Name
}

// GetPassword returns the value of Password.
func (s *SignUpDto) GetPassword() string {
	return s.Password
}

// SetEmail sets the value of Email.
func (s *SignUpDto) SetEmail(val string) {
	s.Email = val
}

// SetName sets the value of Name.
func (s *SignUpDto) SetName(val string) {
	s.Name = val
}

// SetPassword sets the value of Password.
func (s *SignUpDto) SetPassword(val string) {
	s.Password = val
}

// Ref: #/components/schemas/SmartSearchDto
type SmartSearchDto struct {
	AlbumIds      []uuid.UUID        `json:"albumIds"`
	City          OptNilString       `json:"city"`
	Country       OptNilString       `json:"country"`
	CreatedAfter  OptDateTime        `json:"createdAfter"`
	CreatedBefore OptDateTime        `json:"createdBefore"`
	DeviceId      OptString          `json:"deviceId"`
	IsEncoded     OptBool            `json:"isEncoded"`
	IsFavorite    OptBool            `json:"isFavorite"`
	IsMotion      OptBool            `json:"isMotion"`
	IsNotInAlbum  OptBool            `json:"isNotInAlbum"`
	IsOffline     OptBool            `json:"isOffline"`
	Language      OptString          `json:"language"`
	LensModel     OptNilString       `json:"lensModel"`
	LibraryId     OptNilUUID         `json:"libraryId"`
	Make          OptString          `json:"make"`
	Model         OptNilString       `json:"model"`
	Page          OptFloat64         `json:"page"`
	PersonIds     []uuid.UUID        `json:"personIds"`
	Query         OptString          `json:"query"`
	QueryAssetId  OptUUID            `json:"queryAssetId"`
	Rating        OptFloat64         `json:"rating"`
	Size          OptFloat64         `json:"size"`
	State         OptNilString       `json:"state"`
	TagIds        OptNilUUIDArray    `json:"tagIds"`
	TakenAfter    OptDateTime        `json:"takenAfter"`
	TakenBefore   OptDateTime        `json:"takenBefore"`
	TrashedAfter  OptDateTime        `json:"trashedAfter"`
	TrashedBefore OptDateTime        `json:"trashedBefore"`
	Type          OptAssetTypeEnum   `json:"type"`
	UpdatedAfter  OptDateTime        `json:"updatedAfter"`
	UpdatedBefore OptDateTime        `json:"updatedBefore"`
	Visibility    OptAssetVisibility `json:"visibility"`
	WithDeleted   OptBool            `json:"withDeleted"`
	WithExif      OptBool            `json:"withExif"`
}

// GetAlbumIds returns the value of AlbumIds.
func (s *SmartSearchDto) GetAlbumIds() []uuid.UUID {
	return s.AlbumIds
}

// GetCity returns the value of City.
func (s *SmartSearchDto) GetCity() OptNilString {
	return s.City
}

// GetCountry returns the value of Country.
func (s *SmartSearchDto) GetCountry() OptNilString {
	return s.Country
}

// GetCreatedAfter returns the value of CreatedAfter.
func (s *SmartSearchDto) GetCreatedAfter() OptDateTime {
	return s.CreatedAfter
}

// GetCreatedBefore returns the value of CreatedBefore.
func (s *SmartSearchDto) GetCreatedBefore() OptDateTime {
	return s.CreatedBefore
}

// GetDeviceId returns the value of DeviceId.
func (s *SmartSearchDto) GetDeviceId() OptString {
	return s.DeviceId
}

// GetIsEncoded returns the value of IsEncoded.
func (s *SmartSearchDto) GetIsEncoded() OptBool {
	return s.IsEncoded
}

// GetIsFavorite returns the value of IsFavorite.
func (s *SmartSearchDto) GetIsFavorite() OptBool {
	return s.IsFavorite
}

// GetIsMotion returns the value of IsMotion.
func (s *SmartSearchDto) GetIsMotion() OptBool {
	return s.IsMotion
}

// GetIsNotInAlbum returns the value of IsNotInAlbum.
func (s *SmartSearchDto) GetIsNotInAlbum() OptBool {
	return s.IsNotInAlbum
}

// GetIsOffline returns the value of IsOffline.
func (s *SmartSearchDto) GetIsOffline() OptBool {
	return s.IsOffline
}

// GetLanguage returns the value of Language.
func (s *SmartSearchDto) GetLanguage() OptString {
	return s.Language
}

// GetLensModel returns the value of LensModel.
func (s *SmartSearchDto) GetLensModel() OptNilString {
	return s.LensModel
}

// GetLibraryId returns the value of LibraryId.
func (s *SmartSearchDto) GetLibraryId() OptNilUUID {
	return s.LibraryId
}

// GetMake returns the value of Make.
func (s *SmartSearchDto) GetMake() OptString {
	return s.Make
}

// GetModel returns the value of Model.
func (s *SmartSearchDto) GetModel() OptNilString {
	return s.Model
}

// GetPage returns the value of Page.
func (s *SmartSearchDto) GetPage() OptFloat64 {
	return s.Page
}

// GetPersonIds returns the value of PersonIds.
func (s *SmartSearchDto) GetPersonIds() []uuid.UUID {
	return s.PersonIds
}

// GetQuery returns the value of Query.
func (s *SmartSearchDto) GetQuery() OptString {
	return s.Query
}

// GetQueryAssetId returns the value of QueryAssetId.
func (s *SmartSearchDto) GetQueryAssetId() OptUUID {
	return s.QueryAssetId
}

// GetRating returns the value of Rating.
func (s *SmartSearchDto) GetRating() OptFloat64 {
	return s.Rating
}

// GetSize returns the value of Size.
func (s *SmartSearchDto) GetSize() OptFloat64 {
	return s.Size
}

// GetState returns the value of State.
func (s *SmartSearchDto) GetState() OptNilString {
	return s.State
}

// GetTagIds returns the value of TagIds.
func (s *SmartSearchDto) GetTagIds() OptNilUUIDArray {
	return s.TagIds
}

// GetTakenAfter returns the value of TakenAfter.
func (s *SmartSearchDto) GetTakenAfter() OptDateTime {
	return s.TakenAfter
}

// GetTakenBefore returns the value of TakenBefore.
func (s *SmartSearchDto) GetTakenBefore() OptDateTime {
	return s.TakenBefore
}

// GetTrashedAfter returns the value of TrashedAfter.
func (s *SmartSearchDto) GetTrashedAfter() OptDateTime {
	return s.TrashedAfter
}

// GetTrashedBefore returns the value of TrashedBefore.
func (s *SmartSearchDto) GetTrashedBefore() OptDateTime {
	return s.TrashedBefore
}

// GetType returns the value of Type.
func (s *SmartSearchDto) GetType() OptAssetTypeEnum {
	return s.Type
}

// GetUpdatedAfter returns the value of UpdatedAfter.
func (s *SmartSearchDto) GetUpdatedAfter() OptDateTime {
	return s.UpdatedAfter
}

// GetUpdatedBefore returns the value of UpdatedBefore.
func (s *SmartSearchDto) GetUpdatedBefore() OptDateTime {
	return s.UpdatedBefore
}

// GetVisibility returns the value of Visibility.
func (s *SmartSearchDto) GetVisibility() OptAssetVisibility {
	return s.Visibility
}

// GetWithDeleted returns the value of WithDeleted.
func (s *SmartSearchDto) GetWithDeleted() OptBool {
	return s.WithDeleted
}

// GetWithExif returns the value of WithExif.
func (s *SmartSearchDto) GetWithExif() OptBool {
	return s.WithExif
}

// SetAlbumIds sets the value of AlbumIds.
func (s *SmartSearchDto) SetAlbumIds(val []uuid.UUID) {
	s.AlbumIds = val
}

// SetCity sets the value of City.
func (s *SmartSearchDto) SetCity(val OptNilString) {
	s.City = val
}

// SetCountry sets the value of Country.
func (s *SmartSearchDto) SetCountry(val OptNilString) {
	s.Country = val
}

// SetCreatedAfter sets the value of CreatedAfter.
func (s *SmartSearchDto) SetCreatedAfter(val OptDateTime) {
	s.CreatedAfter = val
}

// SetCreatedBefore sets the value of CreatedBefore.
func (s *SmartSearchDto) SetCreatedBefore(val OptDateTime) {
	s.CreatedBefore = val
}

// SetDeviceId sets the value of DeviceId.
func (s *SmartSearchDto) SetDeviceId(val OptString) {
	s.DeviceId = val
}

// SetIsEncoded sets the value of IsEncoded.
func (s *SmartSearchDto) SetIsEncoded(val OptBool) {
	s.IsEncoded = val
}

// SetIsFavorite sets the value of IsFavorite.
func (s *SmartSearchDto) SetIsFavorite(val OptBool) {
	s.IsFavorite = val
}

// SetIsMotion sets the value of IsMotion.
func (s *SmartSearchDto) SetIsMotion(val OptBool) {
	s.IsMotion = val
}

// SetIsNotInAlbum sets the value of IsNotInAlbum.
func (s *SmartSearchDto) SetIsNotInAlbum(val OptBool) {
	s.IsNotInAlbum = val
}

// SetIsOffline sets the value of IsOffline.
func (s *SmartSearchDto) SetIsOffline(val OptBool) {
	s.IsOffline = val
}

// SetLanguage sets the value of Language.
func (s *SmartSearchDto) SetLanguage(val OptString) {
	s.Language = val
}

// SetLensModel sets the value of LensModel.
func (s *SmartSearchDto) SetLensModel(val OptNilString) {
	s.LensModel = val
}

// SetLibraryId sets the value of LibraryId.
func (s *SmartSearchDto) SetLibraryId(val OptNilUUID) {
	s.LibraryId = val
}

// SetMake sets the value of Make.
func (s *SmartSearchDto) SetMake(val OptString) {
	s.Make = val
}

// SetModel sets the value of Model.
func (s *SmartSearchDto) SetModel(val OptNilString) {
	s.Model = val
}

// SetPage sets the value of Page.
func (s *SmartSearchDto) SetPage(val OptFloat64) {
	s.Page = val
}

// SetPersonIds sets the value of PersonIds.
func (s *SmartSearchDto) SetPersonIds(val []uuid.UUID) {
	s.PersonIds = val
}

// SetQuery sets the value of Query.
func (s *SmartSearchDto) SetQuery(val OptString) {
	s.Query = val
}

// SetQueryAssetId sets the value of QueryAssetId.
func (s *SmartSearchDto) SetQueryAssetId(val OptUUID) {
	s.QueryAssetId = val
}

// SetRating sets the value of Rating.
func (s *SmartSearchDto) SetRating(val OptFloat64) {
	s.Rating = val
}

// SetSize sets the value of Size.
func (s *SmartSearchDto) SetSize(val OptFloat64) {
	s.Size = val
}

// SetState sets the value of State.
func (s *SmartSearchDto) SetState(val OptNilString) {
	s.State = val
}

// SetTagIds sets the value of TagIds.
func (s *SmartSearchDto) SetTagIds(val OptNilUUIDArray) {
	s.TagIds = val
}

// SetTakenAfter sets the value of TakenAfter.
func (s *SmartSearchDto) SetTakenAfter(val OptDateTime) {
	s.TakenAfter = val
}

// SetTakenBefore sets the value of TakenBefore.
func (s *SmartSearchDto) SetTakenBefore(val OptDateTime) {
	s.TakenBefore = val
}

// SetTrashedAfter sets the value of TrashedAfter.
func (s *SmartSearchDto) SetTrashedAfter(val OptDateTime) {
	s.TrashedAfter = val
}

// SetTrashedBefore sets the value of TrashedBefore.
func (s *SmartSearchDto) SetTrashedBefore(val OptDateTime) {
	s.TrashedBefore = val
}

// SetType sets the value of Type.
func (s *SmartSearchDto) SetType(val OptAssetTypeEnum) {
	s.Type = val
}

// SetUpdatedAfter sets the value of UpdatedAfter.
func (s *SmartSearchDto) SetUpdatedAfter(val OptDateTime) {
	s.UpdatedAfter = val
}

// SetUpdatedBefore sets the value of UpdatedBefore.
func (s *SmartSearchDto) SetUpdatedBefore(val OptDateTime) {
	s.UpdatedBefore = val
}

// SetVisibility sets the value of Visibility.
func (s *SmartSearchDto) SetVisibility(val OptAssetVisibility) {
	s.Visibility = val
}

// SetWithDeleted sets the value of WithDeleted.
func (s *SmartSearchDto) SetWithDeleted(val OptBool) {
	s.WithDeleted = val
}

// SetWithExif sets the value of WithExif.
func (s *SmartSearchDto) SetWithExif(val OptBool) {
	s.WithExif = val
}

// Ref: #/components/schemas/SourceType
type SourceType string

const (
	SourceTypeMachineLearning SourceType = "machine-learning"
	SourceTypeExif            SourceType = "exif"
	SourceTypeManual          SourceType = "manual"
)

// AllValues returns all SourceType values.
func (SourceType) AllValues() []SourceType {
	return []SourceType{
		SourceTypeMachineLearning,
		SourceTypeExif,
		SourceTypeManual,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s SourceType) MarshalText() ([]byte, error) {
	switch s {
	case SourceTypeMachineLearning:
		return []byte(s), nil
	case SourceTypeExif:
		return []byte(s), nil
	case SourceTypeManual:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *SourceType) UnmarshalText(data []byte) error {
	switch SourceType(data) {
	case SourceTypeMachineLearning:
		*s = SourceTypeMachineLearning
		return nil
	case SourceTypeExif:
		*s = SourceTypeExif
		return nil
	case SourceTypeManual:
		*s = SourceTypeManual
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/StackCreateDto
type StackCreateDto struct {
	// First asset becomes the primary.
	AssetIds []uuid.UUID `json:"assetIds"`
}

// GetAssetIds returns the value of AssetIds.
func (s *StackCreateDto) GetAssetIds() []uuid.UUID {
	return s.AssetIds
}

// SetAssetIds sets the value of AssetIds.
func (s *StackCreateDto) SetAssetIds(val []uuid.UUID) {
	s.AssetIds = val
}

// Ref: #/components/schemas/StackResponseDto
type StackResponseDto struct {
	Assets         []AssetResponseDto `json:"assets"`
	ID             string             `json:"id"`
	PrimaryAssetId string             `json:"primaryAssetId"`
}

// GetAssets returns the value of Assets.
func (s *StackResponseDto) GetAssets() []AssetResponseDto {
	return s.Assets
}

// GetID returns the value of ID.
func (s *StackResponseDto) GetID() string {
	return s.ID
}

// GetPrimaryAssetId returns the value of PrimaryAssetId.
func (s *StackResponseDto) GetPrimaryAssetId() string {
	return s.PrimaryAssetId
}

// SetAssets sets the value of Assets.
func (s *StackResponseDto) SetAssets(val []AssetResponseDto) {
	s.Assets = val
}

// SetID sets the value of ID.
func (s *StackResponseDto) SetID(val string) {
	s.ID = val
}

// SetPrimaryAssetId sets the value of PrimaryAssetId.
func (s *StackResponseDto) SetPrimaryAssetId(val string) {
	s.PrimaryAssetId = val
}

// Ref: #/components/schemas/StackUpdateDto
type StackUpdateDto struct {
	PrimaryAssetId OptUUID `json:"primaryAssetId"`
}

// GetPrimaryAssetId returns the value of PrimaryAssetId.
func (s *StackUpdateDto) GetPrimaryAssetId() OptUUID {
	return s.PrimaryAssetId
}

// SetPrimaryAssetId sets the value of PrimaryAssetId.
func (s *StackUpdateDto) SetPrimaryAssetId(val OptUUID) {
	s.PrimaryAssetId = val
}

// Ref: #/components/schemas/StatisticsSearchDto
type StatisticsSearchDto struct {
	AlbumIds      []uuid.UUID        `json:"albumIds"`
	City          OptNilString       `json:"city"`
	Country       OptNilString       `json:"country"`
	CreatedAfter  OptDateTime        `json:"createdAfter"`
	CreatedBefore OptDateTime        `json:"createdBefore"`
	Description   OptString          `json:"description"`
	DeviceId      OptString          `json:"deviceId"`
	IsEncoded     OptBool            `json:"isEncoded"`
	IsFavorite    OptBool            `json:"isFavorite"`
	IsMotion      OptBool            `json:"isMotion"`
	IsNotInAlbum  OptBool            `json:"isNotInAlbum"`
	IsOffline     OptBool            `json:"isOffline"`
	LensModel     OptNilString       `json:"lensModel"`
	LibraryId     OptNilUUID         `json:"libraryId"`
	Make          OptString          `json:"make"`
	Model         OptNilString       `json:"model"`
	PersonIds     []uuid.UUID        `json:"personIds"`
	Rating        OptFloat64         `json:"rating"`
	State         OptNilString       `json:"state"`
	TagIds        OptNilUUIDArray    `json:"tagIds"`
	TakenAfter    OptDateTime        `json:"takenAfter"`
	TakenBefore   OptDateTime        `json:"takenBefore"`
	TrashedAfter  OptDateTime        `json:"trashedAfter"`
	TrashedBefore OptDateTime        `json:"trashedBefore"`
	Type          OptAssetTypeEnum   `json:"type"`
	UpdatedAfter  OptDateTime        `json:"updatedAfter"`
	UpdatedBefore OptDateTime        `json:"updatedBefore"`
	Visibility    OptAssetVisibility `json:"visibility"`
}

// GetAlbumIds returns the value of AlbumIds.
func (s *StatisticsSearchDto) GetAlbumIds() []uuid.UUID {
	return s.AlbumIds
}

// GetCity returns the value of City.
func (s *StatisticsSearchDto) GetCity() OptNilString {
	return s.City
}

// GetCountry returns the value of Country.
func (s *StatisticsSearchDto) GetCountry() OptNilString {
	return s.Country
}

// GetCreatedAfter returns the value of CreatedAfter.
func (s *StatisticsSearchDto) GetCreatedAfter() OptDateTime {
	return s.CreatedAfter
}

// GetCreatedBefore returns the value of CreatedBefore.
func (s *StatisticsSearchDto) GetCreatedBefore() OptDateTime {
	return s.CreatedBefore
}

// GetDescription returns the value of Description.
func (s *StatisticsSearchDto) GetDescription() OptString {
	return s.Description
}

// GetDeviceId returns the value of DeviceId.
func (s *StatisticsSearchDto) GetDeviceId() OptString {
	return s.DeviceId
}

// GetIsEncoded returns the value of IsEncoded.
func (s *StatisticsSearchDto) GetIsEncoded() OptBool {
	return s.IsEncoded
}

// GetIsFavorite returns the value of IsFavorite.
func (s *StatisticsSearchDto) GetIsFavorite() OptBool {
	return s.IsFavorite
}

// GetIsMotion returns the value of IsMotion.
func (s *StatisticsSearchDto) GetIsMotion() OptBool {
	return s.IsMotion
}

// GetIsNotInAlbum returns the value of IsNotInAlbum.
func (s *StatisticsSearchDto) GetIsNotInAlbum() OptBool {
	return s.IsNotInAlbum
}

// GetIsOffline returns the value of IsOffline.
func (s *StatisticsSearchDto) GetIsOffline() OptBool {
	return s.IsOffline
}

// GetLensModel returns the value of LensModel.
func (s *StatisticsSearchDto) GetLensModel() OptNilString {
	return s.LensModel
}

// GetLibraryId returns the value of LibraryId.
func (s *StatisticsSearchDto) GetLibraryId() OptNilUUID {
	return s.LibraryId
}

// GetMake returns the value of Make.
func (s *StatisticsSearchDto) GetMake() OptString {
	return s.Make
}

// GetModel returns the value of Model.
func (s *StatisticsSearchDto) GetModel() OptNilString {
	return s.Model
}

// GetPersonIds returns the value of PersonIds.
func (s *StatisticsSearchDto) GetPersonIds() []uuid.UUID {
	return s.PersonIds
}

// GetRating returns the value of Rating.
func (s *StatisticsSearchDto) GetRating() OptFloat64 {
	return s.Rating
}

// GetState returns the value of State.
func (s *StatisticsSearchDto) GetState() OptNilString {
	return s.State
}

// GetTagIds returns the value of TagIds.
func (s *StatisticsSearchDto) GetTagIds() OptNilUUIDArray {
	return s.TagIds
}

// GetTakenAfter returns the value of TakenAfter.
func (s *StatisticsSearchDto) GetTakenAfter() OptDateTime {
	return s.TakenAfter
}

// GetTakenBefore returns the value of TakenBefore.
func (s *StatisticsSearchDto) GetTakenBefore() OptDateTime {
	return s.TakenBefore
}

// GetTrashedAfter returns the value of TrashedAfter.
func (s *StatisticsSearchDto) GetTrashedAfter() OptDateTime {
	return s.TrashedAfter
}

// GetTrashedBefore returns the value of TrashedBefore.
func (s *StatisticsSearchDto) GetTrashedBefore() OptDateTime {
	return s.TrashedBefore
}

// GetType returns the value of Type.
func (s *StatisticsSearchDto) GetType() OptAssetTypeEnum {
	return s.Type
}

// GetUpdatedAfter returns the value of UpdatedAfter.
func (s *StatisticsSearchDto) GetUpdatedAfter() OptDateTime {
	return s.UpdatedAfter
}

// GetUpdatedBefore returns the value of UpdatedBefore.
func (s *StatisticsSearchDto) GetUpdatedBefore() OptDateTime {
	return s.UpdatedBefore
}

// GetVisibility returns the value of Visibility.
func (s *StatisticsSearchDto) GetVisibility() OptAssetVisibility {
	return s.Visibility
}

// SetAlbumIds sets the value of AlbumIds.
func (s *StatisticsSearchDto) SetAlbumIds(val []uuid.UUID) {
	s.AlbumIds = val
}

// SetCity sets the value of City.
func (s *StatisticsSearchDto) SetCity(val OptNilString) {
	s.City = val
}

// SetCountry sets the value of Country.
func (s *StatisticsSearchDto) SetCountry(val OptNilString) {
	s.Country = val
}

// SetCreatedAfter sets the value of CreatedAfter.
func (s *StatisticsSearchDto) SetCreatedAfter(val OptDateTime) {
	s.CreatedAfter = val
}

// SetCreatedBefore sets the value of CreatedBefore.
func (s *StatisticsSearchDto) SetCreatedBefore(val OptDateTime) {
	s.CreatedBefore = val
}

// SetDescription sets the value of Description.
func (s *StatisticsSearchDto) SetDescription(val OptString) {
	s.Description = val
}

// SetDeviceId sets the value of DeviceId.
func (s *StatisticsSearchDto) SetDeviceId(val OptString) {
	s.DeviceId = val
}

// SetIsEncoded sets the value of IsEncoded.
func (s *StatisticsSearchDto) SetIsEncoded(val OptBool) {
	s.IsEncoded = val
}

// SetIsFavorite sets the value of IsFavorite.
func (s *StatisticsSearchDto) SetIsFavorite(val OptBool) {
	s.IsFavorite = val
}

// SetIsMotion sets the value of IsMotion.
func (s *StatisticsSearchDto) SetIsMotion(val OptBool) {
	s.IsMotion = val
}

// SetIsNotInAlbum sets the value of IsNotInAlbum.
func (s *StatisticsSearchDto) SetIsNotInAlbum(val OptBool) {
	s.IsNotInAlbum = val
}

// SetIsOffline sets the value of IsOffline.
func (s *StatisticsSearchDto) SetIsOffline(val OptBool) {
	s.IsOffline = val
}

// SetLensModel sets the value of LensModel.
func (s *StatisticsSearchDto) SetLensModel(val OptNilString) {
	s.LensModel = val
}

// SetLibraryId sets the value of LibraryId.
func (s *StatisticsSearchDto) SetLibraryId(val OptNilUUID) {
	s.LibraryId = val
}

// SetMake sets the value of Make.
func (s *StatisticsSearchDto) SetMake(val OptString) {
	s.Make = val
}

// SetModel sets the value of Model.
func (s *StatisticsSearchDto) SetModel(val OptNilString) {
	s.Model = val
}

// SetPersonIds sets the value of PersonIds.
func (s *StatisticsSearchDto) SetPersonIds(val []uuid.UUID) {
	s.PersonIds = val
}

// SetRating sets the value of Rating.
func (s *StatisticsSearchDto) SetRating(val OptFloat64) {
	s.Rating = val
}

// SetState sets the value of State.
func (s *StatisticsSearchDto) SetState(val OptNilString) {
	s.State = val
}

// SetTagIds sets the value of TagIds.
func (s *StatisticsSearchDto) SetTagIds(val OptNilUUIDArray) {
	s.TagIds = val
}

// SetTakenAfter sets the value of TakenAfter.
func (s *StatisticsSearchDto) SetTakenAfter(val OptDateTime) {
	s.TakenAfter = val
}

// SetTakenBefore sets the value of TakenBefore.
func (s *StatisticsSearchDto) SetTakenBefore(val OptDateTime) {
	s.TakenBefore = val
}

// SetTrashedAfter sets the value of TrashedAfter.
func (s *StatisticsSearchDto) SetTrashedAfter(val OptDateTime) {
	s.TrashedAfter = val
}

// SetTrashedBefore sets the value of TrashedBefore.
func (s *StatisticsSearchDto) SetTrashedBefore(val OptDateTime) {
	s.TrashedBefore = val
}

// SetType sets the value of Type.
func (s *StatisticsSearchDto) SetType(val OptAssetTypeEnum) {
	s.Type = val
}

// SetUpdatedAfter sets the value of UpdatedAfter.
func (s *StatisticsSearchDto) SetUpdatedAfter(val OptDateTime) {
	s.UpdatedAfter = val
}

// SetUpdatedBefore sets the value of UpdatedBefore.
func (s *StatisticsSearchDto) SetUpdatedBefore(val OptDateTime) {
	s.UpdatedBefore = val
}

// SetVisibility sets the value of Visibility.
func (s *StatisticsSearchDto) SetVisibility(val OptAssetVisibility) {
	s.Visibility = val
}

// Ref: #/components/schemas/SyncAckDeleteDto
type SyncAckDeleteDto struct {
	Types []SyncEntityType `json:"types"`
}

// GetTypes returns the value of Types.
func (s *SyncAckDeleteDto) GetTypes() []SyncEntityType {
	return s.Types
}

// SetTypes sets the value of Types.
func (s *SyncAckDeleteDto) SetTypes(val []SyncEntityType) {
	s.Types = val
}

// Ref: #/components/schemas/SyncAckDto
type SyncAckDto struct {
	Ack  string         `json:"ack"`
	Type SyncEntityType `json:"type"`
}

// GetAck returns the value of Ack.
func (s *SyncAckDto) GetAck() string {
	return s.Ack
}

// GetType returns the value of Type.
func (s *SyncAckDto) GetType() SyncEntityType {
	return s.Type
}

// SetAck sets the value of Ack.
func (s *SyncAckDto) SetAck(val string) {
	s.Ack = val
}

// SetType sets the value of Type.
func (s *SyncAckDto) SetType(val SyncEntityType) {
	s.Type = val
}

// Ref: #/components/schemas/SyncAckSetDto
type SyncAckSetDto struct {
	Acks []string `json:"acks"`
}

// GetAcks returns the value of Acks.
func (s *SyncAckSetDto) GetAcks() []string {
	return s.Acks
}

// SetAcks sets the value of Acks.
func (s *SyncAckSetDto) SetAcks(val []string) {
	s.Acks = val
}

// Ref: #/components/schemas/SyncEntityType
type SyncEntityType string

const (
	SyncEntityTypeAuthUserV1                 SyncEntityType = "AuthUserV1"
	SyncEntityTypeUserV1                     SyncEntityType = "UserV1"
	SyncEntityTypeUserDeleteV1               SyncEntityType = "UserDeleteV1"
	SyncEntityTypeAssetV1                    SyncEntityType = "AssetV1"
	SyncEntityTypeAssetDeleteV1              SyncEntityType = "AssetDeleteV1"
	SyncEntityTypeAssetExifV1                SyncEntityType = "AssetExifV1"
	SyncEntityTypeAssetMetadataV1            SyncEntityType = "AssetMetadataV1"
	SyncEntityTypeAssetMetadataDeleteV1      SyncEntityType = "AssetMetadataDeleteV1"
	SyncEntityTypePartnerV1                  SyncEntityType = "PartnerV1"
	SyncEntityTypePartnerDeleteV1            SyncEntityType = "PartnerDeleteV1"
	SyncEntityTypePartnerAssetV1             SyncEntityType = "PartnerAssetV1"
	SyncEntityTypePartnerAssetBackfillV1     SyncEntityType = "PartnerAssetBackfillV1"
	SyncEntityTypePartnerAssetDeleteV1       SyncEntityType = "PartnerAssetDeleteV1"
	SyncEntityTypePartnerAssetExifV1         SyncEntityType = "PartnerAssetExifV1"
	SyncEntityTypePartnerAssetExifBackfillV1 SyncEntityType = "PartnerAssetExifBackfillV1"
	SyncEntityTypePartnerStackBackfillV1     SyncEntityType = "PartnerStackBackfillV1"
	SyncEntityTypePartnerStackDeleteV1       SyncEntityType = "PartnerStackDeleteV1"
	SyncEntityTypePartnerStackV1             SyncEntityType = "PartnerStackV1"
	SyncEntityTypeAlbumV1                    SyncEntityType = "AlbumV1"
	SyncEntityTypeAlbumDeleteV1              SyncEntityType = "AlbumDeleteV1"
	SyncEntityTypeAlbumUserV1                SyncEntityType = "AlbumUserV1"
	SyncEntityTypeAlbumUserBackfillV1        SyncEntityType = "AlbumUserBackfillV1"
	SyncEntityTypeAlbumUserDeleteV1          SyncEntityType = "AlbumUserDeleteV1"
	SyncEntityTypeAlbumAssetCreateV1         SyncEntityType = "AlbumAssetCreateV1"
	SyncEntityTypeAlbumAssetUpdateV1         SyncEntityType = "AlbumAssetUpdateV1"
	SyncEntityTypeAlbumAssetBackfillV1       SyncEntityType = "AlbumAssetBackfillV1"
	SyncEntityTypeAlbumAssetExifCreateV1     SyncEntityType = "AlbumAssetExifCreateV1"
	SyncEntityTypeAlbumAssetExifUpdateV1     SyncEntityType = "AlbumAssetExifUpdateV1"
	SyncEntityTypeAlbumAssetExifBackfillV1   SyncEntityType = "AlbumAssetExifBackfillV1"
	SyncEntityTypeAlbumToAssetV1             SyncEntityType = "AlbumToAssetV1"
	SyncEntityTypeAlbumToAssetDeleteV1       SyncEntityType = "AlbumToAssetDeleteV1"
	SyncEntityTypeAlbumToAssetBackfillV1     SyncEntityType = "AlbumToAssetBackfillV1"
	SyncEntityTypeMemoryV1                   SyncEntityType = "MemoryV1"
	SyncEntityTypeMemoryDeleteV1             SyncEntityType = "MemoryDeleteV1"
	SyncEntityTypeMemoryToAssetV1            SyncEntityType = "MemoryToAssetV1"
	SyncEntityTypeMemoryToAssetDeleteV1      SyncEntityType = "MemoryToAssetDeleteV1"
	SyncEntityTypeStackV1                    SyncEntityType = "StackV1"
	SyncEntityTypeStackDeleteV1              SyncEntityType = "StackDeleteV1"
	SyncEntityTypePersonV1                   SyncEntityType = "PersonV1"
	SyncEntityTypePersonDeleteV1             SyncEntityType = "PersonDeleteV1"
	SyncEntityTypeAssetFaceV1                SyncEntityType = "AssetFaceV1"
	SyncEntityTypeAssetFaceDeleteV1          SyncEntityType = "AssetFaceDeleteV1"
	SyncEntityTypeUserMetadataV1             SyncEntityType = "UserMetadataV1"
	SyncEntityTypeUserMetadataDeleteV1       SyncEntityType = "UserMetadataDeleteV1"
	SyncEntityTypeSyncAckV1                  SyncEntityType = "SyncAckV1"
	SyncEntityTypeSyncResetV1                SyncEntityType = "SyncResetV1"
	SyncEntityTypeSyncCompleteV1             SyncEntityType = "SyncCompleteV1"
)

// AllValues returns all SyncEntityType values.
func (SyncEntityType) AllValues() []SyncEntityType {
	return []SyncEntityType{
		SyncEntityTypeAuthUserV1,
		SyncEntityTypeUserV1,
		SyncEntityTypeUserDeleteV1,
		SyncEntityTypeAssetV1,
		SyncEntityTypeAssetDeleteV1,
		SyncEntityTypeAssetExifV1,
		SyncEntityTypeAssetMetadataV1,
		SyncEntityTypeAssetMetadataDeleteV1,
		SyncEntityTypePartnerV1,
		SyncEntityTypePartnerDeleteV1,
		SyncEntityTypePartnerAssetV1,
		SyncEntityTypePartnerAssetBackfillV1,
		SyncEntityTypePartnerAssetDeleteV1,
		SyncEntityTypePartnerAssetExifV1,
		SyncEntityTypePartnerAssetExifBackfillV1,
		SyncEntityTypePartnerStackBackfillV1,
		SyncEntityTypePartnerStackDeleteV1,
		SyncEntityTypePartnerStackV1,
		SyncEntityTypeAlbumV1,
		SyncEntityTypeAlbumDeleteV1,
		SyncEntityTypeAlbumUserV1,
		SyncEntityTypeAlbumUserBackfillV1,
		SyncEntityTypeAlbumUserDeleteV1,
		SyncEntityTypeAlbumAssetCreateV1,
		SyncEntityTypeAlbumAssetUpdateV1,
		SyncEntityTypeAlbumAssetBackfillV1,
		SyncEntityTypeAlbumAssetExifCreateV1,
		SyncEntityTypeAlbumAssetExifUpdateV1,
		SyncEntityTypeAlbumAssetExifBackfillV1,
		SyncEntityTypeAlbumToAssetV1,
		SyncEntityTypeAlbumToAssetDeleteV1,
		SyncEntityTypeAlbumToAssetBackfillV1,
		SyncEntityTypeMemoryV1,
		SyncEntityTypeMemoryDeleteV1,
		SyncEntityTypeMemoryToAssetV1,
		SyncEntityTypeMemoryToAssetDeleteV1,
		SyncEntityTypeStackV1,
		SyncEntityTypeStackDeleteV1,
		SyncEntityTypePersonV1,
		SyncEntityTypePersonDeleteV1,
		SyncEntityTypeAssetFaceV1,
		SyncEntityTypeAssetFaceDeleteV1,
		SyncEntityTypeUserMetadataV1,
		SyncEntityTypeUserMetadataDeleteV1,
		SyncEntityTypeSyncAckV1,
		SyncEntityTypeSyncResetV1,
		SyncEntityTypeSyncCompleteV1,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s SyncEntityType) MarshalText() ([]byte, error) {
	switch s {
	case SyncEntityTypeAuthUserV1:
		return []byte(s), nil
	case SyncEntityTypeUserV1:
		return []byte(s), nil
	case SyncEntityTypeUserDeleteV1:
		return []byte(s), nil
	case SyncEntityTypeAssetV1:
		return []byte(s), nil
	case SyncEntityTypeAssetDeleteV1:
		return []byte(s), nil
	case SyncEntityTypeAssetExifV1:
		return []byte(s), nil
	case SyncEntityTypeAssetMetadataV1:
		return []byte(s), nil
	case SyncEntityTypeAssetMetadataDeleteV1:
		return []byte(s), nil
	case SyncEntityTypePartnerV1:
		return []byte(s), nil
	case SyncEntityTypePartnerDeleteV1:
		return []byte(s), nil
	case SyncEntityTypePartnerAssetV1:
		return []byte(s), nil
	case SyncEntityTypePartnerAssetBackfillV1:
		return []byte(s), nil
	case SyncEntityTypePartnerAssetDeleteV1:
		return []byte(s), nil
	case SyncEntityTypePartnerAssetExifV1:
		return []byte(s), nil
	case SyncEntityTypePartnerAssetExifBackfillV1:
		return []byte(s), nil
	case SyncEntityTypePartnerStackBackfillV1:
		return []byte(s), nil
	case SyncEntityTypePartnerStackDeleteV1:
		return []byte(s), nil
	case SyncEntityTypePartnerStackV1:
		return []byte(s), nil
	case SyncEntityTypeAlbumV1:
		return []byte(s), nil
	case SyncEntityTypeAlbumDeleteV1:
		return []byte(s), nil
	case SyncEntityTypeAlbumUserV1:
		return []byte(s), nil
	case SyncEntityTypeAlbumUserBackfillV1:
		return []byte(s), nil
	case SyncEntityTypeAlbumUserDeleteV1:
		return []byte(s), nil
	case SyncEntityTypeAlbumAssetCreateV1:
		return []byte(s), nil
	case SyncEntityTypeAlbumAssetUpdateV1:
		return []byte(s), nil
	case SyncEntityTypeAlbumAssetBackfillV1:
		return []byte(s), nil
	case SyncEntityTypeAlbumAssetExifCreateV1:
		return []byte(s), nil
	case SyncEntityTypeAlbumAssetExifUpdateV1:
		return []byte(s), nil
	case SyncEntityTypeAlbumAssetExifBackfillV1:
		return []byte(s), nil
	case SyncEntityTypeAlbumToAssetV1:
		return []byte(s), nil
	case SyncEntityTypeAlbumToAssetDeleteV1:
		return []byte(s), nil
	case SyncEntityTypeAlbumToAssetBackfillV1:
		return []byte(s), nil
	case SyncEntityTypeMemoryV1:
		return []byte(s), nil
	case SyncEntityTypeMemoryDeleteV1:
		return []byte(s), nil
	case SyncEntityTypeMemoryToAssetV1:
		return []byte(s), nil
	case SyncEntityTypeMemoryToAssetDeleteV1:
		return []byte(s), nil
	case SyncEntityTypeStackV1:
		return []byte(s), nil
	case SyncEntityTypeStackDeleteV1:
		return []byte(s), nil
	case SyncEntityTypePersonV1:
		return []byte(s), nil
	case SyncEntityTypePersonDeleteV1:
		return []byte(s), nil
	case SyncEntityTypeAssetFaceV1:
		return []byte(s), nil
	case SyncEntityTypeAssetFaceDeleteV1:
		return []byte(s), nil
	case SyncEntityTypeUserMetadataV1:
		return []byte(s), nil
	case SyncEntityTypeUserMetadataDeleteV1:
		return []byte(s), nil
	case SyncEntityTypeSyncAckV1:
		return []byte(s), nil
	case SyncEntityTypeSyncResetV1:
		return []byte(s), nil
	case SyncEntityTypeSyncCompleteV1:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *SyncEntityType) UnmarshalText(data []byte) error {
	switch SyncEntityType(data) {
	case SyncEntityTypeAuthUserV1:
		*s = SyncEntityTypeAuthUserV1
		return nil
	case SyncEntityTypeUserV1:
		*s = SyncEntityTypeUserV1
		return nil
	case SyncEntityTypeUserDeleteV1:
		*s = SyncEntityTypeUserDeleteV1
		return nil
	case SyncEntityTypeAssetV1:
		*s = SyncEntityTypeAssetV1
		return nil
	case SyncEntityTypeAssetDeleteV1:
		*s = SyncEntityTypeAssetDeleteV1
		return nil
	case SyncEntityTypeAssetExifV1:
		*s = SyncEntityTypeAssetExifV1
		return nil
	case SyncEntityTypeAssetMetadataV1:
		*s = SyncEntityTypeAssetMetadataV1
		return nil
	case SyncEntityTypeAssetMetadataDeleteV1:
		*s = SyncEntityTypeAssetMetadataDeleteV1
		return nil
	case SyncEntityTypePartnerV1:
		*s = SyncEntityTypePartnerV1
		return nil
	case SyncEntityTypePartnerDeleteV1:
		*s = SyncEntityTypePartnerDeleteV1
		return nil
	case SyncEntityTypePartnerAssetV1:
		*s = SyncEntityTypePartnerAssetV1
		return nil
	case SyncEntityTypePartnerAssetBackfillV1:
		*s = SyncEntityTypePartnerAssetBackfillV1
		return nil
	case SyncEntityTypePartnerAssetDeleteV1:
		*s = SyncEntityTypePartnerAssetDeleteV1
		return nil
	case SyncEntityTypePartnerAssetExifV1:
		*s = SyncEntityTypePartnerAssetExifV1
		return nil
	case SyncEntityTypePartnerAssetExifBackfillV1:
		*s = SyncEntityTypePartnerAssetExifBackfillV1
		return nil
	case SyncEntityTypePartnerStackBackfillV1:
		*s = SyncEntityTypePartnerStackBackfillV1
		return nil
	case SyncEntityTypePartnerStackDeleteV1:
		*s = SyncEntityTypePartnerStackDeleteV1
		return nil
	case SyncEntityTypePartnerStackV1:
		*s = SyncEntityTypePartnerStackV1
		return nil
	case SyncEntityTypeAlbumV1:
		*s = SyncEntityTypeAlbumV1
		return nil
	case SyncEntityTypeAlbumDeleteV1:
		*s = SyncEntityTypeAlbumDeleteV1
		return nil
	case SyncEntityTypeAlbumUserV1:
		*s = SyncEntityTypeAlbumUserV1
		return nil
	case SyncEntityTypeAlbumUserBackfillV1:
		*s = SyncEntityTypeAlbumUserBackfillV1
		return nil
	case SyncEntityTypeAlbumUserDeleteV1:
		*s = SyncEntityTypeAlbumUserDeleteV1
		return nil
	case SyncEntityTypeAlbumAssetCreateV1:
		*s = SyncEntityTypeAlbumAssetCreateV1
		return nil
	case SyncEntityTypeAlbumAssetUpdateV1:
		*s = SyncEntityTypeAlbumAssetUpdateV1
		return nil
	case SyncEntityTypeAlbumAssetBackfillV1:
		*s = SyncEntityTypeAlbumAssetBackfillV1
		return nil
	case SyncEntityTypeAlbumAssetExifCreateV1:
		*s = SyncEntityTypeAlbumAssetExifCreateV1
		return nil
	case SyncEntityTypeAlbumAssetExifUpdateV1:
		*s = SyncEntityTypeAlbumAssetExifUpdateV1
		return nil
	case SyncEntityTypeAlbumAssetExifBackfillV1:
		*s = SyncEntityTypeAlbumAssetExifBackfillV1
		return nil
	case SyncEntityTypeAlbumToAssetV1:
		*s = SyncEntityTypeAlbumToAssetV1
		return nil
	case SyncEntityTypeAlbumToAssetDeleteV1:
		*s = SyncEntityTypeAlbumToAssetDeleteV1
		return nil
	case SyncEntityTypeAlbumToAssetBackfillV1:
		*s = SyncEntityTypeAlbumToAssetBackfillV1
		return nil
	case SyncEntityTypeMemoryV1:
		*s = SyncEntityTypeMemoryV1
		return nil
	case SyncEntityTypeMemoryDeleteV1:
		*s = SyncEntityTypeMemoryDeleteV1
		return nil
	case SyncEntityTypeMemoryToAssetV1:
		*s = SyncEntityTypeMemoryToAssetV1
		return nil
	case SyncEntityTypeMemoryToAssetDeleteV1:
		*s = SyncEntityTypeMemoryToAssetDeleteV1
		return nil
	case SyncEntityTypeStackV1:
		*s = SyncEntityTypeStackV1
		return nil
	case SyncEntityTypeStackDeleteV1:
		*s = SyncEntityTypeStackDeleteV1
		return nil
	case SyncEntityTypePersonV1:
		*s = SyncEntityTypePersonV1
		return nil
	case SyncEntityTypePersonDeleteV1:
		*s = SyncEntityTypePersonDeleteV1
		return nil
	case SyncEntityTypeAssetFaceV1:
		*s = SyncEntityTypeAssetFaceV1
		return nil
	case SyncEntityTypeAssetFaceDeleteV1:
		*s = SyncEntityTypeAssetFaceDeleteV1
		return nil
	case SyncEntityTypeUserMetadataV1:
		*s = SyncEntityTypeUserMetadataV1
		return nil
	case SyncEntityTypeUserMetadataDeleteV1:
		*s = SyncEntityTypeUserMetadataDeleteV1
		return nil
	case SyncEntityTypeSyncAckV1:
		*s = SyncEntityTypeSyncAckV1
		return nil
	case SyncEntityTypeSyncResetV1:
		*s = SyncEntityTypeSyncResetV1
		return nil
	case SyncEntityTypeSyncCompleteV1:
		*s = SyncEntityTypeSyncCompleteV1
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/SyncRequestType
type SyncRequestType string

const (
	SyncRequestTypeAlbumsV1            SyncRequestType = "AlbumsV1"
	SyncRequestTypeAlbumUsersV1        SyncRequestType = "AlbumUsersV1"
	SyncRequestTypeAlbumToAssetsV1     SyncRequestType = "AlbumToAssetsV1"
	SyncRequestTypeAlbumAssetsV1       SyncRequestType = "AlbumAssetsV1"
	SyncRequestTypeAlbumAssetExifsV1   SyncRequestType = "AlbumAssetExifsV1"
	SyncRequestTypeAssetsV1            SyncRequestType = "AssetsV1"
	SyncRequestTypeAssetExifsV1        SyncRequestType = "AssetExifsV1"
	SyncRequestTypeAssetMetadataV1     SyncRequestType = "AssetMetadataV1"
	SyncRequestTypeAuthUsersV1         SyncRequestType = "AuthUsersV1"
	SyncRequestTypeMemoriesV1          SyncRequestType = "MemoriesV1"
	SyncRequestTypeMemoryToAssetsV1    SyncRequestType = "MemoryToAssetsV1"
	SyncRequestTypePartnersV1          SyncRequestType = "PartnersV1"
	SyncRequestTypePartnerAssetsV1     SyncRequestType = "PartnerAssetsV1"
	SyncRequestTypePartnerAssetExifsV1 SyncRequestType = "PartnerAssetExifsV1"
	SyncRequestTypePartnerStacksV1     SyncRequestType = "PartnerStacksV1"
	SyncRequestTypeStacksV1            SyncRequestType = "StacksV1"
	SyncRequestTypeUsersV1             SyncRequestType = "UsersV1"
	SyncRequestTypePeopleV1            SyncRequestType = "PeopleV1"
	SyncRequestTypeAssetFacesV1        SyncRequestType = "AssetFacesV1"
	SyncRequestTypeUserMetadataV1      SyncRequestType = "UserMetadataV1"
)

// AllValues returns all SyncRequestType values.
func (SyncRequestType) AllValues() []SyncRequestType {
	return []SyncRequestType{
		SyncRequestTypeAlbumsV1,
		SyncRequestTypeAlbumUsersV1,
		SyncRequestTypeAlbumToAssetsV1,
		SyncRequestTypeAlbumAssetsV1,
		SyncRequestTypeAlbumAssetExifsV1,
		SyncRequestTypeAssetsV1,
		SyncRequestTypeAssetExifsV1,
		SyncRequestTypeAssetMetadataV1,
		SyncRequestTypeAuthUsersV1,
		SyncRequestTypeMemoriesV1,
		SyncRequestTypeMemoryToAssetsV1,
		SyncRequestTypePartnersV1,
		SyncRequestTypePartnerAssetsV1,
		SyncRequestTypePartnerAssetExifsV1,
		SyncRequestTypePartnerStacksV1,
		SyncRequestTypeStacksV1,
		SyncRequestTypeUsersV1,
		SyncRequestTypePeopleV1,
		SyncRequestTypeAssetFacesV1,
		SyncRequestTypeUserMetadataV1,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s SyncRequestType) MarshalText() ([]byte, error) {
	switch s {
	case SyncRequestTypeAlbumsV1:
		return []byte(s), nil
	case SyncRequestTypeAlbumUsersV1:
		return []byte(s), nil
	case SyncRequestTypeAlbumToAssetsV1:
		return []byte(s), nil
	case SyncRequestTypeAlbumAssetsV1:
		return []byte(s), nil
	case SyncRequestTypeAlbumAssetExifsV1:
		return []byte(s), nil
	case SyncRequestTypeAssetsV1:
		return []byte(s), nil
	case SyncRequestTypeAssetExifsV1:
		return []byte(s), nil
	case SyncRequestTypeAssetMetadataV1:
		return []byte(s), nil
	case SyncRequestTypeAuthUsersV1:
		return []byte(s), nil
	case SyncRequestTypeMemoriesV1:
		return []byte(s), nil
	case SyncRequestTypeMemoryToAssetsV1:
		return []byte(s), nil
	case SyncRequestTypePartnersV1:
		return []byte(s), nil
	case SyncRequestTypePartnerAssetsV1:
		return []byte(s), nil
	case SyncRequestTypePartnerAssetExifsV1:
		return []byte(s), nil
	case SyncRequestTypePartnerStacksV1:
		return []byte(s), nil
	case SyncRequestTypeStacksV1:
		return []byte(s), nil
	case SyncRequestTypeUsersV1:
		return []byte(s), nil
	case SyncRequestTypePeopleV1:
		return []byte(s), nil
	case SyncRequestTypeAssetFacesV1:
		return []byte(s), nil
	case SyncRequestTypeUserMetadataV1:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *SyncRequestType) UnmarshalText(data []byte) error {
	switch SyncRequestType(data) {
	case SyncRequestTypeAlbumsV1:
		*s = SyncRequestTypeAlbumsV1
		return nil
	case SyncRequestTypeAlbumUsersV1:
		*s = SyncRequestTypeAlbumUsersV1
		return nil
	case SyncRequestTypeAlbumToAssetsV1:
		*s = SyncRequestTypeAlbumToAssetsV1
		return nil
	case SyncRequestTypeAlbumAssetsV1:
		*s = SyncRequestTypeAlbumAssetsV1
		return nil
	case SyncRequestTypeAlbumAssetExifsV1:
		*s = SyncRequestTypeAlbumAssetExifsV1
		return nil
	case SyncRequestTypeAssetsV1:
		*s = SyncRequestTypeAssetsV1
		return nil
	case SyncRequestTypeAssetExifsV1:
		*s = SyncRequestTypeAssetExifsV1
		return nil
	case SyncRequestTypeAssetMetadataV1:
		*s = SyncRequestTypeAssetMetadataV1
		return nil
	case SyncRequestTypeAuthUsersV1:
		*s = SyncRequestTypeAuthUsersV1
		return nil
	case SyncRequestTypeMemoriesV1:
		*s = SyncRequestTypeMemoriesV1
		return nil
	case SyncRequestTypeMemoryToAssetsV1:
		*s = SyncRequestTypeMemoryToAssetsV1
		return nil
	case SyncRequestTypePartnersV1:
		*s = SyncRequestTypePartnersV1
		return nil
	case SyncRequestTypePartnerAssetsV1:
		*s = SyncRequestTypePartnerAssetsV1
		return nil
	case SyncRequestTypePartnerAssetExifsV1:
		*s = SyncRequestTypePartnerAssetExifsV1
		return nil
	case SyncRequestTypePartnerStacksV1:
		*s = SyncRequestTypePartnerStacksV1
		return nil
	case SyncRequestTypeStacksV1:
		*s = SyncRequestTypeStacksV1
		return nil
	case SyncRequestTypeUsersV1:
		*s = SyncRequestTypeUsersV1
		return nil
	case SyncRequestTypePeopleV1:
		*s = SyncRequestTypePeopleV1
		return nil
	case SyncRequestTypeAssetFacesV1:
		*s = SyncRequestTypeAssetFacesV1
		return nil
	case SyncRequestTypeUserMetadataV1:
		*s = SyncRequestTypeUserMetadataV1
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/SyncStreamDto
type SyncStreamDto struct {
	Reset OptBool           `json:"reset"`
	Types []SyncRequestType `json:"types"`
}

// GetReset returns the value of Reset.
func (s *SyncStreamDto) GetReset() OptBool {
	return s.Reset
}

// GetTypes returns the value of Types.
func (s *SyncStreamDto) GetTypes() []SyncRequestType {
	return s.Types
}

// SetReset sets the value of Reset.
func (s *SyncStreamDto) SetReset(val OptBool) {
	s.Reset = val
}

// SetTypes sets the value of Types.
func (s *SyncStreamDto) SetTypes(val []SyncRequestType) {
	s.Types = val
}

// Ref: #/components/schemas/SystemConfigBackupsDto
type SystemConfigBackupsDto struct {
	Database DatabaseBackupConfig `json:"database"`
}

// GetDatabase returns the value of Database.
func (s *SystemConfigBackupsDto) GetDatabase() DatabaseBackupConfig {
	return s.Database
}

// SetDatabase sets the value of Database.
func (s *SystemConfigBackupsDto) SetDatabase(val DatabaseBackupConfig) {
	s.Database = val
}

// Ref: #/components/schemas/SystemConfigDto
type SystemConfigDto struct {
	Backup           SystemConfigBackupsDto          `json:"backup"`
	Ffmpeg           SystemConfigFFmpegDto           `json:"ffmpeg"`
	Image            SystemConfigImageDto            `json:"image"`
	Job              SystemConfigJobDto              `json:"job"`
	Library          SystemConfigLibraryDto          `json:"library"`
	Logging          SystemConfigLoggingDto          `json:"logging"`
	MachineLearning  SystemConfigMachineLearningDto  `json:"machineLearning"`
	Map              SystemConfigMapDto              `json:"map"`
	Metadata         SystemConfigMetadataDto         `json:"metadata"`
	NewVersionCheck  SystemConfigNewVersionCheckDto  `json:"newVersionCheck"`
	NightlyTasks     SystemConfigNightlyTasksDto     `json:"nightlyTasks"`
	Notifications    SystemConfigNotificationsDto    `json:"notifications"`
	OAuth            SystemConfigOAuthDto            `json:"oauth"`
	PasswordLogin    SystemConfigPasswordLoginDto    `json:"passwordLogin"`
	ReverseGeocoding SystemConfigReverseGeocodingDto `json:"reverseGeocoding"`
	Server           SystemConfigServerDto           `json:"server"`
	StorageTemplate  SystemConfigStorageTemplateDto  `json:"storageTemplate"`
	Templates        SystemConfigTemplatesDto        `json:"templates"`
	Theme            SystemConfigThemeDto            `json:"theme"`
	Trash            SystemConfigTrashDto            `json:"trash"`
	User             SystemConfigUserDto             `json:"user"`
}

// GetBackup returns the value of Backup.
func (s *SystemConfigDto) GetBackup() SystemConfigBackupsDto {
	return s.Backup
}

// GetFfmpeg returns the value of Ffmpeg.
func (s *SystemConfigDto) GetFfmpeg() SystemConfigFFmpegDto {
	return s.Ffmpeg
}

// GetImage returns the value of Image.
func (s *SystemConfigDto) GetImage() SystemConfigImageDto {
	return s.Image
}

// GetJob returns the value of Job.
func (s *SystemConfigDto) GetJob() SystemConfigJobDto {
	return s.Job
}

// GetLibrary returns the value of Library.
func (s *SystemConfigDto) GetLibrary() SystemConfigLibraryDto {
	return s.Library
}

// GetLogging returns the value of Logging.
func (s *SystemConfigDto) GetLogging() SystemConfigLoggingDto {
	return s.Logging
}

// GetMachineLearning returns the value of MachineLearning.
func (s *SystemConfigDto) GetMachineLearning() SystemConfigMachineLearningDto {
	return s.MachineLearning
}

// GetMap returns the value of Map.
func (s *SystemConfigDto) GetMap() SystemConfigMapDto {
	return s.Map
}

// GetMetadata returns the value of Metadata.
func (s *SystemConfigDto) GetMetadata() SystemConfigMetadataDto {
	return s.Metadata
}

// GetNewVersionCheck returns the value of NewVersionCheck.
func (s *SystemConfigDto) GetNewVersionCheck() SystemConfigNewVersionCheckDto {
	return s.NewVersionCheck
}

// GetNightlyTasks returns the value of NightlyTasks.
func (s *SystemConfigDto) GetNightlyTasks() SystemConfigNightlyTasksDto {
	return s.NightlyTasks
}

// GetNotifications returns the value of Notifications.
func (s *SystemConfigDto) GetNotifications() SystemConfigNotificationsDto {
	return s.Notifications
}

// GetOAuth returns the value of OAuth.
func (s *SystemConfigDto) GetOAuth() SystemConfigOAuthDto {
	return s.OAuth
}

// GetPasswordLogin returns the value of PasswordLogin.
func (s *SystemConfigDto) GetPasswordLogin() SystemConfigPasswordLoginDto {
	return s.PasswordLogin
}

// GetReverseGeocoding returns the value of ReverseGeocoding.
func (s *SystemConfigDto) GetReverseGeocoding() SystemConfigReverseGeocodingDto {
	return s.ReverseGeocoding
}

// GetServer returns the value of Server.
func (s *SystemConfigDto) GetServer() SystemConfigServerDto {
	return s.Server
}

// GetStorageTemplate returns the value of StorageTemplate.
func (s *SystemConfigDto) GetStorageTemplate() SystemConfigStorageTemplateDto {
	return s.StorageTemplate
}

// GetTemplates returns the value of Templates.
func (s *SystemConfigDto) GetTemplates() SystemConfigTemplatesDto {
	return s.Templates
}

// GetTheme returns the value of Theme.
func (s *SystemConfigDto) GetTheme() SystemConfigThemeDto {
	return s.Theme
}

// GetTrash returns the value of Trash.
func (s *SystemConfigDto) GetTrash() SystemConfigTrashDto {
	return s.Trash
}

// GetUser returns the value of User.
func (s *SystemConfigDto) GetUser() SystemConfigUserDto {
	return s.User
}

// SetBackup sets the value of Backup.
func (s *SystemConfigDto) SetBackup(val SystemConfigBackupsDto) {
	s.Backup = val
}

// SetFfmpeg sets the value of Ffmpeg.
func (s *SystemConfigDto) SetFfmpeg(val SystemConfigFFmpegDto) {
	s.Ffmpeg = val
}

// SetImage sets the value of Image.
func (s *SystemConfigDto) SetImage(val SystemConfigImageDto) {
	s.Image = val
}

// SetJob sets the value of Job.
func (s *SystemConfigDto) SetJob(val SystemConfigJobDto) {
	s.Job = val
}

// SetLibrary sets the value of Library.
func (s *SystemConfigDto) SetLibrary(val SystemConfigLibraryDto) {
	s.Library = val
}

// SetLogging sets the value of Logging.
func (s *SystemConfigDto) SetLogging(val SystemConfigLoggingDto) {
	s.Logging = val
}

// SetMachineLearning sets the value of MachineLearning.
func (s *SystemConfigDto) SetMachineLearning(val SystemConfigMachineLearningDto) {
	s.MachineLearning = val
}

// SetMap sets the value of Map.
func (s *SystemConfigDto) SetMap(val SystemConfigMapDto) {
	s.Map = val
}

// SetMetadata sets the value of Metadata.
func (s *SystemConfigDto) SetMetadata(val SystemConfigMetadataDto) {
	s.Metadata = val
}

// SetNewVersionCheck sets the value of NewVersionCheck.
func (s *SystemConfigDto) SetNewVersionCheck(val SystemConfigNewVersionCheckDto) {
	s.NewVersionCheck = val
}

// SetNightlyTasks sets the value of NightlyTasks.
func (s *SystemConfigDto) SetNightlyTasks(val SystemConfigNightlyTasksDto) {
	s.NightlyTasks = val
}

// SetNotifications sets the value of Notifications.
func (s *SystemConfigDto) SetNotifications(val SystemConfigNotificationsDto) {
	s.Notifications = val
}

// SetOAuth sets the value of OAuth.
func (s *SystemConfigDto) SetOAuth(val SystemConfigOAuthDto) {
	s.OAuth = val
}

// SetPasswordLogin sets the value of PasswordLogin.
func (s *SystemConfigDto) SetPasswordLogin(val SystemConfigPasswordLoginDto) {
	s.PasswordLogin = val
}

// SetReverseGeocoding sets the value of ReverseGeocoding.
func (s *SystemConfigDto) SetReverseGeocoding(val SystemConfigReverseGeocodingDto) {
	s.ReverseGeocoding = val
}

// SetServer sets the value of Server.
func (s *SystemConfigDto) SetServer(val SystemConfigServerDto) {
	s.Server = val
}

// SetStorageTemplate sets the value of StorageTemplate.
func (s *SystemConfigDto) SetStorageTemplate(val SystemConfigStorageTemplateDto) {
	s.StorageTemplate = val
}

// SetTemplates sets the value of Templates.
func (s *SystemConfigDto) SetTemplates(val SystemConfigTemplatesDto) {
	s.Templates = val
}

// SetTheme sets the value of Theme.
func (s *SystemConfigDto) SetTheme(val SystemConfigThemeDto) {
	s.Theme = val
}

// SetTrash sets the value of Trash.
func (s *SystemConfigDto) SetTrash(val SystemConfigTrashDto) {
	s.Trash = val
}

// SetUser sets the value of User.
func (s *SystemConfigDto) SetUser(val SystemConfigUserDto) {
	s.User = val
}

// Ref: #/components/schemas/SystemConfigFFmpegDto
type SystemConfigFFmpegDto struct {
	Accel               TranscodeHWAccel `json:"accel"`
	AccelDecode         bool             `json:"accelDecode"`
	AcceptedAudioCodecs []AudioCodec     `json:"acceptedAudioCodecs"`
	AcceptedContainers  []VideoContainer `json:"acceptedContainers"`
	AcceptedVideoCodecs []VideoCodec     `json:"acceptedVideoCodecs"`
	Bframes             int              `json:"bframes"`
	CqMode              CQMode           `json:"cqMode"`
	Crf                 int              `json:"crf"`
	GopSize             int              `json:"gopSize"`
	MaxBitrate          string           `json:"maxBitrate"`
	PreferredHwDevice   string           `json:"preferredHwDevice"`
	Preset              string           `json:"preset"`
	Refs                int              `json:"refs"`
	TargetAudioCodec    AudioCodec       `json:"targetAudioCodec"`
	TargetResolution    string           `json:"targetResolution"`
	TargetVideoCodec    VideoCodec       `json:"targetVideoCodec"`
	TemporalAQ          bool             `json:"temporalAQ"`
	Threads             int              `json:"threads"`
	Tonemap             ToneMapping      `json:"tonemap"`
	Transcode           TranscodePolicy  `json:"transcode"`
	TwoPass             bool             `json:"twoPass"`
}

// GetAccel returns the value of Accel.
func (s *SystemConfigFFmpegDto) GetAccel() TranscodeHWAccel {
	return s.Accel
}

// GetAccelDecode returns the value of AccelDecode.
func (s *SystemConfigFFmpegDto) GetAccelDecode() bool {
	return s.AccelDecode
}

// GetAcceptedAudioCodecs returns the value of AcceptedAudioCodecs.
func (s *SystemConfigFFmpegDto) GetAcceptedAudioCodecs() []AudioCodec {
	return s.AcceptedAudioCodecs
}

// GetAcceptedContainers returns the value of AcceptedContainers.
func (s *SystemConfigFFmpegDto) GetAcceptedContainers() []VideoContainer {
	return s.AcceptedContainers
}

// GetAcceptedVideoCodecs returns the value of AcceptedVideoCodecs.
func (s *SystemConfigFFmpegDto) GetAcceptedVideoCodecs() []VideoCodec {
	return s.AcceptedVideoCodecs
}

// GetBframes returns the value of Bframes.
func (s *SystemConfigFFmpegDto) GetBframes() int {
	return s.Bframes
}

// GetCqMode returns the value of CqMode.
func (s *SystemConfigFFmpegDto) GetCqMode() CQMode {
	return s.CqMode
}

// GetCrf returns the value of Crf.
func (s *SystemConfigFFmpegDto) GetCrf() int {
	return s.Crf
}

// GetGopSize returns the value of GopSize.
func (s *SystemConfigFFmpegDto) GetGopSize() int {
	return s.GopSize
}

// GetMaxBitrate returns the value of MaxBitrate.
func (s *SystemConfigFFmpegDto) GetMaxBitrate() string {
	return s.MaxBitrate
}

// GetPreferredHwDevice returns the value of PreferredHwDevice.
func (s *SystemConfigFFmpegDto) GetPreferredHwDevice() string {
	return s.PreferredHwDevice
}

// GetPreset returns the value of Preset.
func (s *SystemConfigFFmpegDto) GetPreset() string {
	return s.Preset
}

// GetRefs returns the value of Refs.
func (s *SystemConfigFFmpegDto) GetRefs() int {
	return s.Refs
}

// GetTargetAudioCodec returns the value of TargetAudioCodec.
func (s *SystemConfigFFmpegDto) GetTargetAudioCodec() AudioCodec {
	return s.TargetAudioCodec
}

// GetTargetResolution returns the value of TargetResolution.
func (s *SystemConfigFFmpegDto) GetTargetResolution() string {
	return s.TargetResolution
}

// GetTargetVideoCodec returns the value of TargetVideoCodec.
func (s *SystemConfigFFmpegDto) GetTargetVideoCodec() VideoCodec {
	return s.TargetVideoCodec
}

// GetTemporalAQ returns the value of TemporalAQ.
func (s *SystemConfigFFmpegDto) GetTemporalAQ() bool {
	return s.TemporalAQ
}

// GetThreads returns the value of Threads.
func (s *SystemConfigFFmpegDto) GetThreads() int {
	return s.Threads
}

// GetTonemap returns the value of Tonemap.
func (s *SystemConfigFFmpegDto) GetTonemap() ToneMapping {
	return s.Tonemap
}

// GetTranscode returns the value of Transcode.
func (s *SystemConfigFFmpegDto) GetTranscode() TranscodePolicy {
	return s.Transcode
}

// GetTwoPass returns the value of TwoPass.
func (s *SystemConfigFFmpegDto) GetTwoPass() bool {
	return s.TwoPass
}

// SetAccel sets the value of Accel.
func (s *SystemConfigFFmpegDto) SetAccel(val TranscodeHWAccel) {
	s.Accel = val
}

// SetAccelDecode sets the value of AccelDecode.
func (s *SystemConfigFFmpegDto) SetAccelDecode(val bool) {
	s.AccelDecode = val
}

// SetAcceptedAudioCodecs sets the value of AcceptedAudioCodecs.
func (s *SystemConfigFFmpegDto) SetAcceptedAudioCodecs(val []AudioCodec) {
	s.AcceptedAudioCodecs = val
}

// SetAcceptedContainers sets the value of AcceptedContainers.
func (s *SystemConfigFFmpegDto) SetAcceptedContainers(val []VideoContainer) {
	s.AcceptedContainers = val
}

// SetAcceptedVideoCodecs sets the value of AcceptedVideoCodecs.
func (s *SystemConfigFFmpegDto) SetAcceptedVideoCodecs(val []VideoCodec) {
	s.AcceptedVideoCodecs = val
}

// SetBframes sets the value of Bframes.
func (s *SystemConfigFFmpegDto) SetBframes(val int) {
	s.Bframes = val
}

// SetCqMode sets the value of CqMode.
func (s *SystemConfigFFmpegDto) SetCqMode(val CQMode) {
	s.CqMode = val
}

// SetCrf sets the value of Crf.
func (s *SystemConfigFFmpegDto) SetCrf(val int) {
	s.Crf = val
}

// SetGopSize sets the value of GopSize.
func (s *SystemConfigFFmpegDto) SetGopSize(val int) {
	s.GopSize = val
}

// SetMaxBitrate sets the value of MaxBitrate.
func (s *SystemConfigFFmpegDto) SetMaxBitrate(val string) {
	s.MaxBitrate = val
}

// SetPreferredHwDevice sets the value of PreferredHwDevice.
func (s *SystemConfigFFmpegDto) SetPreferredHwDevice(val string) {
	s.PreferredHwDevice = val
}

// SetPreset sets the value of Preset.
func (s *SystemConfigFFmpegDto) SetPreset(val string) {
	s.Preset = val
}

// SetRefs sets the value of Refs.
func (s *SystemConfigFFmpegDto) SetRefs(val int) {
	s.Refs = val
}

// SetTargetAudioCodec sets the value of TargetAudioCodec.
func (s *SystemConfigFFmpegDto) SetTargetAudioCodec(val AudioCodec) {
	s.TargetAudioCodec = val
}

// SetTargetResolution sets the value of TargetResolution.
func (s *SystemConfigFFmpegDto) SetTargetResolution(val string) {
	s.TargetResolution = val
}

// SetTargetVideoCodec sets the value of TargetVideoCodec.
func (s *SystemConfigFFmpegDto) SetTargetVideoCodec(val VideoCodec) {
	s.TargetVideoCodec = val
}

// SetTemporalAQ sets the value of TemporalAQ.
func (s *SystemConfigFFmpegDto) SetTemporalAQ(val bool) {
	s.TemporalAQ = val
}

// SetThreads sets the value of Threads.
func (s *SystemConfigFFmpegDto) SetThreads(val int) {
	s.Threads = val
}

// SetTonemap sets the value of Tonemap.
func (s *SystemConfigFFmpegDto) SetTonemap(val ToneMapping) {
	s.Tonemap = val
}

// SetTranscode sets the value of Transcode.
func (s *SystemConfigFFmpegDto) SetTranscode(val TranscodePolicy) {
	s.Transcode = val
}

// SetTwoPass sets the value of TwoPass.
func (s *SystemConfigFFmpegDto) SetTwoPass(val bool) {
	s.TwoPass = val
}

// Ref: #/components/schemas/SystemConfigFacesDto
type SystemConfigFacesDto struct {
	Import bool `json:"import"`
}

// GetImport returns the value of Import.
func (s *SystemConfigFacesDto) GetImport() bool {
	return s.Import
}

// SetImport sets the value of Import.
func (s *SystemConfigFacesDto) SetImport(val bool) {
	s.Import = val
}

// Ref: #/components/schemas/SystemConfigGeneratedFullsizeImageDto
type SystemConfigGeneratedFullsizeImageDto struct {
	Enabled bool        `json:"enabled"`
	Format  ImageFormat `json:"format"`
	Quality int         `json:"quality"`
}

// GetEnabled returns the value of Enabled.
func (s *SystemConfigGeneratedFullsizeImageDto) GetEnabled() bool {
	return s.Enabled
}

// GetFormat returns the value of Format.
func (s *SystemConfigGeneratedFullsizeImageDto) GetFormat() ImageFormat {
	return s.Format
}

// GetQuality returns the value of Quality.
func (s *SystemConfigGeneratedFullsizeImageDto) GetQuality() int {
	return s.Quality
}

// SetEnabled sets the value of Enabled.
func (s *SystemConfigGeneratedFullsizeImageDto) SetEnabled(val bool) {
	s.Enabled = val
}

// SetFormat sets the value of Format.
func (s *SystemConfigGeneratedFullsizeImageDto) SetFormat(val ImageFormat) {
	s.Format = val
}

// SetQuality sets the value of Quality.
func (s *SystemConfigGeneratedFullsizeImageDto) SetQuality(val int) {
	s.Quality = val
}

// Ref: #/components/schemas/SystemConfigGeneratedImageDto
type SystemConfigGeneratedImageDto struct {
	Format  ImageFormat `json:"format"`
	Quality int         `json:"quality"`
	Size    int         `json:"size"`
}

// GetFormat returns the value of Format.
func (s *SystemConfigGeneratedImageDto) GetFormat() ImageFormat {
	return s.Format
}

// GetQuality returns the value of Quality.
func (s *SystemConfigGeneratedImageDto) GetQuality() int {
	return s.Quality
}

// GetSize returns the value of Size.
func (s *SystemConfigGeneratedImageDto) GetSize() int {
	return s.Size
}

// SetFormat sets the value of Format.
func (s *SystemConfigGeneratedImageDto) SetFormat(val ImageFormat) {
	s.Format = val
}

// SetQuality sets the value of Quality.
func (s *SystemConfigGeneratedImageDto) SetQuality(val int) {
	s.Quality = val
}

// SetSize sets the value of Size.
func (s *SystemConfigGeneratedImageDto) SetSize(val int) {
	s.Size = val
}

// Ref: #/components/schemas/SystemConfigImageDto
type SystemConfigImageDto struct {
	Colorspace      Colorspace                            `json:"colorspace"`
	ExtractEmbedded bool                                  `json:"extractEmbedded"`
	Fullsize        SystemConfigGeneratedFullsizeImageDto `json:"fullsize"`
	Preview         SystemConfigGeneratedImageDto         `json:"preview"`
	Thumbnail       SystemConfigGeneratedImageDto         `json:"thumbnail"`
}

// GetColorspace returns the value of Colorspace.
func (s *SystemConfigImageDto) GetColorspace() Colorspace {
	return s.Colorspace
}

// GetExtractEmbedded returns the value of ExtractEmbedded.
func (s *SystemConfigImageDto) GetExtractEmbedded() bool {
	return s.ExtractEmbedded
}

// GetFullsize returns the value of Fullsize.
func (s *SystemConfigImageDto) GetFullsize() SystemConfigGeneratedFullsizeImageDto {
	return s.Fullsize
}

// GetPreview returns the value of Preview.
func (s *SystemConfigImageDto) GetPreview() SystemConfigGeneratedImageDto {
	return s.Preview
}

// GetThumbnail returns the value of Thumbnail.
func (s *SystemConfigImageDto) GetThumbnail() SystemConfigGeneratedImageDto {
	return s.Thumbnail
}

// SetColorspace sets the value of Colorspace.
func (s *SystemConfigImageDto) SetColorspace(val Colorspace) {
	s.Colorspace = val
}

// SetExtractEmbedded sets the value of ExtractEmbedded.
func (s *SystemConfigImageDto) SetExtractEmbedded(val bool) {
	s.ExtractEmbedded = val
}

// SetFullsize sets the value of Fullsize.
func (s *SystemConfigImageDto) SetFullsize(val SystemConfigGeneratedFullsizeImageDto) {
	s.Fullsize = val
}

// SetPreview sets the value of Preview.
func (s *SystemConfigImageDto) SetPreview(val SystemConfigGeneratedImageDto) {
	s.Preview = val
}

// SetThumbnail sets the value of Thumbnail.
func (s *SystemConfigImageDto) SetThumbnail(val SystemConfigGeneratedImageDto) {
	s.Thumbnail = val
}

// Ref: #/components/schemas/SystemConfigJobDto
type SystemConfigJobDto struct {
	BackgroundTask      JobSettingsDto `json:"backgroundTask"`
	FaceDetection       JobSettingsDto `json:"faceDetection"`
	Library             JobSettingsDto `json:"library"`
	MetadataExtraction  JobSettingsDto `json:"metadataExtraction"`
	Migration           JobSettingsDto `json:"migration"`
	Notifications       JobSettingsDto `json:"notifications"`
	Search              JobSettingsDto `json:"search"`
	Sidecar             JobSettingsDto `json:"sidecar"`
	SmartSearch         JobSettingsDto `json:"smartSearch"`
	ThumbnailGeneration JobSettingsDto `json:"thumbnailGeneration"`
	VideoConversion     JobSettingsDto `json:"videoConversion"`
}

// GetBackgroundTask returns the value of BackgroundTask.
func (s *SystemConfigJobDto) GetBackgroundTask() JobSettingsDto {
	return s.BackgroundTask
}

// GetFaceDetection returns the value of FaceDetection.
func (s *SystemConfigJobDto) GetFaceDetection() JobSettingsDto {
	return s.FaceDetection
}

// GetLibrary returns the value of Library.
func (s *SystemConfigJobDto) GetLibrary() JobSettingsDto {
	return s.Library
}

// GetMetadataExtraction returns the value of MetadataExtraction.
func (s *SystemConfigJobDto) GetMetadataExtraction() JobSettingsDto {
	return s.MetadataExtraction
}

// GetMigration returns the value of Migration.
func (s *SystemConfigJobDto) GetMigration() JobSettingsDto {
	return s.Migration
}

// GetNotifications returns the value of Notifications.
func (s *SystemConfigJobDto) GetNotifications() JobSettingsDto {
	return s.Notifications
}

// GetSearch returns the value of Search.
func (s *SystemConfigJobDto) GetSearch() JobSettingsDto {
	return s.Search
}

// GetSidecar returns the value of Sidecar.
func (s *SystemConfigJobDto) GetSidecar() JobSettingsDto {
	return s.Sidecar
}

// GetSmartSearch returns the value of SmartSearch.
func (s *SystemConfigJobDto) GetSmartSearch() JobSettingsDto {
	return s.SmartSearch
}

// GetThumbnailGeneration returns the value of ThumbnailGeneration.
func (s *SystemConfigJobDto) GetThumbnailGeneration() JobSettingsDto {
	return s.ThumbnailGeneration
}

// GetVideoConversion returns the value of VideoConversion.
func (s *SystemConfigJobDto) GetVideoConversion() JobSettingsDto {
	return s.VideoConversion
}

// SetBackgroundTask sets the value of BackgroundTask.
func (s *SystemConfigJobDto) SetBackgroundTask(val JobSettingsDto) {
	s.BackgroundTask = val
}

// SetFaceDetection sets the value of FaceDetection.
func (s *SystemConfigJobDto) SetFaceDetection(val JobSettingsDto) {
	s.FaceDetection = val
}

// SetLibrary sets the value of Library.
func (s *SystemConfigJobDto) SetLibrary(val JobSettingsDto) {
	s.Library = val
}

// SetMetadataExtraction sets the value of MetadataExtraction.
func (s *SystemConfigJobDto) SetMetadataExtraction(val JobSettingsDto) {
	s.MetadataExtraction = val
}

// SetMigration sets the value of Migration.
func (s *SystemConfigJobDto) SetMigration(val JobSettingsDto) {
	s.Migration = val
}

// SetNotifications sets the value of Notifications.
func (s *SystemConfigJobDto) SetNotifications(val JobSettingsDto) {
	s.Notifications = val
}

// SetSearch sets the value of Search.
func (s *SystemConfigJobDto) SetSearch(val JobSettingsDto) {
	s.Search = val
}

// SetSidecar sets the value of Sidecar.
func (s *SystemConfigJobDto) SetSidecar(val JobSettingsDto) {
	s.Sidecar = val
}

// SetSmartSearch sets the value of SmartSearch.
func (s *SystemConfigJobDto) SetSmartSearch(val JobSettingsDto) {
	s.SmartSearch = val
}

// SetThumbnailGeneration sets the value of ThumbnailGeneration.
func (s *SystemConfigJobDto) SetThumbnailGeneration(val JobSettingsDto) {
	s.ThumbnailGeneration = val
}

// SetVideoConversion sets the value of VideoConversion.
func (s *SystemConfigJobDto) SetVideoConversion(val JobSettingsDto) {
	s.VideoConversion = val
}

// Ref: #/components/schemas/SystemConfigLibraryDto
type SystemConfigLibraryDto struct {
	Scan  SystemConfigLibraryScanDto  `json:"scan"`
	Watch SystemConfigLibraryWatchDto `json:"watch"`
}

// GetScan returns the value of Scan.
func (s *SystemConfigLibraryDto) GetScan() SystemConfigLibraryScanDto {
	return s.Scan
}

// GetWatch returns the value of Watch.
func (s *SystemConfigLibraryDto) GetWatch() SystemConfigLibraryWatchDto {
	return s.Watch
}

// SetScan sets the value of Scan.
func (s *SystemConfigLibraryDto) SetScan(val SystemConfigLibraryScanDto) {
	s.Scan = val
}

// SetWatch sets the value of Watch.
func (s *SystemConfigLibraryDto) SetWatch(val SystemConfigLibraryWatchDto) {
	s.Watch = val
}

// Ref: #/components/schemas/SystemConfigLibraryScanDto
type SystemConfigLibraryScanDto struct {
	CronExpression string `json:"cronExpression"`
	Enabled        bool   `json:"enabled"`
}

// GetCronExpression returns the value of CronExpression.
func (s *SystemConfigLibraryScanDto) GetCronExpression() string {
	return s.CronExpression
}

// GetEnabled returns the value of Enabled.
func (s *SystemConfigLibraryScanDto) GetEnabled() bool {
	return s.Enabled
}

// SetCronExpression sets the value of CronExpression.
func (s *SystemConfigLibraryScanDto) SetCronExpression(val string) {
	s.CronExpression = val
}

// SetEnabled sets the value of Enabled.
func (s *SystemConfigLibraryScanDto) SetEnabled(val bool) {
	s.Enabled = val
}

// Ref: #/components/schemas/SystemConfigLibraryWatchDto
type SystemConfigLibraryWatchDto struct {
	Enabled bool `json:"enabled"`
}

// GetEnabled returns the value of Enabled.
func (s *SystemConfigLibraryWatchDto) GetEnabled() bool {
	return s.Enabled
}

// SetEnabled sets the value of Enabled.
func (s *SystemConfigLibraryWatchDto) SetEnabled(val bool) {
	s.Enabled = val
}

// Ref: #/components/schemas/SystemConfigLoggingDto
type SystemConfigLoggingDto struct {
	Enabled bool     `json:"enabled"`
	Level   LogLevel `json:"level"`
}

// GetEnabled returns the value of Enabled.
func (s *SystemConfigLoggingDto) GetEnabled() bool {
	return s.Enabled
}

// GetLevel returns the value of Level.
func (s *SystemConfigLoggingDto) GetLevel() LogLevel {
	return s.Level
}

// SetEnabled sets the value of Enabled.
func (s *SystemConfigLoggingDto) SetEnabled(val bool) {
	s.Enabled = val
}

// SetLevel sets the value of Level.
func (s *SystemConfigLoggingDto) SetLevel(val LogLevel) {
	s.Level = val
}

// Ref: #/components/schemas/SystemConfigMachineLearningDto
type SystemConfigMachineLearningDto struct {
	AvailabilityChecks MachineLearningAvailabilityChecksDto `json:"availabilityChecks"`
	Clip               CLIPConfig                           `json:"clip"`
	DuplicateDetection DuplicateDetectionConfig             `json:"duplicateDetection"`
	Enabled            bool                                 `json:"enabled"`
	FacialRecognition  FacialRecognitionConfig              `json:"facialRecognition"`
	Urls               []url.URL                            `json:"urls"`
}

// GetAvailabilityChecks returns the value of AvailabilityChecks.
func (s *SystemConfigMachineLearningDto) GetAvailabilityChecks() MachineLearningAvailabilityChecksDto {
	return s.AvailabilityChecks
}

// GetClip returns the value of Clip.
func (s *SystemConfigMachineLearningDto) GetClip() CLIPConfig {
	return s.Clip
}

// GetDuplicateDetection returns the value of DuplicateDetection.
func (s *SystemConfigMachineLearningDto) GetDuplicateDetection() DuplicateDetectionConfig {
	return s.DuplicateDetection
}

// GetEnabled returns the value of Enabled.
func (s *SystemConfigMachineLearningDto) GetEnabled() bool {
	return s.Enabled
}

// GetFacialRecognition returns the value of FacialRecognition.
func (s *SystemConfigMachineLearningDto) GetFacialRecognition() FacialRecognitionConfig {
	return s.FacialRecognition
}

// GetUrls returns the value of Urls.
func (s *SystemConfigMachineLearningDto) GetUrls() []url.URL {
	return s.Urls
}

// SetAvailabilityChecks sets the value of AvailabilityChecks.
func (s *SystemConfigMachineLearningDto) SetAvailabilityChecks(val MachineLearningAvailabilityChecksDto) {
	s.AvailabilityChecks = val
}

// SetClip sets the value of Clip.
func (s *SystemConfigMachineLearningDto) SetClip(val CLIPConfig) {
	s.Clip = val
}

// SetDuplicateDetection sets the value of DuplicateDetection.
func (s *SystemConfigMachineLearningDto) SetDuplicateDetection(val DuplicateDetectionConfig) {
	s.DuplicateDetection = val
}

// SetEnabled sets the value of Enabled.
func (s *SystemConfigMachineLearningDto) SetEnabled(val bool) {
	s.Enabled = val
}

// SetFacialRecognition sets the value of FacialRecognition.
func (s *SystemConfigMachineLearningDto) SetFacialRecognition(val FacialRecognitionConfig) {
	s.FacialRecognition = val
}

// SetUrls sets the value of Urls.
func (s *SystemConfigMachineLearningDto) SetUrls(val []url.URL) {
	s.Urls = val
}

// Ref: #/components/schemas/SystemConfigMapDto
type SystemConfigMapDto struct {
	DarkStyle  url.URL `json:"darkStyle"`
	Enabled    bool    `json:"enabled"`
	LightStyle url.URL `json:"lightStyle"`
}

// GetDarkStyle returns the value of DarkStyle.
func (s *SystemConfigMapDto) GetDarkStyle() url.URL {
	return s.DarkStyle
}

// GetEnabled returns the value of Enabled.
func (s *SystemConfigMapDto) GetEnabled() bool {
	return s.Enabled
}

// GetLightStyle returns the value of LightStyle.
func (s *SystemConfigMapDto) GetLightStyle() url.URL {
	return s.LightStyle
}

// SetDarkStyle sets the value of DarkStyle.
func (s *SystemConfigMapDto) SetDarkStyle(val url.URL) {
	s.DarkStyle = val
}

// SetEnabled sets the value of Enabled.
func (s *SystemConfigMapDto) SetEnabled(val bool) {
	s.Enabled = val
}

// SetLightStyle sets the value of LightStyle.
func (s *SystemConfigMapDto) SetLightStyle(val url.URL) {
	s.LightStyle = val
}

// Ref: #/components/schemas/SystemConfigMetadataDto
type SystemConfigMetadataDto struct {
	Faces SystemConfigFacesDto `json:"faces"`
}

// GetFaces returns the value of Faces.
func (s *SystemConfigMetadataDto) GetFaces() SystemConfigFacesDto {
	return s.Faces
}

// SetFaces sets the value of Faces.
func (s *SystemConfigMetadataDto) SetFaces(val SystemConfigFacesDto) {
	s.Faces = val
}

// Ref: #/components/schemas/SystemConfigNewVersionCheckDto
type SystemConfigNewVersionCheckDto struct {
	Enabled bool `json:"enabled"`
}

// GetEnabled returns the value of Enabled.
func (s *SystemConfigNewVersionCheckDto) GetEnabled() bool {
	return s.Enabled
}

// SetEnabled sets the value of Enabled.
func (s *SystemConfigNewVersionCheckDto) SetEnabled(val bool) {
	s.Enabled = val
}

// Ref: #/components/schemas/SystemConfigNightlyTasksDto
type SystemConfigNightlyTasksDto struct {
	ClusterNewFaces   bool   `json:"clusterNewFaces"`
	DatabaseCleanup   bool   `json:"databaseCleanup"`
	GenerateMemories  bool   `json:"generateMemories"`
	MissingThumbnails bool   `json:"missingThumbnails"`
	StartTime         string `json:"startTime"`
	SyncQuotaUsage    bool   `json:"syncQuotaUsage"`
}

// GetClusterNewFaces returns the value of ClusterNewFaces.
func (s *SystemConfigNightlyTasksDto) GetClusterNewFaces() bool {
	return s.ClusterNewFaces
}

// GetDatabaseCleanup returns the value of DatabaseCleanup.
func (s *SystemConfigNightlyTasksDto) GetDatabaseCleanup() bool {
	return s.DatabaseCleanup
}

// GetGenerateMemories returns the value of GenerateMemories.
func (s *SystemConfigNightlyTasksDto) GetGenerateMemories() bool {
	return s.GenerateMemories
}

// GetMissingThumbnails returns the value of MissingThumbnails.
func (s *SystemConfigNightlyTasksDto) GetMissingThumbnails() bool {
	return s.MissingThumbnails
}

// GetStartTime returns the value of StartTime.
func (s *SystemConfigNightlyTasksDto) GetStartTime() string {
	return s.StartTime
}

// GetSyncQuotaUsage returns the value of SyncQuotaUsage.
func (s *SystemConfigNightlyTasksDto) GetSyncQuotaUsage() bool {
	return s.SyncQuotaUsage
}

// SetClusterNewFaces sets the value of ClusterNewFaces.
func (s *SystemConfigNightlyTasksDto) SetClusterNewFaces(val bool) {
	s.ClusterNewFaces = val
}

// SetDatabaseCleanup sets the value of DatabaseCleanup.
func (s *SystemConfigNightlyTasksDto) SetDatabaseCleanup(val bool) {
	s.DatabaseCleanup = val
}

// SetGenerateMemories sets the value of GenerateMemories.
func (s *SystemConfigNightlyTasksDto) SetGenerateMemories(val bool) {
	s.GenerateMemories = val
}

// SetMissingThumbnails sets the value of MissingThumbnails.
func (s *SystemConfigNightlyTasksDto) SetMissingThumbnails(val bool) {
	s.MissingThumbnails = val
}

// SetStartTime sets the value of StartTime.
func (s *SystemConfigNightlyTasksDto) SetStartTime(val string) {
	s.StartTime = val
}

// SetSyncQuotaUsage sets the value of SyncQuotaUsage.
func (s *SystemConfigNightlyTasksDto) SetSyncQuotaUsage(val bool) {
	s.SyncQuotaUsage = val
}

// Ref: #/components/schemas/SystemConfigNotificationsDto
type SystemConfigNotificationsDto struct {
	SMTP SystemConfigSmtpDto `json:"smtp"`
}

// GetSMTP returns the value of SMTP.
func (s *SystemConfigNotificationsDto) GetSMTP() SystemConfigSmtpDto {
	return s.SMTP
}

// SetSMTP sets the value of SMTP.
func (s *SystemConfigNotificationsDto) SetSMTP(val SystemConfigSmtpDto) {
	s.SMTP = val
}

// Ref: #/components/schemas/SystemConfigOAuthDto
type SystemConfigOAuthDto struct {
	AutoLaunch              bool                         `json:"autoLaunch"`
	AutoRegister            bool                         `json:"autoRegister"`
	ButtonText              string                       `json:"buttonText"`
	ClientId                string                       `json:"clientId"`
	ClientSecret            string                       `json:"clientSecret"`
	DefaultStorageQuota     NilInt64                     `json:"defaultStorageQuota"`
	Enabled                 bool                         `json:"enabled"`
	IssuerUrl               string                       `json:"issuerUrl"`
	MobileOverrideEnabled   bool                         `json:"mobileOverrideEnabled"`
	MobileRedirectUri       url.URL                      `json:"mobileRedirectUri"`
	ProfileSigningAlgorithm string                       `json:"profileSigningAlgorithm"`
	RoleClaim               string                       `json:"roleClaim"`
	Scope                   string                       `json:"scope"`
	SigningAlgorithm        string                       `json:"signingAlgorithm"`
	StorageLabelClaim       string                       `json:"storageLabelClaim"`
	StorageQuotaClaim       string                       `json:"storageQuotaClaim"`
	Timeout                 int                          `json:"timeout"`
	TokenEndpointAuthMethod OAuthTokenEndpointAuthMethod `json:"tokenEndpointAuthMethod"`
}

// GetAutoLaunch returns the value of AutoLaunch.
func (s *SystemConfigOAuthDto) GetAutoLaunch() bool {
	return s.AutoLaunch
}

// GetAutoRegister returns the value of AutoRegister.
func (s *SystemConfigOAuthDto) GetAutoRegister() bool {
	return s.AutoRegister
}

// GetButtonText returns the value of ButtonText.
func (s *SystemConfigOAuthDto) GetButtonText() string {
	return s.ButtonText
}

// GetClientId returns the value of ClientId.
func (s *SystemConfigOAuthDto) GetClientId() string {
	return s.ClientId
}

// GetClientSecret returns the value of ClientSecret.
func (s *SystemConfigOAuthDto) GetClientSecret() string {
	return s.ClientSecret
}

// GetDefaultStorageQuota returns the value of DefaultStorageQuota.
func (s *SystemConfigOAuthDto) GetDefaultStorageQuota() NilInt64 {
	return s.DefaultStorageQuota
}

// GetEnabled returns the value of Enabled.
func (s *SystemConfigOAuthDto) GetEnabled() bool {
	return s.Enabled
}

// GetIssuerUrl returns the value of IssuerUrl.
func (s *SystemConfigOAuthDto) GetIssuerUrl() string {
	return s.IssuerUrl
}

// GetMobileOverrideEnabled returns the value of MobileOverrideEnabled.
func (s *SystemConfigOAuthDto) GetMobileOverrideEnabled() bool {
	return s.MobileOverrideEnabled
}

// GetMobileRedirectUri returns the value of MobileRedirectUri.
func (s *SystemConfigOAuthDto) GetMobileRedirectUri() url.URL {
	return s.MobileRedirectUri
}

// GetProfileSigningAlgorithm returns the value of ProfileSigningAlgorithm.
func (s *SystemConfigOAuthDto) GetProfileSigningAlgorithm() string {
	return s.ProfileSigningAlgorithm
}

// GetRoleClaim returns the value of RoleClaim.
func (s *SystemConfigOAuthDto) GetRoleClaim() string {
	return s.RoleClaim
}

// GetScope returns the value of Scope.
func (s *SystemConfigOAuthDto) GetScope() string {
	return s.Scope
}

// GetSigningAlgorithm returns the value of SigningAlgorithm.
func (s *SystemConfigOAuthDto) GetSigningAlgorithm() string {
	return s.SigningAlgorithm
}

// GetStorageLabelClaim returns the value of StorageLabelClaim.
func (s *SystemConfigOAuthDto) GetStorageLabelClaim() string {
	return s.StorageLabelClaim
}

// GetStorageQuotaClaim returns the value of StorageQuotaClaim.
func (s *SystemConfigOAuthDto) GetStorageQuotaClaim() string {
	return s.StorageQuotaClaim
}

// GetTimeout returns the value of Timeout.
func (s *SystemConfigOAuthDto) GetTimeout() int {
	return s.Timeout
}

// GetTokenEndpointAuthMethod returns the value of TokenEndpointAuthMethod.
func (s *SystemConfigOAuthDto) GetTokenEndpointAuthMethod() OAuthTokenEndpointAuthMethod {
	return s.TokenEndpointAuthMethod
}

// SetAutoLaunch sets the value of AutoLaunch.
func (s *SystemConfigOAuthDto) SetAutoLaunch(val bool) {
	s.AutoLaunch = val
}

// SetAutoRegister sets the value of AutoRegister.
func (s *SystemConfigOAuthDto) SetAutoRegister(val bool) {
	s.AutoRegister = val
}

// SetButtonText sets the value of ButtonText.
func (s *SystemConfigOAuthDto) SetButtonText(val string) {
	s.ButtonText = val
}

// SetClientId sets the value of ClientId.
func (s *SystemConfigOAuthDto) SetClientId(val string) {
	s.ClientId = val
}

// SetClientSecret sets the value of ClientSecret.
func (s *SystemConfigOAuthDto) SetClientSecret(val string) {
	s.ClientSecret = val
}

// SetDefaultStorageQuota sets the value of DefaultStorageQuota.
func (s *SystemConfigOAuthDto) SetDefaultStorageQuota(val NilInt64) {
	s.DefaultStorageQuota = val
}

// SetEnabled sets the value of Enabled.
func (s *SystemConfigOAuthDto) SetEnabled(val bool) {
	s.Enabled = val
}

// SetIssuerUrl sets the value of IssuerUrl.
func (s *SystemConfigOAuthDto) SetIssuerUrl(val string) {
	s.IssuerUrl = val
}

// SetMobileOverrideEnabled sets the value of MobileOverrideEnabled.
func (s *SystemConfigOAuthDto) SetMobileOverrideEnabled(val bool) {
	s.MobileOverrideEnabled = val
}

// SetMobileRedirectUri sets the value of MobileRedirectUri.
func (s *SystemConfigOAuthDto) SetMobileRedirectUri(val url.URL) {
	s.MobileRedirectUri = val
}

// SetProfileSigningAlgorithm sets the value of ProfileSigningAlgorithm.
func (s *SystemConfigOAuthDto) SetProfileSigningAlgorithm(val string) {
	s.ProfileSigningAlgorithm = val
}

// SetRoleClaim sets the value of RoleClaim.
func (s *SystemConfigOAuthDto) SetRoleClaim(val string) {
	s.RoleClaim = val
}

// SetScope sets the value of Scope.
func (s *SystemConfigOAuthDto) SetScope(val string) {
	s.Scope = val
}

// SetSigningAlgorithm sets the value of SigningAlgorithm.
func (s *SystemConfigOAuthDto) SetSigningAlgorithm(val string) {
	s.SigningAlgorithm = val
}

// SetStorageLabelClaim sets the value of StorageLabelClaim.
func (s *SystemConfigOAuthDto) SetStorageLabelClaim(val string) {
	s.StorageLabelClaim = val
}

// SetStorageQuotaClaim sets the value of StorageQuotaClaim.
func (s *SystemConfigOAuthDto) SetStorageQuotaClaim(val string) {
	s.StorageQuotaClaim = val
}

// SetTimeout sets the value of Timeout.
func (s *SystemConfigOAuthDto) SetTimeout(val int) {
	s.Timeout = val
}

// SetTokenEndpointAuthMethod sets the value of TokenEndpointAuthMethod.
func (s *SystemConfigOAuthDto) SetTokenEndpointAuthMethod(val OAuthTokenEndpointAuthMethod) {
	s.TokenEndpointAuthMethod = val
}

// Ref: #/components/schemas/SystemConfigPasswordLoginDto
type SystemConfigPasswordLoginDto struct {
	Enabled bool `json:"enabled"`
}

// GetEnabled returns the value of Enabled.
func (s *SystemConfigPasswordLoginDto) GetEnabled() bool {
	return s.Enabled
}

// SetEnabled sets the value of Enabled.
func (s *SystemConfigPasswordLoginDto) SetEnabled(val bool) {
	s.Enabled = val
}

// Ref: #/components/schemas/SystemConfigReverseGeocodingDto
type SystemConfigReverseGeocodingDto struct {
	Enabled bool `json:"enabled"`
}

// GetEnabled returns the value of Enabled.
func (s *SystemConfigReverseGeocodingDto) GetEnabled() bool {
	return s.Enabled
}

// SetEnabled sets the value of Enabled.
func (s *SystemConfigReverseGeocodingDto) SetEnabled(val bool) {
	s.Enabled = val
}

// Ref: #/components/schemas/SystemConfigServerDto
type SystemConfigServerDto struct {
	ExternalDomain   url.URL `json:"externalDomain"`
	LoginPageMessage string  `json:"loginPageMessage"`
	PublicUsers      bool    `json:"publicUsers"`
}

// GetExternalDomain returns the value of ExternalDomain.
func (s *SystemConfigServerDto) GetExternalDomain() url.URL {
	return s.ExternalDomain
}

// GetLoginPageMessage returns the value of LoginPageMessage.
func (s *SystemConfigServerDto) GetLoginPageMessage() string {
	return s.LoginPageMessage
}

// GetPublicUsers returns the value of PublicUsers.
func (s *SystemConfigServerDto) GetPublicUsers() bool {
	return s.PublicUsers
}

// SetExternalDomain sets the value of ExternalDomain.
func (s *SystemConfigServerDto) SetExternalDomain(val url.URL) {
	s.ExternalDomain = val
}

// SetLoginPageMessage sets the value of LoginPageMessage.
func (s *SystemConfigServerDto) SetLoginPageMessage(val string) {
	s.LoginPageMessage = val
}

// SetPublicUsers sets the value of PublicUsers.
func (s *SystemConfigServerDto) SetPublicUsers(val bool) {
	s.PublicUsers = val
}

// Ref: #/components/schemas/SystemConfigSmtpDto
type SystemConfigSmtpDto struct {
	Enabled   bool                         `json:"enabled"`
	From      string                       `json:"from"`
	ReplyTo   string                       `json:"replyTo"`
	Transport SystemConfigSmtpTransportDto `json:"transport"`
}

// GetEnabled returns the value of Enabled.
func (s *SystemConfigSmtpDto) GetEnabled() bool {
	return s.Enabled
}

// GetFrom returns the value of From.
func (s *SystemConfigSmtpDto) GetFrom() string {
	return s.From
}

// GetReplyTo returns the value of ReplyTo.
func (s *SystemConfigSmtpDto) GetReplyTo() string {
	return s.ReplyTo
}

// GetTransport returns the value of Transport.
func (s *SystemConfigSmtpDto) GetTransport() SystemConfigSmtpTransportDto {
	return s.Transport
}

// SetEnabled sets the value of Enabled.
func (s *SystemConfigSmtpDto) SetEnabled(val bool) {
	s.Enabled = val
}

// SetFrom sets the value of From.
func (s *SystemConfigSmtpDto) SetFrom(val string) {
	s.From = val
}

// SetReplyTo sets the value of ReplyTo.
func (s *SystemConfigSmtpDto) SetReplyTo(val string) {
	s.ReplyTo = val
}

// SetTransport sets the value of Transport.
func (s *SystemConfigSmtpDto) SetTransport(val SystemConfigSmtpTransportDto) {
	s.Transport = val
}

// Ref: #/components/schemas/SystemConfigSmtpTransportDto
type SystemConfigSmtpTransportDto struct {
	Host       string  `json:"host"`
	IgnoreCert bool    `json:"ignoreCert"`
	Password   string  `json:"password"`
	Port       float64 `json:"port"`
	Username   string  `json:"username"`
}

// GetHost returns the value of Host.
func (s *SystemConfigSmtpTransportDto) GetHost() string {
	return s.Host
}

// GetIgnoreCert returns the value of IgnoreCert.
func (s *SystemConfigSmtpTransportDto) GetIgnoreCert() bool {
	return s.IgnoreCert
}

// GetPassword returns the value of Password.
func (s *SystemConfigSmtpTransportDto) GetPassword() string {
	return s.Password
}

// GetPort returns the value of Port.
func (s *SystemConfigSmtpTransportDto) GetPort() float64 {
	return s.Port
}

// GetUsername returns the value of Username.
func (s *SystemConfigSmtpTransportDto) GetUsername() string {
	return s.Username
}

// SetHost sets the value of Host.
func (s *SystemConfigSmtpTransportDto) SetHost(val string) {
	s.Host = val
}

// SetIgnoreCert sets the value of IgnoreCert.
func (s *SystemConfigSmtpTransportDto) SetIgnoreCert(val bool) {
	s.IgnoreCert = val
}

// SetPassword sets the value of Password.
func (s *SystemConfigSmtpTransportDto) SetPassword(val string) {
	s.Password = val
}

// SetPort sets the value of Port.
func (s *SystemConfigSmtpTransportDto) SetPort(val float64) {
	s.Port = val
}

// SetUsername sets the value of Username.
func (s *SystemConfigSmtpTransportDto) SetUsername(val string) {
	s.Username = val
}

// Ref: #/components/schemas/SystemConfigStorageTemplateDto
type SystemConfigStorageTemplateDto struct {
	Enabled                 bool   `json:"enabled"`
	HashVerificationEnabled bool   `json:"hashVerificationEnabled"`
	Template                string `json:"template"`
}

// GetEnabled returns the value of Enabled.
func (s *SystemConfigStorageTemplateDto) GetEnabled() bool {
	return s.Enabled
}

// GetHashVerificationEnabled returns the value of HashVerificationEnabled.
func (s *SystemConfigStorageTemplateDto) GetHashVerificationEnabled() bool {
	return s.HashVerificationEnabled
}

// GetTemplate returns the value of Template.
func (s *SystemConfigStorageTemplateDto) GetTemplate() string {
	return s.Template
}

// SetEnabled sets the value of Enabled.
func (s *SystemConfigStorageTemplateDto) SetEnabled(val bool) {
	s.Enabled = val
}

// SetHashVerificationEnabled sets the value of HashVerificationEnabled.
func (s *SystemConfigStorageTemplateDto) SetHashVerificationEnabled(val bool) {
	s.HashVerificationEnabled = val
}

// SetTemplate sets the value of Template.
func (s *SystemConfigStorageTemplateDto) SetTemplate(val string) {
	s.Template = val
}

// Ref: #/components/schemas/SystemConfigTemplateEmailsDto
type SystemConfigTemplateEmailsDto struct {
	AlbumInviteTemplate string `json:"albumInviteTemplate"`
	AlbumUpdateTemplate string `json:"albumUpdateTemplate"`
	WelcomeTemplate     string `json:"welcomeTemplate"`
}

// GetAlbumInviteTemplate returns the value of AlbumInviteTemplate.
func (s *SystemConfigTemplateEmailsDto) GetAlbumInviteTemplate() string {
	return s.AlbumInviteTemplate
}

// GetAlbumUpdateTemplate returns the value of AlbumUpdateTemplate.
func (s *SystemConfigTemplateEmailsDto) GetAlbumUpdateTemplate() string {
	return s.AlbumUpdateTemplate
}

// GetWelcomeTemplate returns the value of WelcomeTemplate.
func (s *SystemConfigTemplateEmailsDto) GetWelcomeTemplate() string {
	return s.WelcomeTemplate
}

// SetAlbumInviteTemplate sets the value of AlbumInviteTemplate.
func (s *SystemConfigTemplateEmailsDto) SetAlbumInviteTemplate(val string) {
	s.AlbumInviteTemplate = val
}

// SetAlbumUpdateTemplate sets the value of AlbumUpdateTemplate.
func (s *SystemConfigTemplateEmailsDto) SetAlbumUpdateTemplate(val string) {
	s.AlbumUpdateTemplate = val
}

// SetWelcomeTemplate sets the value of WelcomeTemplate.
func (s *SystemConfigTemplateEmailsDto) SetWelcomeTemplate(val string) {
	s.WelcomeTemplate = val
}

// Ref: #/components/schemas/SystemConfigTemplateStorageOptionDto
type SystemConfigTemplateStorageOptionDto struct {
	DayOptions    []string `json:"dayOptions"`
	HourOptions   []string `json:"hourOptions"`
	MinuteOptions []string `json:"minuteOptions"`
	MonthOptions  []string `json:"monthOptions"`
	PresetOptions []string `json:"presetOptions"`
	SecondOptions []string `json:"secondOptions"`
	WeekOptions   []string `json:"weekOptions"`
	YearOptions   []string `json:"yearOptions"`
}

// GetDayOptions returns the value of DayOptions.
func (s *SystemConfigTemplateStorageOptionDto) GetDayOptions() []string {
	return s.DayOptions
}

// GetHourOptions returns the value of HourOptions.
func (s *SystemConfigTemplateStorageOptionDto) GetHourOptions() []string {
	return s.HourOptions
}

// GetMinuteOptions returns the value of MinuteOptions.
func (s *SystemConfigTemplateStorageOptionDto) GetMinuteOptions() []string {
	return s.MinuteOptions
}

// GetMonthOptions returns the value of MonthOptions.
func (s *SystemConfigTemplateStorageOptionDto) GetMonthOptions() []string {
	return s.MonthOptions
}

// GetPresetOptions returns the value of PresetOptions.
func (s *SystemConfigTemplateStorageOptionDto) GetPresetOptions() []string {
	return s.PresetOptions
}

// GetSecondOptions returns the value of SecondOptions.
func (s *SystemConfigTemplateStorageOptionDto) GetSecondOptions() []string {
	return s.SecondOptions
}

// GetWeekOptions returns the value of WeekOptions.
func (s *SystemConfigTemplateStorageOptionDto) GetWeekOptions() []string {
	return s.WeekOptions
}

// GetYearOptions returns the value of YearOptions.
func (s *SystemConfigTemplateStorageOptionDto) GetYearOptions() []string {
	return s.YearOptions
}

// SetDayOptions sets the value of DayOptions.
func (s *SystemConfigTemplateStorageOptionDto) SetDayOptions(val []string) {
	s.DayOptions = val
}

// SetHourOptions sets the value of HourOptions.
func (s *SystemConfigTemplateStorageOptionDto) SetHourOptions(val []string) {
	s.HourOptions = val
}

// SetMinuteOptions sets the value of MinuteOptions.
func (s *SystemConfigTemplateStorageOptionDto) SetMinuteOptions(val []string) {
	s.MinuteOptions = val
}

// SetMonthOptions sets the value of MonthOptions.
func (s *SystemConfigTemplateStorageOptionDto) SetMonthOptions(val []string) {
	s.MonthOptions = val
}

// SetPresetOptions sets the value of PresetOptions.
func (s *SystemConfigTemplateStorageOptionDto) SetPresetOptions(val []string) {
	s.PresetOptions = val
}

// SetSecondOptions sets the value of SecondOptions.
func (s *SystemConfigTemplateStorageOptionDto) SetSecondOptions(val []string) {
	s.SecondOptions = val
}

// SetWeekOptions sets the value of WeekOptions.
func (s *SystemConfigTemplateStorageOptionDto) SetWeekOptions(val []string) {
	s.WeekOptions = val
}

// SetYearOptions sets the value of YearOptions.
func (s *SystemConfigTemplateStorageOptionDto) SetYearOptions(val []string) {
	s.YearOptions = val
}

// Ref: #/components/schemas/SystemConfigTemplatesDto
type SystemConfigTemplatesDto struct {
	Email SystemConfigTemplateEmailsDto `json:"email"`
}

// GetEmail returns the value of Email.
func (s *SystemConfigTemplatesDto) GetEmail() SystemConfigTemplateEmailsDto {
	return s.Email
}

// SetEmail sets the value of Email.
func (s *SystemConfigTemplatesDto) SetEmail(val SystemConfigTemplateEmailsDto) {
	s.Email = val
}

// Ref: #/components/schemas/SystemConfigThemeDto
type SystemConfigThemeDto struct {
	CustomCss string `json:"customCss"`
}

// GetCustomCss returns the value of CustomCss.
func (s *SystemConfigThemeDto) GetCustomCss() string {
	return s.CustomCss
}

// SetCustomCss sets the value of CustomCss.
func (s *SystemConfigThemeDto) SetCustomCss(val string) {
	s.CustomCss = val
}

// Ref: #/components/schemas/SystemConfigTrashDto
type SystemConfigTrashDto struct {
	Days    int  `json:"days"`
	Enabled bool `json:"enabled"`
}

// GetDays returns the value of Days.
func (s *SystemConfigTrashDto) GetDays() int {
	return s.Days
}

// GetEnabled returns the value of Enabled.
func (s *SystemConfigTrashDto) GetEnabled() bool {
	return s.Enabled
}

// SetDays sets the value of Days.
func (s *SystemConfigTrashDto) SetDays(val int) {
	s.Days = val
}

// SetEnabled sets the value of Enabled.
func (s *SystemConfigTrashDto) SetEnabled(val bool) {
	s.Enabled = val
}

// Ref: #/components/schemas/SystemConfigUserDto
type SystemConfigUserDto struct {
	DeleteDelay int `json:"deleteDelay"`
}

// GetDeleteDelay returns the value of DeleteDelay.
func (s *SystemConfigUserDto) GetDeleteDelay() int {
	return s.DeleteDelay
}

// SetDeleteDelay sets the value of DeleteDelay.
func (s *SystemConfigUserDto) SetDeleteDelay(val int) {
	s.DeleteDelay = val
}

// Ref: #/components/schemas/TagBulkAssetsDto
type TagBulkAssetsDto struct {
	AssetIds []uuid.UUID `json:"assetIds"`
	TagIds   []uuid.UUID `json:"tagIds"`
}

// GetAssetIds returns the value of AssetIds.
func (s *TagBulkAssetsDto) GetAssetIds() []uuid.UUID {
	return s.AssetIds
}

// GetTagIds returns the value of TagIds.
func (s *TagBulkAssetsDto) GetTagIds() []uuid.UUID {
	return s.TagIds
}

// SetAssetIds sets the value of AssetIds.
func (s *TagBulkAssetsDto) SetAssetIds(val []uuid.UUID) {
	s.AssetIds = val
}

// SetTagIds sets the value of TagIds.
func (s *TagBulkAssetsDto) SetTagIds(val []uuid.UUID) {
	s.TagIds = val
}

// Ref: #/components/schemas/TagBulkAssetsResponseDto
type TagBulkAssetsResponseDto struct {
	Count int `json:"count"`
}

// GetCount returns the value of Count.
func (s *TagBulkAssetsResponseDto) GetCount() int {
	return s.Count
}

// SetCount sets the value of Count.
func (s *TagBulkAssetsResponseDto) SetCount(val int) {
	s.Count = val
}

// Ref: #/components/schemas/TagCreateDto
type TagCreateDto struct {
	Color    OptString  `json:"color"`
	Name     string     `json:"name"`
	ParentId OptNilUUID `json:"parentId"`
}

// GetColor returns the value of Color.
func (s *TagCreateDto) GetColor() OptString {
	return s.Color
}

// GetName returns the value of Name.
func (s *TagCreateDto) GetName() string {
	return s.Name
}

// GetParentId returns the value of ParentId.
func (s *TagCreateDto) GetParentId() OptNilUUID {
	return s.ParentId
}

// SetColor sets the value of Color.
func (s *TagCreateDto) SetColor(val OptString) {
	s.Color = val
}

// SetName sets the value of Name.
func (s *TagCreateDto) SetName(val string) {
	s.Name = val
}

// SetParentId sets the value of ParentId.
func (s *TagCreateDto) SetParentId(val OptNilUUID) {
	s.ParentId = val
}

// Ref: #/components/schemas/TagResponseDto
type TagResponseDto struct {
	Color     OptString `json:"color"`
	CreatedAt time.Time `json:"createdAt"`
	ID        string    `json:"id"`
	Name      string    `json:"name"`
	ParentId  OptString `json:"parentId"`
	UpdatedAt time.Time `json:"updatedAt"`
	Value     string    `json:"value"`
}

// GetColor returns the value of Color.
func (s *TagResponseDto) GetColor() OptString {
	return s.Color
}

// GetCreatedAt returns the value of CreatedAt.
func (s *TagResponseDto) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetID returns the value of ID.
func (s *TagResponseDto) GetID() string {
	return s.ID
}

// GetName returns the value of Name.
func (s *TagResponseDto) GetName() string {
	return s.Name
}

// GetParentId returns the value of ParentId.
func (s *TagResponseDto) GetParentId() OptString {
	return s.ParentId
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *TagResponseDto) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetValue returns the value of Value.
func (s *TagResponseDto) GetValue() string {
	return s.Value
}

// SetColor sets the value of Color.
func (s *TagResponseDto) SetColor(val OptString) {
	s.Color = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *TagResponseDto) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetID sets the value of ID.
func (s *TagResponseDto) SetID(val string) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *TagResponseDto) SetName(val string) {
	s.Name = val
}

// SetParentId sets the value of ParentId.
func (s *TagResponseDto) SetParentId(val OptString) {
	s.ParentId = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *TagResponseDto) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetValue sets the value of Value.
func (s *TagResponseDto) SetValue(val string) {
	s.Value = val
}

// Ref: #/components/schemas/TagUpdateDto
type TagUpdateDto struct {
	Color OptNilString `json:"color"`
}

// GetColor returns the value of Color.
func (s *TagUpdateDto) GetColor() OptNilString {
	return s.Color
}

// SetColor sets the value of Color.
func (s *TagUpdateDto) SetColor(val OptNilString) {
	s.Color = val
}

// Ref: #/components/schemas/TagUpsertDto
type TagUpsertDto struct {
	Tags []string `json:"tags"`
}

// GetTags returns the value of Tags.
func (s *TagUpsertDto) GetTags() []string {
	return s.Tags
}

// SetTags sets the value of Tags.
func (s *TagUpsertDto) SetTags(val []string) {
	s.Tags = val
}

// Ref: #/components/schemas/TagsResponse
type TagsResponse struct {
	Enabled    bool `json:"enabled"`
	SidebarWeb bool `json:"sidebarWeb"`
}

// GetEnabled returns the value of Enabled.
func (s *TagsResponse) GetEnabled() bool {
	return s.Enabled
}

// GetSidebarWeb returns the value of SidebarWeb.
func (s *TagsResponse) GetSidebarWeb() bool {
	return s.SidebarWeb
}

// SetEnabled sets the value of Enabled.
func (s *TagsResponse) SetEnabled(val bool) {
	s.Enabled = val
}

// SetSidebarWeb sets the value of SidebarWeb.
func (s *TagsResponse) SetSidebarWeb(val bool) {
	s.SidebarWeb = val
}

// Ref: #/components/schemas/TagsUpdate
type TagsUpdate struct {
	Enabled    OptBool `json:"enabled"`
	SidebarWeb OptBool `json:"sidebarWeb"`
}

// GetEnabled returns the value of Enabled.
func (s *TagsUpdate) GetEnabled() OptBool {
	return s.Enabled
}

// GetSidebarWeb returns the value of SidebarWeb.
func (s *TagsUpdate) GetSidebarWeb() OptBool {
	return s.SidebarWeb
}

// SetEnabled sets the value of Enabled.
func (s *TagsUpdate) SetEnabled(val OptBool) {
	s.Enabled = val
}

// SetSidebarWeb sets the value of SidebarWeb.
func (s *TagsUpdate) SetSidebarWeb(val OptBool) {
	s.SidebarWeb = val
}

// Ref: #/components/schemas/TemplateDto
type TemplateDto struct {
	Template string `json:"template"`
}

// GetTemplate returns the value of Template.
func (s *TemplateDto) GetTemplate() string {
	return s.Template
}

// SetTemplate sets the value of Template.
func (s *TemplateDto) SetTemplate(val string) {
	s.Template = val
}

// Ref: #/components/schemas/TemplateResponseDto
type TemplateResponseDto struct {
	HTML string `json:"html"`
	Name string `json:"name"`
}

// GetHTML returns the value of HTML.
func (s *TemplateResponseDto) GetHTML() string {
	return s.HTML
}

// GetName returns the value of Name.
func (s *TemplateResponseDto) GetName() string {
	return s.Name
}

// SetHTML sets the value of HTML.
func (s *TemplateResponseDto) SetHTML(val string) {
	s.HTML = val
}

// SetName sets the value of Name.
func (s *TemplateResponseDto) SetName(val string) {
	s.Name = val
}

// Ref: #/components/schemas/TestEmailResponseDto
type TestEmailResponseDto struct {
	MessageId string `json:"messageId"`
}

// GetMessageId returns the value of MessageId.
func (s *TestEmailResponseDto) GetMessageId() string {
	return s.MessageId
}

// SetMessageId sets the value of MessageId.
func (s *TestEmailResponseDto) SetMessageId(val string) {
	s.MessageId = val
}

// Ref: #/components/schemas/TimeBucketAssetResponseDto
type TimeBucketAssetResponseDto struct {
	// Array of city names extracted from EXIF GPS data.
	City []NilString `json:"city"`
	// Array of country names extracted from EXIF GPS data.
	Country []NilString `json:"country"`
	// Array of video durations in HH:MM:SS format (null for images).
	Duration []NilString `json:"duration"`
	// Array of file creation timestamps in UTC (ISO 8601 format, without timezone).
	FileCreatedAt []string `json:"fileCreatedAt"`
	// Array of asset IDs in the time bucket.
	ID []string `json:"id"`
	// Array indicating whether each asset is favorited.
	IsFavorite []bool `json:"isFavorite"`
	// Array indicating whether each asset is an image (false for videos).
	IsImage []bool `json:"isImage"`
	// Array indicating whether each asset is in the trash.
	IsTrashed []bool `json:"isTrashed"`
	// Array of latitude coordinates extracted from EXIF GPS data.
	Latitude []NilFloat64 `json:"latitude"`
	// Array of live photo video asset IDs (null for non-live photos).
	LivePhotoVideoId []NilString `json:"livePhotoVideoId"`
	// Array of UTC offset hours at the time each photo was taken. Positive values are east of UTC,
	// negative values are west of UTC. Values may be fractional (e.g., 5.5 for +05:30, -9.75 for -09:45).
	//  Applying this offset to 'fileCreatedAt' will give you the time the photo was taken from the
	// photographer's perspective.
	LocalOffsetHours []float64 `json:"localOffsetHours"`
	// Array of longitude coordinates extracted from EXIF GPS data.
	Longitude []NilFloat64 `json:"longitude"`
	// Array of owner IDs for each asset.
	OwnerId []string `json:"ownerId"`
	// Array of projection types for 360° content (e.g., "EQUIRECTANGULAR", "CUBEFACE", "CYLINDRICAL").
	ProjectionType []NilString `json:"projectionType"`
	// Array of aspect ratios (width/height) for each asset.
	Ratio []float64 `json:"ratio"`
	// Array of stack information as [stackId, assetCount] tuples (null for non-stacked assets).
	Stack [][]string `json:"stack"`
	// Array of BlurHash strings for generating asset previews (base64 encoded).
	Thumbhash []NilString `json:"thumbhash"`
	// Array of visibility statuses for each asset (e.g., ARCHIVE, TIMELINE, HIDDEN, LOCKED).
	Visibility []AssetVisibility `json:"visibility"`
}

// GetCity returns the value of City.
func (s *TimeBucketAssetResponseDto) GetCity() []NilString {
	return s.City
}

// GetCountry returns the value of Country.
func (s *TimeBucketAssetResponseDto) GetCountry() []NilString {
	return s.Country
}

// GetDuration returns the value of Duration.
func (s *TimeBucketAssetResponseDto) GetDuration() []NilString {
	return s.Duration
}

// GetFileCreatedAt returns the value of FileCreatedAt.
func (s *TimeBucketAssetResponseDto) GetFileCreatedAt() []string {
	return s.FileCreatedAt
}

// GetID returns the value of ID.
func (s *TimeBucketAssetResponseDto) GetID() []string {
	return s.ID
}

// GetIsFavorite returns the value of IsFavorite.
func (s *TimeBucketAssetResponseDto) GetIsFavorite() []bool {
	return s.IsFavorite
}

// GetIsImage returns the value of IsImage.
func (s *TimeBucketAssetResponseDto) GetIsImage() []bool {
	return s.IsImage
}

// GetIsTrashed returns the value of IsTrashed.
func (s *TimeBucketAssetResponseDto) GetIsTrashed() []bool {
	return s.IsTrashed
}

// GetLatitude returns the value of Latitude.
func (s *TimeBucketAssetResponseDto) GetLatitude() []NilFloat64 {
	return s.Latitude
}

// GetLivePhotoVideoId returns the value of LivePhotoVideoId.
func (s *TimeBucketAssetResponseDto) GetLivePhotoVideoId() []NilString {
	return s.LivePhotoVideoId
}

// GetLocalOffsetHours returns the value of LocalOffsetHours.
func (s *TimeBucketAssetResponseDto) GetLocalOffsetHours() []float64 {
	return s.LocalOffsetHours
}

// GetLongitude returns the value of Longitude.
func (s *TimeBucketAssetResponseDto) GetLongitude() []NilFloat64 {
	return s.Longitude
}

// GetOwnerId returns the value of OwnerId.
func (s *TimeBucketAssetResponseDto) GetOwnerId() []string {
	return s.OwnerId
}

// GetProjectionType returns the value of ProjectionType.
func (s *TimeBucketAssetResponseDto) GetProjectionType() []NilString {
	return s.ProjectionType
}

// GetRatio returns the value of Ratio.
func (s *TimeBucketAssetResponseDto) GetRatio() []float64 {
	return s.Ratio
}

// GetStack returns the value of Stack.
func (s *TimeBucketAssetResponseDto) GetStack() [][]string {
	return s.Stack
}

// GetThumbhash returns the value of Thumbhash.
func (s *TimeBucketAssetResponseDto) GetThumbhash() []NilString {
	return s.Thumbhash
}

// GetVisibility returns the value of Visibility.
func (s *TimeBucketAssetResponseDto) GetVisibility() []AssetVisibility {
	return s.Visibility
}

// SetCity sets the value of City.
func (s *TimeBucketAssetResponseDto) SetCity(val []NilString) {
	s.City = val
}

// SetCountry sets the value of Country.
func (s *TimeBucketAssetResponseDto) SetCountry(val []NilString) {
	s.Country = val
}

// SetDuration sets the value of Duration.
func (s *TimeBucketAssetResponseDto) SetDuration(val []NilString) {
	s.Duration = val
}

// SetFileCreatedAt sets the value of FileCreatedAt.
func (s *TimeBucketAssetResponseDto) SetFileCreatedAt(val []string) {
	s.FileCreatedAt = val
}

// SetID sets the value of ID.
func (s *TimeBucketAssetResponseDto) SetID(val []string) {
	s.ID = val
}

// SetIsFavorite sets the value of IsFavorite.
func (s *TimeBucketAssetResponseDto) SetIsFavorite(val []bool) {
	s.IsFavorite = val
}

// SetIsImage sets the value of IsImage.
func (s *TimeBucketAssetResponseDto) SetIsImage(val []bool) {
	s.IsImage = val
}

// SetIsTrashed sets the value of IsTrashed.
func (s *TimeBucketAssetResponseDto) SetIsTrashed(val []bool) {
	s.IsTrashed = val
}

// SetLatitude sets the value of Latitude.
func (s *TimeBucketAssetResponseDto) SetLatitude(val []NilFloat64) {
	s.Latitude = val
}

// SetLivePhotoVideoId sets the value of LivePhotoVideoId.
func (s *TimeBucketAssetResponseDto) SetLivePhotoVideoId(val []NilString) {
	s.LivePhotoVideoId = val
}

// SetLocalOffsetHours sets the value of LocalOffsetHours.
func (s *TimeBucketAssetResponseDto) SetLocalOffsetHours(val []float64) {
	s.LocalOffsetHours = val
}

// SetLongitude sets the value of Longitude.
func (s *TimeBucketAssetResponseDto) SetLongitude(val []NilFloat64) {
	s.Longitude = val
}

// SetOwnerId sets the value of OwnerId.
func (s *TimeBucketAssetResponseDto) SetOwnerId(val []string) {
	s.OwnerId = val
}

// SetProjectionType sets the value of ProjectionType.
func (s *TimeBucketAssetResponseDto) SetProjectionType(val []NilString) {
	s.ProjectionType = val
}

// SetRatio sets the value of Ratio.
func (s *TimeBucketAssetResponseDto) SetRatio(val []float64) {
	s.Ratio = val
}

// SetStack sets the value of Stack.
func (s *TimeBucketAssetResponseDto) SetStack(val [][]string) {
	s.Stack = val
}

// SetThumbhash sets the value of Thumbhash.
func (s *TimeBucketAssetResponseDto) SetThumbhash(val []NilString) {
	s.Thumbhash = val
}

// SetVisibility sets the value of Visibility.
func (s *TimeBucketAssetResponseDto) SetVisibility(val []AssetVisibility) {
	s.Visibility = val
}

// Ref: #/components/schemas/TimeBucketsResponseDto
type TimeBucketsResponseDto struct {
	// Number of assets in this time bucket.
	Count int `json:"count"`
	// Time bucket identifier in YYYY-MM-DD format representing the start of the time period.
	TimeBucket string `json:"timeBucket"`
}

// GetCount returns the value of Count.
func (s *TimeBucketsResponseDto) GetCount() int {
	return s.Count
}

// GetTimeBucket returns the value of TimeBucket.
func (s *TimeBucketsResponseDto) GetTimeBucket() string {
	return s.TimeBucket
}

// SetCount sets the value of Count.
func (s *TimeBucketsResponseDto) SetCount(val int) {
	s.Count = val
}

// SetTimeBucket sets the value of TimeBucket.
func (s *TimeBucketsResponseDto) SetTimeBucket(val string) {
	s.TimeBucket = val
}

// Ref: #/components/schemas/ToneMapping
type ToneMapping string

const (
	ToneMappingHable    ToneMapping = "hable"
	ToneMappingMobius   ToneMapping = "mobius"
	ToneMappingReinhard ToneMapping = "reinhard"
	ToneMappingDisabled ToneMapping = "disabled"
)

// AllValues returns all ToneMapping values.
func (ToneMapping) AllValues() []ToneMapping {
	return []ToneMapping{
		ToneMappingHable,
		ToneMappingMobius,
		ToneMappingReinhard,
		ToneMappingDisabled,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s ToneMapping) MarshalText() ([]byte, error) {
	switch s {
	case ToneMappingHable:
		return []byte(s), nil
	case ToneMappingMobius:
		return []byte(s), nil
	case ToneMappingReinhard:
		return []byte(s), nil
	case ToneMappingDisabled:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ToneMapping) UnmarshalText(data []byte) error {
	switch ToneMapping(data) {
	case ToneMappingHable:
		*s = ToneMappingHable
		return nil
	case ToneMappingMobius:
		*s = ToneMappingMobius
		return nil
	case ToneMappingReinhard:
		*s = ToneMappingReinhard
		return nil
	case ToneMappingDisabled:
		*s = ToneMappingDisabled
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/TranscodeHWAccel
type TranscodeHWAccel string

const (
	TranscodeHWAccelNvenc    TranscodeHWAccel = "nvenc"
	TranscodeHWAccelQsv      TranscodeHWAccel = "qsv"
	TranscodeHWAccelVaapi    TranscodeHWAccel = "vaapi"
	TranscodeHWAccelRkmpp    TranscodeHWAccel = "rkmpp"
	TranscodeHWAccelDisabled TranscodeHWAccel = "disabled"
)

// AllValues returns all TranscodeHWAccel values.
func (TranscodeHWAccel) AllValues() []TranscodeHWAccel {
	return []TranscodeHWAccel{
		TranscodeHWAccelNvenc,
		TranscodeHWAccelQsv,
		TranscodeHWAccelVaapi,
		TranscodeHWAccelRkmpp,
		TranscodeHWAccelDisabled,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s TranscodeHWAccel) MarshalText() ([]byte, error) {
	switch s {
	case TranscodeHWAccelNvenc:
		return []byte(s), nil
	case TranscodeHWAccelQsv:
		return []byte(s), nil
	case TranscodeHWAccelVaapi:
		return []byte(s), nil
	case TranscodeHWAccelRkmpp:
		return []byte(s), nil
	case TranscodeHWAccelDisabled:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *TranscodeHWAccel) UnmarshalText(data []byte) error {
	switch TranscodeHWAccel(data) {
	case TranscodeHWAccelNvenc:
		*s = TranscodeHWAccelNvenc
		return nil
	case TranscodeHWAccelQsv:
		*s = TranscodeHWAccelQsv
		return nil
	case TranscodeHWAccelVaapi:
		*s = TranscodeHWAccelVaapi
		return nil
	case TranscodeHWAccelRkmpp:
		*s = TranscodeHWAccelRkmpp
		return nil
	case TranscodeHWAccelDisabled:
		*s = TranscodeHWAccelDisabled
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/TranscodePolicy
type TranscodePolicy string

const (
	TranscodePolicyAll      TranscodePolicy = "all"
	TranscodePolicyOptimal  TranscodePolicy = "optimal"
	TranscodePolicyBitrate  TranscodePolicy = "bitrate"
	TranscodePolicyRequired TranscodePolicy = "required"
	TranscodePolicyDisabled TranscodePolicy = "disabled"
)

// AllValues returns all TranscodePolicy values.
func (TranscodePolicy) AllValues() []TranscodePolicy {
	return []TranscodePolicy{
		TranscodePolicyAll,
		TranscodePolicyOptimal,
		TranscodePolicyBitrate,
		TranscodePolicyRequired,
		TranscodePolicyDisabled,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s TranscodePolicy) MarshalText() ([]byte, error) {
	switch s {
	case TranscodePolicyAll:
		return []byte(s), nil
	case TranscodePolicyOptimal:
		return []byte(s), nil
	case TranscodePolicyBitrate:
		return []byte(s), nil
	case TranscodePolicyRequired:
		return []byte(s), nil
	case TranscodePolicyDisabled:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *TranscodePolicy) UnmarshalText(data []byte) error {
	switch TranscodePolicy(data) {
	case TranscodePolicyAll:
		*s = TranscodePolicyAll
		return nil
	case TranscodePolicyOptimal:
		*s = TranscodePolicyOptimal
		return nil
	case TranscodePolicyBitrate:
		*s = TranscodePolicyBitrate
		return nil
	case TranscodePolicyRequired:
		*s = TranscodePolicyRequired
		return nil
	case TranscodePolicyDisabled:
		*s = TranscodePolicyDisabled
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/TrashResponseDto
type TrashResponseDto struct {
	Count int `json:"count"`
}

// GetCount returns the value of Count.
func (s *TrashResponseDto) GetCount() int {
	return s.Count
}

// SetCount sets the value of Count.
func (s *TrashResponseDto) SetCount(val int) {
	s.Count = val
}

// UnlinkAllOAuthAccountsAdminNoContent is response for UnlinkAllOAuthAccountsAdmin operation.
type UnlinkAllOAuthAccountsAdminNoContent struct{}

// UnlockAuthSessionNoContent is response for UnlockAuthSession operation.
type UnlockAuthSessionNoContent struct{}

// UpdateAdminOnboardingNoContent is response for UpdateAdminOnboarding operation.
type UpdateAdminOnboardingNoContent struct{}

// Ref: #/components/schemas/UpdateAlbumDto
type UpdateAlbumDto struct {
	AlbumName             OptString     `json:"albumName"`
	AlbumThumbnailAssetId OptUUID       `json:"albumThumbnailAssetId"`
	Description           OptString     `json:"description"`
	IsActivityEnabled     OptBool       `json:"isActivityEnabled"`
	Order                 OptAssetOrder `json:"order"`
}

// GetAlbumName returns the value of AlbumName.
func (s *UpdateAlbumDto) GetAlbumName() OptString {
	return s.AlbumName
}

// GetAlbumThumbnailAssetId returns the value of AlbumThumbnailAssetId.
func (s *UpdateAlbumDto) GetAlbumThumbnailAssetId() OptUUID {
	return s.AlbumThumbnailAssetId
}

// GetDescription returns the value of Description.
func (s *UpdateAlbumDto) GetDescription() OptString {
	return s.Description
}

// GetIsActivityEnabled returns the value of IsActivityEnabled.
func (s *UpdateAlbumDto) GetIsActivityEnabled() OptBool {
	return s.IsActivityEnabled
}

// GetOrder returns the value of Order.
func (s *UpdateAlbumDto) GetOrder() OptAssetOrder {
	return s.Order
}

// SetAlbumName sets the value of AlbumName.
func (s *UpdateAlbumDto) SetAlbumName(val OptString) {
	s.AlbumName = val
}

// SetAlbumThumbnailAssetId sets the value of AlbumThumbnailAssetId.
func (s *UpdateAlbumDto) SetAlbumThumbnailAssetId(val OptUUID) {
	s.AlbumThumbnailAssetId = val
}

// SetDescription sets the value of Description.
func (s *UpdateAlbumDto) SetDescription(val OptString) {
	s.Description = val
}

// SetIsActivityEnabled sets the value of IsActivityEnabled.
func (s *UpdateAlbumDto) SetIsActivityEnabled(val OptBool) {
	s.IsActivityEnabled = val
}

// SetOrder sets the value of Order.
func (s *UpdateAlbumDto) SetOrder(val OptAssetOrder) {
	s.Order = val
}

// Ref: #/components/schemas/UpdateAlbumUserDto
type UpdateAlbumUserDto struct {
	Role AlbumUserRole `json:"role"`
}

// GetRole returns the value of Role.
func (s *UpdateAlbumUserDto) GetRole() AlbumUserRole {
	return s.Role
}

// SetRole sets the value of Role.
func (s *UpdateAlbumUserDto) SetRole(val AlbumUserRole) {
	s.Role = val
}

// UpdateAlbumUserNoContent is response for UpdateAlbumUser operation.
type UpdateAlbumUserNoContent struct{}

// Ref: #/components/schemas/UpdateAssetDto
type UpdateAssetDto struct {
	DateTimeOriginal OptString          `json:"dateTimeOriginal"`
	Description      OptString          `json:"description"`
	IsFavorite       OptBool            `json:"isFavorite"`
	Latitude         OptFloat64         `json:"latitude"`
	LivePhotoVideoId OptNilUUID         `json:"livePhotoVideoId"`
	Longitude        OptFloat64         `json:"longitude"`
	Rating           OptFloat64         `json:"rating"`
	Visibility       OptAssetVisibility `json:"visibility"`
}

// GetDateTimeOriginal returns the value of DateTimeOriginal.
func (s *UpdateAssetDto) GetDateTimeOriginal() OptString {
	return s.DateTimeOriginal
}

// GetDescription returns the value of Description.
func (s *UpdateAssetDto) GetDescription() OptString {
	return s.Description
}

// GetIsFavorite returns the value of IsFavorite.
func (s *UpdateAssetDto) GetIsFavorite() OptBool {
	return s.IsFavorite
}

// GetLatitude returns the value of Latitude.
func (s *UpdateAssetDto) GetLatitude() OptFloat64 {
	return s.Latitude
}

// GetLivePhotoVideoId returns the value of LivePhotoVideoId.
func (s *UpdateAssetDto) GetLivePhotoVideoId() OptNilUUID {
	return s.LivePhotoVideoId
}

// GetLongitude returns the value of Longitude.
func (s *UpdateAssetDto) GetLongitude() OptFloat64 {
	return s.Longitude
}

// GetRating returns the value of Rating.
func (s *UpdateAssetDto) GetRating() OptFloat64 {
	return s.Rating
}

// GetVisibility returns the value of Visibility.
func (s *UpdateAssetDto) GetVisibility() OptAssetVisibility {
	return s.Visibility
}

// SetDateTimeOriginal sets the value of DateTimeOriginal.
func (s *UpdateAssetDto) SetDateTimeOriginal(val OptString) {
	s.DateTimeOriginal = val
}

// SetDescription sets the value of Description.
func (s *UpdateAssetDto) SetDescription(val OptString) {
	s.Description = val
}

// SetIsFavorite sets the value of IsFavorite.
func (s *UpdateAssetDto) SetIsFavorite(val OptBool) {
	s.IsFavorite = val
}

// SetLatitude sets the value of Latitude.
func (s *UpdateAssetDto) SetLatitude(val OptFloat64) {
	s.Latitude = val
}

// SetLivePhotoVideoId sets the value of LivePhotoVideoId.
func (s *UpdateAssetDto) SetLivePhotoVideoId(val OptNilUUID) {
	s.LivePhotoVideoId = val
}

// SetLongitude sets the value of Longitude.
func (s *UpdateAssetDto) SetLongitude(val OptFloat64) {
	s.Longitude = val
}

// SetRating sets the value of Rating.
func (s *UpdateAssetDto) SetRating(val OptFloat64) {
	s.Rating = val
}

// SetVisibility sets the value of Visibility.
func (s *UpdateAssetDto) SetVisibility(val OptAssetVisibility) {
	s.Visibility = val
}

// UpdateAssetsNoContent is response for UpdateAssets operation.
type UpdateAssetsNoContent struct{}

// Ref: #/components/schemas/UpdateLibraryDto
type UpdateLibraryDto struct {
	ExclusionPatterns []string  `json:"exclusionPatterns"`
	ImportPaths       []string  `json:"importPaths"`
	Name              OptString `json:"name"`
}

// GetExclusionPatterns returns the value of ExclusionPatterns.
func (s *UpdateLibraryDto) GetExclusionPatterns() []string {
	return s.ExclusionPatterns
}

// GetImportPaths returns the value of ImportPaths.
func (s *UpdateLibraryDto) GetImportPaths() []string {
	return s.ImportPaths
}

// GetName returns the value of Name.
func (s *UpdateLibraryDto) GetName() OptString {
	return s.Name
}

// SetExclusionPatterns sets the value of ExclusionPatterns.
func (s *UpdateLibraryDto) SetExclusionPatterns(val []string) {
	s.ExclusionPatterns = val
}

// SetImportPaths sets the value of ImportPaths.
func (s *UpdateLibraryDto) SetImportPaths(val []string) {
	s.ImportPaths = val
}

// SetName sets the value of Name.
func (s *UpdateLibraryDto) SetName(val OptString) {
	s.Name = val
}

// UpdateNotificationsNoContent is response for UpdateNotifications operation.
type UpdateNotificationsNoContent struct{}

// Ref: #/components/schemas/UsageByUserDto
type UsageByUserDto struct {
	Photos           int      `json:"photos"`
	QuotaSizeInBytes NilInt64 `json:"quotaSizeInBytes"`
	Usage            int64    `json:"usage"`
	UsagePhotos      int64    `json:"usagePhotos"`
	UsageVideos      int64    `json:"usageVideos"`
	UserId           string   `json:"userId"`
	UserName         string   `json:"userName"`
	Videos           int      `json:"videos"`
}

// GetPhotos returns the value of Photos.
func (s *UsageByUserDto) GetPhotos() int {
	return s.Photos
}

// GetQuotaSizeInBytes returns the value of QuotaSizeInBytes.
func (s *UsageByUserDto) GetQuotaSizeInBytes() NilInt64 {
	return s.QuotaSizeInBytes
}

// GetUsage returns the value of Usage.
func (s *UsageByUserDto) GetUsage() int64 {
	return s.Usage
}

// GetUsagePhotos returns the value of UsagePhotos.
func (s *UsageByUserDto) GetUsagePhotos() int64 {
	return s.UsagePhotos
}

// GetUsageVideos returns the value of UsageVideos.
func (s *UsageByUserDto) GetUsageVideos() int64 {
	return s.UsageVideos
}

// GetUserId returns the value of UserId.
func (s *UsageByUserDto) GetUserId() string {
	return s.UserId
}

// GetUserName returns the value of UserName.
func (s *UsageByUserDto) GetUserName() string {
	return s.UserName
}

// GetVideos returns the value of Videos.
func (s *UsageByUserDto) GetVideos() int {
	return s.Videos
}

// SetPhotos sets the value of Photos.
func (s *UsageByUserDto) SetPhotos(val int) {
	s.Photos = val
}

// SetQuotaSizeInBytes sets the value of QuotaSizeInBytes.
func (s *UsageByUserDto) SetQuotaSizeInBytes(val NilInt64) {
	s.QuotaSizeInBytes = val
}

// SetUsage sets the value of Usage.
func (s *UsageByUserDto) SetUsage(val int64) {
	s.Usage = val
}

// SetUsagePhotos sets the value of UsagePhotos.
func (s *UsageByUserDto) SetUsagePhotos(val int64) {
	s.UsagePhotos = val
}

// SetUsageVideos sets the value of UsageVideos.
func (s *UsageByUserDto) SetUsageVideos(val int64) {
	s.UsageVideos = val
}

// SetUserId sets the value of UserId.
func (s *UsageByUserDto) SetUserId(val string) {
	s.UserId = val
}

// SetUserName sets the value of UserName.
func (s *UsageByUserDto) SetUserName(val string) {
	s.UserName = val
}

// SetVideos sets the value of Videos.
func (s *UsageByUserDto) SetVideos(val int) {
	s.Videos = val
}

// Ref: #/components/schemas/UserAdminCreateDto
type UserAdminCreateDto struct {
	AvatarColor          OptNilUserAvatarColor `json:"avatarColor"`
	Email                string                `json:"email"`
	IsAdmin              OptBool               `json:"isAdmin"`
	Name                 string                `json:"name"`
	Notify               OptBool               `json:"notify"`
	Password             string                `json:"password"`
	QuotaSizeInBytes     OptNilInt64           `json:"quotaSizeInBytes"`
	ShouldChangePassword OptBool               `json:"shouldChangePassword"`
	StorageLabel         OptNilString          `json:"storageLabel"`
}

// GetAvatarColor returns the value of AvatarColor.
func (s *UserAdminCreateDto) GetAvatarColor() OptNilUserAvatarColor {
	return s.AvatarColor
}

// GetEmail returns the value of Email.
func (s *UserAdminCreateDto) GetEmail() string {
	return s.Email
}

// GetIsAdmin returns the value of IsAdmin.
func (s *UserAdminCreateDto) GetIsAdmin() OptBool {
	return s.IsAdmin
}

// GetName returns the value of Name.
func (s *UserAdminCreateDto) GetName() string {
	return s.Name
}

// GetNotify returns the value of Notify.
func (s *UserAdminCreateDto) GetNotify() OptBool {
	return s.Notify
}

// GetPassword returns the value of Password.
func (s *UserAdminCreateDto) GetPassword() string {
	return s.Password
}

// GetQuotaSizeInBytes returns the value of QuotaSizeInBytes.
func (s *UserAdminCreateDto) GetQuotaSizeInBytes() OptNilInt64 {
	return s.QuotaSizeInBytes
}

// GetShouldChangePassword returns the value of ShouldChangePassword.
func (s *UserAdminCreateDto) GetShouldChangePassword() OptBool {
	return s.ShouldChangePassword
}

// GetStorageLabel returns the value of StorageLabel.
func (s *UserAdminCreateDto) GetStorageLabel() OptNilString {
	return s.StorageLabel
}

// SetAvatarColor sets the value of AvatarColor.
func (s *UserAdminCreateDto) SetAvatarColor(val OptNilUserAvatarColor) {
	s.AvatarColor = val
}

// SetEmail sets the value of Email.
func (s *UserAdminCreateDto) SetEmail(val string) {
	s.Email = val
}

// SetIsAdmin sets the value of IsAdmin.
func (s *UserAdminCreateDto) SetIsAdmin(val OptBool) {
	s.IsAdmin = val
}

// SetName sets the value of Name.
func (s *UserAdminCreateDto) SetName(val string) {
	s.Name = val
}

// SetNotify sets the value of Notify.
func (s *UserAdminCreateDto) SetNotify(val OptBool) {
	s.Notify = val
}

// SetPassword sets the value of Password.
func (s *UserAdminCreateDto) SetPassword(val string) {
	s.Password = val
}

// SetQuotaSizeInBytes sets the value of QuotaSizeInBytes.
func (s *UserAdminCreateDto) SetQuotaSizeInBytes(val OptNilInt64) {
	s.QuotaSizeInBytes = val
}

// SetShouldChangePassword sets the value of ShouldChangePassword.
func (s *UserAdminCreateDto) SetShouldChangePassword(val OptBool) {
	s.ShouldChangePassword = val
}

// SetStorageLabel sets the value of StorageLabel.
func (s *UserAdminCreateDto) SetStorageLabel(val OptNilString) {
	s.StorageLabel = val
}

// Ref: #/components/schemas/UserAdminDeleteDto
type UserAdminDeleteDto struct {
	Force OptBool `json:"force"`
}

// GetForce returns the value of Force.
func (s *UserAdminDeleteDto) GetForce() OptBool {
	return s.Force
}

// SetForce sets the value of Force.
func (s *UserAdminDeleteDto) SetForce(val OptBool) {
	s.Force = val
}

// Ref: #/components/schemas/UserAdminResponseDto
type UserAdminResponseDto struct {
	AvatarColor          UserAvatarColor `json:"avatarColor"`
	CreatedAt            time.Time       `json:"createdAt"`
	DeletedAt            NilDateTime     `json:"deletedAt"`
	Email                string          `json:"email"`
	ID                   string          `json:"id"`
	IsAdmin              bool            `json:"isAdmin"`
	License              NilUserLicense  `json:"license"`
	Name                 string          `json:"name"`
	OauthId              string          `json:"oauthId"`
	ProfileChangedAt     time.Time       `json:"profileChangedAt"`
	ProfileImagePath     string          `json:"profileImagePath"`
	QuotaSizeInBytes     NilInt64        `json:"quotaSizeInBytes"`
	QuotaUsageInBytes    NilInt64        `json:"quotaUsageInBytes"`
	ShouldChangePassword bool            `json:"shouldChangePassword"`
	Status               UserStatus      `json:"status"`
	StorageLabel         NilString       `json:"storageLabel"`
	UpdatedAt            time.Time       `json:"updatedAt"`
}

// GetAvatarColor returns the value of AvatarColor.
func (s *UserAdminResponseDto) GetAvatarColor() UserAvatarColor {
	return s.AvatarColor
}

// GetCreatedAt returns the value of CreatedAt.
func (s *UserAdminResponseDto) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetDeletedAt returns the value of DeletedAt.
func (s *UserAdminResponseDto) GetDeletedAt() NilDateTime {
	return s.DeletedAt
}

// GetEmail returns the value of Email.
func (s *UserAdminResponseDto) GetEmail() string {
	return s.Email
}

// GetID returns the value of ID.
func (s *UserAdminResponseDto) GetID() string {
	return s.ID
}

// GetIsAdmin returns the value of IsAdmin.
func (s *UserAdminResponseDto) GetIsAdmin() bool {
	return s.IsAdmin
}

// GetLicense returns the value of License.
func (s *UserAdminResponseDto) GetLicense() NilUserLicense {
	return s.License
}

// GetName returns the value of Name.
func (s *UserAdminResponseDto) GetName() string {
	return s.Name
}

// GetOauthId returns the value of OauthId.
func (s *UserAdminResponseDto) GetOauthId() string {
	return s.OauthId
}

// GetProfileChangedAt returns the value of ProfileChangedAt.
func (s *UserAdminResponseDto) GetProfileChangedAt() time.Time {
	return s.ProfileChangedAt
}

// GetProfileImagePath returns the value of ProfileImagePath.
func (s *UserAdminResponseDto) GetProfileImagePath() string {
	return s.ProfileImagePath
}

// GetQuotaSizeInBytes returns the value of QuotaSizeInBytes.
func (s *UserAdminResponseDto) GetQuotaSizeInBytes() NilInt64 {
	return s.QuotaSizeInBytes
}

// GetQuotaUsageInBytes returns the value of QuotaUsageInBytes.
func (s *UserAdminResponseDto) GetQuotaUsageInBytes() NilInt64 {
	return s.QuotaUsageInBytes
}

// GetShouldChangePassword returns the value of ShouldChangePassword.
func (s *UserAdminResponseDto) GetShouldChangePassword() bool {
	return s.ShouldChangePassword
}

// GetStatus returns the value of Status.
func (s *UserAdminResponseDto) GetStatus() UserStatus {
	return s.Status
}

// GetStorageLabel returns the value of StorageLabel.
func (s *UserAdminResponseDto) GetStorageLabel() NilString {
	return s.StorageLabel
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *UserAdminResponseDto) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// SetAvatarColor sets the value of AvatarColor.
func (s *UserAdminResponseDto) SetAvatarColor(val UserAvatarColor) {
	s.AvatarColor = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *UserAdminResponseDto) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetDeletedAt sets the value of DeletedAt.
func (s *UserAdminResponseDto) SetDeletedAt(val NilDateTime) {
	s.DeletedAt = val
}

// SetEmail sets the value of Email.
func (s *UserAdminResponseDto) SetEmail(val string) {
	s.Email = val
}

// SetID sets the value of ID.
func (s *UserAdminResponseDto) SetID(val string) {
	s.ID = val
}

// SetIsAdmin sets the value of IsAdmin.
func (s *UserAdminResponseDto) SetIsAdmin(val bool) {
	s.IsAdmin = val
}

// SetLicense sets the value of License.
func (s *UserAdminResponseDto) SetLicense(val NilUserLicense) {
	s.License = val
}

// SetName sets the value of Name.
func (s *UserAdminResponseDto) SetName(val string) {
	s.Name = val
}

// SetOauthId sets the value of OauthId.
func (s *UserAdminResponseDto) SetOauthId(val string) {
	s.OauthId = val
}

// SetProfileChangedAt sets the value of ProfileChangedAt.
func (s *UserAdminResponseDto) SetProfileChangedAt(val time.Time) {
	s.ProfileChangedAt = val
}

// SetProfileImagePath sets the value of ProfileImagePath.
func (s *UserAdminResponseDto) SetProfileImagePath(val string) {
	s.ProfileImagePath = val
}

// SetQuotaSizeInBytes sets the value of QuotaSizeInBytes.
func (s *UserAdminResponseDto) SetQuotaSizeInBytes(val NilInt64) {
	s.QuotaSizeInBytes = val
}

// SetQuotaUsageInBytes sets the value of QuotaUsageInBytes.
func (s *UserAdminResponseDto) SetQuotaUsageInBytes(val NilInt64) {
	s.QuotaUsageInBytes = val
}

// SetShouldChangePassword sets the value of ShouldChangePassword.
func (s *UserAdminResponseDto) SetShouldChangePassword(val bool) {
	s.ShouldChangePassword = val
}

// SetStatus sets the value of Status.
func (s *UserAdminResponseDto) SetStatus(val UserStatus) {
	s.Status = val
}

// SetStorageLabel sets the value of StorageLabel.
func (s *UserAdminResponseDto) SetStorageLabel(val NilString) {
	s.StorageLabel = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *UserAdminResponseDto) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// Ref: #/components/schemas/UserAdminUpdateDto
type UserAdminUpdateDto struct {
	AvatarColor          OptNilUserAvatarColor `json:"avatarColor"`
	Email                OptString             `json:"email"`
	IsAdmin              OptBool               `json:"isAdmin"`
	Name                 OptString             `json:"name"`
	Password             OptString             `json:"password"`
	PinCode              OptNilString          `json:"pinCode"`
	QuotaSizeInBytes     OptNilInt64           `json:"quotaSizeInBytes"`
	ShouldChangePassword OptBool               `json:"shouldChangePassword"`
	StorageLabel         OptNilString          `json:"storageLabel"`
}

// GetAvatarColor returns the value of AvatarColor.
func (s *UserAdminUpdateDto) GetAvatarColor() OptNilUserAvatarColor {
	return s.AvatarColor
}

// GetEmail returns the value of Email.
func (s *UserAdminUpdateDto) GetEmail() OptString {
	return s.Email
}

// GetIsAdmin returns the value of IsAdmin.
func (s *UserAdminUpdateDto) GetIsAdmin() OptBool {
	return s.IsAdmin
}

// GetName returns the value of Name.
func (s *UserAdminUpdateDto) GetName() OptString {
	return s.Name
}

// GetPassword returns the value of Password.
func (s *UserAdminUpdateDto) GetPassword() OptString {
	return s.Password
}

// GetPinCode returns the value of PinCode.
func (s *UserAdminUpdateDto) GetPinCode() OptNilString {
	return s.PinCode
}

// GetQuotaSizeInBytes returns the value of QuotaSizeInBytes.
func (s *UserAdminUpdateDto) GetQuotaSizeInBytes() OptNilInt64 {
	return s.QuotaSizeInBytes
}

// GetShouldChangePassword returns the value of ShouldChangePassword.
func (s *UserAdminUpdateDto) GetShouldChangePassword() OptBool {
	return s.ShouldChangePassword
}

// GetStorageLabel returns the value of StorageLabel.
func (s *UserAdminUpdateDto) GetStorageLabel() OptNilString {
	return s.StorageLabel
}

// SetAvatarColor sets the value of AvatarColor.
func (s *UserAdminUpdateDto) SetAvatarColor(val OptNilUserAvatarColor) {
	s.AvatarColor = val
}

// SetEmail sets the value of Email.
func (s *UserAdminUpdateDto) SetEmail(val OptString) {
	s.Email = val
}

// SetIsAdmin sets the value of IsAdmin.
func (s *UserAdminUpdateDto) SetIsAdmin(val OptBool) {
	s.IsAdmin = val
}

// SetName sets the value of Name.
func (s *UserAdminUpdateDto) SetName(val OptString) {
	s.Name = val
}

// SetPassword sets the value of Password.
func (s *UserAdminUpdateDto) SetPassword(val OptString) {
	s.Password = val
}

// SetPinCode sets the value of PinCode.
func (s *UserAdminUpdateDto) SetPinCode(val OptNilString) {
	s.PinCode = val
}

// SetQuotaSizeInBytes sets the value of QuotaSizeInBytes.
func (s *UserAdminUpdateDto) SetQuotaSizeInBytes(val OptNilInt64) {
	s.QuotaSizeInBytes = val
}

// SetShouldChangePassword sets the value of ShouldChangePassword.
func (s *UserAdminUpdateDto) SetShouldChangePassword(val OptBool) {
	s.ShouldChangePassword = val
}

// SetStorageLabel sets the value of StorageLabel.
func (s *UserAdminUpdateDto) SetStorageLabel(val OptNilString) {
	s.StorageLabel = val
}

// Ref: #/components/schemas/UserAvatarColor
type UserAvatarColor string

const (
	UserAvatarColorPrimary UserAvatarColor = "primary"
	UserAvatarColorPink    UserAvatarColor = "pink"
	UserAvatarColorRed     UserAvatarColor = "red"
	UserAvatarColorYellow  UserAvatarColor = "yellow"
	UserAvatarColorBlue    UserAvatarColor = "blue"
	UserAvatarColorGreen   UserAvatarColor = "green"
	UserAvatarColorPurple  UserAvatarColor = "purple"
	UserAvatarColorOrange  UserAvatarColor = "orange"
	UserAvatarColorGray    UserAvatarColor = "gray"
	UserAvatarColorAmber   UserAvatarColor = "amber"
)

// AllValues returns all UserAvatarColor values.
func (UserAvatarColor) AllValues() []UserAvatarColor {
	return []UserAvatarColor{
		UserAvatarColorPrimary,
		UserAvatarColorPink,
		UserAvatarColorRed,
		UserAvatarColorYellow,
		UserAvatarColorBlue,
		UserAvatarColorGreen,
		UserAvatarColorPurple,
		UserAvatarColorOrange,
		UserAvatarColorGray,
		UserAvatarColorAmber,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s UserAvatarColor) MarshalText() ([]byte, error) {
	switch s {
	case UserAvatarColorPrimary:
		return []byte(s), nil
	case UserAvatarColorPink:
		return []byte(s), nil
	case UserAvatarColorRed:
		return []byte(s), nil
	case UserAvatarColorYellow:
		return []byte(s), nil
	case UserAvatarColorBlue:
		return []byte(s), nil
	case UserAvatarColorGreen:
		return []byte(s), nil
	case UserAvatarColorPurple:
		return []byte(s), nil
	case UserAvatarColorOrange:
		return []byte(s), nil
	case UserAvatarColorGray:
		return []byte(s), nil
	case UserAvatarColorAmber:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *UserAvatarColor) UnmarshalText(data []byte) error {
	switch UserAvatarColor(data) {
	case UserAvatarColorPrimary:
		*s = UserAvatarColorPrimary
		return nil
	case UserAvatarColorPink:
		*s = UserAvatarColorPink
		return nil
	case UserAvatarColorRed:
		*s = UserAvatarColorRed
		return nil
	case UserAvatarColorYellow:
		*s = UserAvatarColorYellow
		return nil
	case UserAvatarColorBlue:
		*s = UserAvatarColorBlue
		return nil
	case UserAvatarColorGreen:
		*s = UserAvatarColorGreen
		return nil
	case UserAvatarColorPurple:
		*s = UserAvatarColorPurple
		return nil
	case UserAvatarColorOrange:
		*s = UserAvatarColorOrange
		return nil
	case UserAvatarColorGray:
		*s = UserAvatarColorGray
		return nil
	case UserAvatarColorAmber:
		*s = UserAvatarColorAmber
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/UserLicense
type UserLicense struct {
	ActivatedAt   time.Time `json:"activatedAt"`
	ActivationKey string    `json:"activationKey"`
	LicenseKey    string    `json:"licenseKey"`
}

// GetActivatedAt returns the value of ActivatedAt.
func (s *UserLicense) GetActivatedAt() time.Time {
	return s.ActivatedAt
}

// GetActivationKey returns the value of ActivationKey.
func (s *UserLicense) GetActivationKey() string {
	return s.ActivationKey
}

// GetLicenseKey returns the value of LicenseKey.
func (s *UserLicense) GetLicenseKey() string {
	return s.LicenseKey
}

// SetActivatedAt sets the value of ActivatedAt.
func (s *UserLicense) SetActivatedAt(val time.Time) {
	s.ActivatedAt = val
}

// SetActivationKey sets the value of ActivationKey.
func (s *UserLicense) SetActivationKey(val string) {
	s.ActivationKey = val
}

// SetLicenseKey sets the value of LicenseKey.
func (s *UserLicense) SetLicenseKey(val string) {
	s.LicenseKey = val
}

// Ref: #/components/schemas/UserPreferencesResponseDto
type UserPreferencesResponseDto struct {
	Albums             AlbumsResponse             `json:"albums"`
	Cast               CastResponse               `json:"cast"`
	Download           DownloadResponse           `json:"download"`
	EmailNotifications EmailNotificationsResponse `json:"emailNotifications"`
	Folders            FoldersResponse            `json:"folders"`
	Memories           MemoriesResponse           `json:"memories"`
	People             PeopleResponse             `json:"people"`
	Purchase           PurchaseResponse           `json:"purchase"`
	Ratings            RatingsResponse            `json:"ratings"`
	SharedLinks        SharedLinksResponse        `json:"sharedLinks"`
	Tags               TagsResponse               `json:"tags"`
}

// GetAlbums returns the value of Albums.
func (s *UserPreferencesResponseDto) GetAlbums() AlbumsResponse {
	return s.Albums
}

// GetCast returns the value of Cast.
func (s *UserPreferencesResponseDto) GetCast() CastResponse {
	return s.Cast
}

// GetDownload returns the value of Download.
func (s *UserPreferencesResponseDto) GetDownload() DownloadResponse {
	return s.Download
}

// GetEmailNotifications returns the value of EmailNotifications.
func (s *UserPreferencesResponseDto) GetEmailNotifications() EmailNotificationsResponse {
	return s.EmailNotifications
}

// GetFolders returns the value of Folders.
func (s *UserPreferencesResponseDto) GetFolders() FoldersResponse {
	return s.Folders
}

// GetMemories returns the value of Memories.
func (s *UserPreferencesResponseDto) GetMemories() MemoriesResponse {
	return s.Memories
}

// GetPeople returns the value of People.
func (s *UserPreferencesResponseDto) GetPeople() PeopleResponse {
	return s.People
}

// GetPurchase returns the value of Purchase.
func (s *UserPreferencesResponseDto) GetPurchase() PurchaseResponse {
	return s.Purchase
}

// GetRatings returns the value of Ratings.
func (s *UserPreferencesResponseDto) GetRatings() RatingsResponse {
	return s.Ratings
}

// GetSharedLinks returns the value of SharedLinks.
func (s *UserPreferencesResponseDto) GetSharedLinks() SharedLinksResponse {
	return s.SharedLinks
}

// GetTags returns the value of Tags.
func (s *UserPreferencesResponseDto) GetTags() TagsResponse {
	return s.Tags
}

// SetAlbums sets the value of Albums.
func (s *UserPreferencesResponseDto) SetAlbums(val AlbumsResponse) {
	s.Albums = val
}

// SetCast sets the value of Cast.
func (s *UserPreferencesResponseDto) SetCast(val CastResponse) {
	s.Cast = val
}

// SetDownload sets the value of Download.
func (s *UserPreferencesResponseDto) SetDownload(val DownloadResponse) {
	s.Download = val
}

// SetEmailNotifications sets the value of EmailNotifications.
func (s *UserPreferencesResponseDto) SetEmailNotifications(val EmailNotificationsResponse) {
	s.EmailNotifications = val
}

// SetFolders sets the value of Folders.
func (s *UserPreferencesResponseDto) SetFolders(val FoldersResponse) {
	s.Folders = val
}

// SetMemories sets the value of Memories.
func (s *UserPreferencesResponseDto) SetMemories(val MemoriesResponse) {
	s.Memories = val
}

// SetPeople sets the value of People.
func (s *UserPreferencesResponseDto) SetPeople(val PeopleResponse) {
	s.People = val
}

// SetPurchase sets the value of Purchase.
func (s *UserPreferencesResponseDto) SetPurchase(val PurchaseResponse) {
	s.Purchase = val
}

// SetRatings sets the value of Ratings.
func (s *UserPreferencesResponseDto) SetRatings(val RatingsResponse) {
	s.Ratings = val
}

// SetSharedLinks sets the value of SharedLinks.
func (s *UserPreferencesResponseDto) SetSharedLinks(val SharedLinksResponse) {
	s.SharedLinks = val
}

// SetTags sets the value of Tags.
func (s *UserPreferencesResponseDto) SetTags(val TagsResponse) {
	s.Tags = val
}

// Ref: #/components/schemas/UserPreferencesUpdateDto
type UserPreferencesUpdateDto struct {
	Albums             OptAlbumsUpdate             `json:"albums"`
	Avatar             OptAvatarUpdate             `json:"avatar"`
	Cast               OptCastUpdate               `json:"cast"`
	Download           OptDownloadUpdate           `json:"download"`
	EmailNotifications OptEmailNotificationsUpdate `json:"emailNotifications"`
	Folders            OptFoldersUpdate            `json:"folders"`
	Memories           OptMemoriesUpdate           `json:"memories"`
	People             OptPeopleUpdate             `json:"people"`
	Purchase           OptPurchaseUpdate           `json:"purchase"`
	Ratings            OptRatingsUpdate            `json:"ratings"`
	SharedLinks        OptSharedLinksUpdate        `json:"sharedLinks"`
	Tags               OptTagsUpdate               `json:"tags"`
}

// GetAlbums returns the value of Albums.
func (s *UserPreferencesUpdateDto) GetAlbums() OptAlbumsUpdate {
	return s.Albums
}

// GetAvatar returns the value of Avatar.
func (s *UserPreferencesUpdateDto) GetAvatar() OptAvatarUpdate {
	return s.Avatar
}

// GetCast returns the value of Cast.
func (s *UserPreferencesUpdateDto) GetCast() OptCastUpdate {
	return s.Cast
}

// GetDownload returns the value of Download.
func (s *UserPreferencesUpdateDto) GetDownload() OptDownloadUpdate {
	return s.Download
}

// GetEmailNotifications returns the value of EmailNotifications.
func (s *UserPreferencesUpdateDto) GetEmailNotifications() OptEmailNotificationsUpdate {
	return s.EmailNotifications
}

// GetFolders returns the value of Folders.
func (s *UserPreferencesUpdateDto) GetFolders() OptFoldersUpdate {
	return s.Folders
}

// GetMemories returns the value of Memories.
func (s *UserPreferencesUpdateDto) GetMemories() OptMemoriesUpdate {
	return s.Memories
}

// GetPeople returns the value of People.
func (s *UserPreferencesUpdateDto) GetPeople() OptPeopleUpdate {
	return s.People
}

// GetPurchase returns the value of Purchase.
func (s *UserPreferencesUpdateDto) GetPurchase() OptPurchaseUpdate {
	return s.Purchase
}

// GetRatings returns the value of Ratings.
func (s *UserPreferencesUpdateDto) GetRatings() OptRatingsUpdate {
	return s.Ratings
}

// GetSharedLinks returns the value of SharedLinks.
func (s *UserPreferencesUpdateDto) GetSharedLinks() OptSharedLinksUpdate {
	return s.SharedLinks
}

// GetTags returns the value of Tags.
func (s *UserPreferencesUpdateDto) GetTags() OptTagsUpdate {
	return s.Tags
}

// SetAlbums sets the value of Albums.
func (s *UserPreferencesUpdateDto) SetAlbums(val OptAlbumsUpdate) {
	s.Albums = val
}

// SetAvatar sets the value of Avatar.
func (s *UserPreferencesUpdateDto) SetAvatar(val OptAvatarUpdate) {
	s.Avatar = val
}

// SetCast sets the value of Cast.
func (s *UserPreferencesUpdateDto) SetCast(val OptCastUpdate) {
	s.Cast = val
}

// SetDownload sets the value of Download.
func (s *UserPreferencesUpdateDto) SetDownload(val OptDownloadUpdate) {
	s.Download = val
}

// SetEmailNotifications sets the value of EmailNotifications.
func (s *UserPreferencesUpdateDto) SetEmailNotifications(val OptEmailNotificationsUpdate) {
	s.EmailNotifications = val
}

// SetFolders sets the value of Folders.
func (s *UserPreferencesUpdateDto) SetFolders(val OptFoldersUpdate) {
	s.Folders = val
}

// SetMemories sets the value of Memories.
func (s *UserPreferencesUpdateDto) SetMemories(val OptMemoriesUpdate) {
	s.Memories = val
}

// SetPeople sets the value of People.
func (s *UserPreferencesUpdateDto) SetPeople(val OptPeopleUpdate) {
	s.People = val
}

// SetPurchase sets the value of Purchase.
func (s *UserPreferencesUpdateDto) SetPurchase(val OptPurchaseUpdate) {
	s.Purchase = val
}

// SetRatings sets the value of Ratings.
func (s *UserPreferencesUpdateDto) SetRatings(val OptRatingsUpdate) {
	s.Ratings = val
}

// SetSharedLinks sets the value of SharedLinks.
func (s *UserPreferencesUpdateDto) SetSharedLinks(val OptSharedLinksUpdate) {
	s.SharedLinks = val
}

// SetTags sets the value of Tags.
func (s *UserPreferencesUpdateDto) SetTags(val OptTagsUpdate) {
	s.Tags = val
}

// Ref: #/components/schemas/UserResponseDto
type UserResponseDto struct {
	AvatarColor      UserAvatarColor `json:"avatarColor"`
	Email            string          `json:"email"`
	ID               string          `json:"id"`
	Name             string          `json:"name"`
	ProfileChangedAt time.Time       `json:"profileChangedAt"`
	ProfileImagePath string          `json:"profileImagePath"`
}

// GetAvatarColor returns the value of AvatarColor.
func (s *UserResponseDto) GetAvatarColor() UserAvatarColor {
	return s.AvatarColor
}

// GetEmail returns the value of Email.
func (s *UserResponseDto) GetEmail() string {
	return s.Email
}

// GetID returns the value of ID.
func (s *UserResponseDto) GetID() string {
	return s.ID
}

// GetName returns the value of Name.
func (s *UserResponseDto) GetName() string {
	return s.Name
}

// GetProfileChangedAt returns the value of ProfileChangedAt.
func (s *UserResponseDto) GetProfileChangedAt() time.Time {
	return s.ProfileChangedAt
}

// GetProfileImagePath returns the value of ProfileImagePath.
func (s *UserResponseDto) GetProfileImagePath() string {
	return s.ProfileImagePath
}

// SetAvatarColor sets the value of AvatarColor.
func (s *UserResponseDto) SetAvatarColor(val UserAvatarColor) {
	s.AvatarColor = val
}

// SetEmail sets the value of Email.
func (s *UserResponseDto) SetEmail(val string) {
	s.Email = val
}

// SetID sets the value of ID.
func (s *UserResponseDto) SetID(val string) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *UserResponseDto) SetName(val string) {
	s.Name = val
}

// SetProfileChangedAt sets the value of ProfileChangedAt.
func (s *UserResponseDto) SetProfileChangedAt(val time.Time) {
	s.ProfileChangedAt = val
}

// SetProfileImagePath sets the value of ProfileImagePath.
func (s *UserResponseDto) SetProfileImagePath(val string) {
	s.ProfileImagePath = val
}

// Ref: #/components/schemas/UserStatus
type UserStatus string

const (
	UserStatusActive   UserStatus = "active"
	UserStatusRemoving UserStatus = "removing"
	UserStatusDeleted  UserStatus = "deleted"
)

// AllValues returns all UserStatus values.
func (UserStatus) AllValues() []UserStatus {
	return []UserStatus{
		UserStatusActive,
		UserStatusRemoving,
		UserStatusDeleted,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s UserStatus) MarshalText() ([]byte, error) {
	switch s {
	case UserStatusActive:
		return []byte(s), nil
	case UserStatusRemoving:
		return []byte(s), nil
	case UserStatusDeleted:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *UserStatus) UnmarshalText(data []byte) error {
	switch UserStatus(data) {
	case UserStatusActive:
		*s = UserStatusActive
		return nil
	case UserStatusRemoving:
		*s = UserStatusRemoving
		return nil
	case UserStatusDeleted:
		*s = UserStatusDeleted
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/UserUpdateMeDto
type UserUpdateMeDto struct {
	AvatarColor OptNilUserAvatarColor `json:"avatarColor"`
	Email       OptString             `json:"email"`
	Name        OptString             `json:"name"`
	Password    OptString             `json:"password"`
}

// GetAvatarColor returns the value of AvatarColor.
func (s *UserUpdateMeDto) GetAvatarColor() OptNilUserAvatarColor {
	return s.AvatarColor
}

// GetEmail returns the value of Email.
func (s *UserUpdateMeDto) GetEmail() OptString {
	return s.Email
}

// GetName returns the value of Name.
func (s *UserUpdateMeDto) GetName() OptString {
	return s.Name
}

// GetPassword returns the value of Password.
func (s *UserUpdateMeDto) GetPassword() OptString {
	return s.Password
}

// SetAvatarColor sets the value of AvatarColor.
func (s *UserUpdateMeDto) SetAvatarColor(val OptNilUserAvatarColor) {
	s.AvatarColor = val
}

// SetEmail sets the value of Email.
func (s *UserUpdateMeDto) SetEmail(val OptString) {
	s.Email = val
}

// SetName sets the value of Name.
func (s *UserUpdateMeDto) SetName(val OptString) {
	s.Name = val
}

// SetPassword sets the value of Password.
func (s *UserUpdateMeDto) SetPassword(val OptString) {
	s.Password = val
}

// Ref: #/components/schemas/ValidateAccessTokenResponseDto
type ValidateAccessTokenResponseDto struct {
	AuthStatus bool `json:"authStatus"`
}

// GetAuthStatus returns the value of AuthStatus.
func (s *ValidateAccessTokenResponseDto) GetAuthStatus() bool {
	return s.AuthStatus
}

// SetAuthStatus sets the value of AuthStatus.
func (s *ValidateAccessTokenResponseDto) SetAuthStatus(val bool) {
	s.AuthStatus = val
}

// Ref: #/components/schemas/ValidateLibraryDto
type ValidateLibraryDto struct {
	ExclusionPatterns []string `json:"exclusionPatterns"`
	ImportPaths       []string `json:"importPaths"`
}

// GetExclusionPatterns returns the value of ExclusionPatterns.
func (s *ValidateLibraryDto) GetExclusionPatterns() []string {
	return s.ExclusionPatterns
}

// GetImportPaths returns the value of ImportPaths.
func (s *ValidateLibraryDto) GetImportPaths() []string {
	return s.ImportPaths
}

// SetExclusionPatterns sets the value of ExclusionPatterns.
func (s *ValidateLibraryDto) SetExclusionPatterns(val []string) {
	s.ExclusionPatterns = val
}

// SetImportPaths sets the value of ImportPaths.
func (s *ValidateLibraryDto) SetImportPaths(val []string) {
	s.ImportPaths = val
}

// Ref: #/components/schemas/ValidateLibraryImportPathResponseDto
type ValidateLibraryImportPathResponseDto struct {
	ImportPath string    `json:"importPath"`
	IsValid    bool      `json:"isValid"`
	Message    OptString `json:"message"`
}

// GetImportPath returns the value of ImportPath.
func (s *ValidateLibraryImportPathResponseDto) GetImportPath() string {
	return s.ImportPath
}

// GetIsValid returns the value of IsValid.
func (s *ValidateLibraryImportPathResponseDto) GetIsValid() bool {
	return s.IsValid
}

// GetMessage returns the value of Message.
func (s *ValidateLibraryImportPathResponseDto) GetMessage() OptString {
	return s.Message
}

// SetImportPath sets the value of ImportPath.
func (s *ValidateLibraryImportPathResponseDto) SetImportPath(val string) {
	s.ImportPath = val
}

// SetIsValid sets the value of IsValid.
func (s *ValidateLibraryImportPathResponseDto) SetIsValid(val bool) {
	s.IsValid = val
}

// SetMessage sets the value of Message.
func (s *ValidateLibraryImportPathResponseDto) SetMessage(val OptString) {
	s.Message = val
}

// Ref: #/components/schemas/ValidateLibraryResponseDto
type ValidateLibraryResponseDto struct {
	ImportPaths []ValidateLibraryImportPathResponseDto `json:"importPaths"`
}

// GetImportPaths returns the value of ImportPaths.
func (s *ValidateLibraryResponseDto) GetImportPaths() []ValidateLibraryImportPathResponseDto {
	return s.ImportPaths
}

// SetImportPaths sets the value of ImportPaths.
func (s *ValidateLibraryResponseDto) SetImportPaths(val []ValidateLibraryImportPathResponseDto) {
	s.ImportPaths = val
}

// Ref: #/components/schemas/VersionCheckStateResponseDto
type VersionCheckStateResponseDto struct {
	CheckedAt      NilString `json:"checkedAt"`
	ReleaseVersion NilString `json:"releaseVersion"`
}

// GetCheckedAt returns the value of CheckedAt.
func (s *VersionCheckStateResponseDto) GetCheckedAt() NilString {
	return s.CheckedAt
}

// GetReleaseVersion returns the value of ReleaseVersion.
func (s *VersionCheckStateResponseDto) GetReleaseVersion() NilString {
	return s.ReleaseVersion
}

// SetCheckedAt sets the value of CheckedAt.
func (s *VersionCheckStateResponseDto) SetCheckedAt(val NilString) {
	s.CheckedAt = val
}

// SetReleaseVersion sets the value of ReleaseVersion.
func (s *VersionCheckStateResponseDto) SetReleaseVersion(val NilString) {
	s.ReleaseVersion = val
}

// Ref: #/components/schemas/VideoCodec
type VideoCodec string

const (
	VideoCodecH264 VideoCodec = "h264"
	VideoCodecHevc VideoCodec = "hevc"
	VideoCodecVp9  VideoCodec = "vp9"
	VideoCodecAv1  VideoCodec = "av1"
)

// AllValues returns all VideoCodec values.
func (VideoCodec) AllValues() []VideoCodec {
	return []VideoCodec{
		VideoCodecH264,
		VideoCodecHevc,
		VideoCodecVp9,
		VideoCodecAv1,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s VideoCodec) MarshalText() ([]byte, error) {
	switch s {
	case VideoCodecH264:
		return []byte(s), nil
	case VideoCodecHevc:
		return []byte(s), nil
	case VideoCodecVp9:
		return []byte(s), nil
	case VideoCodecAv1:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *VideoCodec) UnmarshalText(data []byte) error {
	switch VideoCodec(data) {
	case VideoCodecH264:
		*s = VideoCodecH264
		return nil
	case VideoCodecHevc:
		*s = VideoCodecHevc
		return nil
	case VideoCodecVp9:
		*s = VideoCodecVp9
		return nil
	case VideoCodecAv1:
		*s = VideoCodecAv1
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/VideoContainer
type VideoContainer string

const (
	VideoContainerMov  VideoContainer = "mov"
	VideoContainerMP4  VideoContainer = "mp4"
	VideoContainerOgg  VideoContainer = "ogg"
	VideoContainerWebm VideoContainer = "webm"
)

// AllValues returns all VideoContainer values.
func (VideoContainer) AllValues() []VideoContainer {
	return []VideoContainer{
		VideoContainerMov,
		VideoContainerMP4,
		VideoContainerOgg,
		VideoContainerWebm,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s VideoContainer) MarshalText() ([]byte, error) {
	switch s {
	case VideoContainerMov:
		return []byte(s), nil
	case VideoContainerMP4:
		return []byte(s), nil
	case VideoContainerOgg:
		return []byte(s), nil
	case VideoContainerWebm:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *VideoContainer) UnmarshalText(data []byte) error {
	switch VideoContainer(data) {
	case VideoContainerMov:
		*s = VideoContainerMov
		return nil
	case VideoContainerMP4:
		*s = VideoContainerMP4
		return nil
	case VideoContainerOgg:
		*s = VideoContainerOgg
		return nil
	case VideoContainerWebm:
		*s = VideoContainerWebm
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type ViewAssetOK struct {
	Data io.Reader
}

// Read reads data from the Data reader.
//
// Kept to satisfy the io.Reader interface.
func (s ViewAssetOK) Read(p []byte) (n int, err error) {
	if s.Data == nil {
		return 0, io.EOF
	}
	return s.Data.Read(p)
}
